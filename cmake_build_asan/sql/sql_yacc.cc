/* A Bison parser, made by GNU Bison 3.7.6.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30706

/* Bison version string.  */
#define YYBISON_VERSION "3.7.6"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Substitute the type names.  */
#define YYSTYPE         MY_SQL_PARSER_STYPE
#define YYLTYPE         MY_SQL_PARSER_LTYPE
/* Substitute the variable and function names.  */
#define yyparse         my_sql_parser_parse
#define yylex           my_sql_parser_lex
#define yyerror         my_sql_parser_error
#define yydebug         my_sql_parser_debug
#define yynerrs         my_sql_parser_nerrs

/* First part of user prologue.  */
#line 34 "/home/wuy/ShannonBase/sql/sql_yacc.yy"

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "mysql/binlog/event/binlog_event.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/strings/m_ctype.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql-common/json_dom.h"
#include "sql-common/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_connect.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa/sql_cmd_xa.h"                   // Sql_cmd_xa...
#include "sql_string.h"
#include "strcont.h"
#include "strings/sql_chars.h"
#include "strxnmov.h"
#include "thr_lock.h"
#include "violite.h"
#include "sql/tablesample.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int my_sql_parser_lex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(nullptr, YYTHD, nullptr, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)

#define CONTEXTUALIZE_VIEW(x)                           \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
    if (pc.finalize_query_expression())                                 \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be nullptr because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)

/**
  Many commands have a dedicated sub-class of Sql_cmd that
  has an execute() method that contains their code.
  Other commands' code is in sql_parse.cc's mysql_execute_command().
  For this last type of command, we can still create a
  dummy Sql_cmd object that won't have its execute(),
  well, executed, but may provide other valuable information
  such as their sql_cmd_type().
*/
#define MAKE_CMD_DCL_DUMMY()                           \
  do                                                   \
  {                                                    \
    assert(Lex->m_sql_cmd == nullptr);                 \
    Lex->m_sql_cmd= NEW_PTN Sql_cmd_dcl_dummy();       \
    if (!Lex->m_sql_cmd)                               \
      MYSQL_YYABORT;                                   \
    ((Sql_cmd_dcl_dummy *) Lex->m_sql_cmd)             \
      ->set_sql_command_code(Lex->sql_command);        \
  } while(0)

#define MAKE_CMD_DDL_DUMMY()                           \
  do                                                   \
  {                                                    \
    assert(Lex->m_sql_cmd == nullptr);                 \
    Lex->m_sql_cmd= NEW_PTN Sql_cmd_ddl_dummy();       \
    if (!Lex->m_sql_cmd)                               \
      MYSQL_YYABORT;                                   \
    ((Sql_cmd_ddl_dummy *) Lex->m_sql_cmd)             \
      ->set_sql_command_code(Lex->sql_command);        \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void my_sql_parser_error(YYLTYPE *location,
                         THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}

void warn_on_deprecated_user_defined_collation(
    THD *thd, const LEX_STRING collation_name) {
  if (collation_name.length == 0)
    return;
  CHARSET_INFO *collation = mysqld_collation_get_by_name(collation_name.str);
  if (collation && !(collation->state & MY_CS_COMPILED)) {
    push_warning_printf(thd, Sql_condition::SL_WARNING,
                        ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS,
                        ER_THD(thd, ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS),
                        collation->m_coll_name);
  }
}

// ODR violation here as well, so rename yysymbol_kind_t
#define yysymbol_kind_t my_sql_parser_symbol_kind_t


#line 599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "sql_yacc.h"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_ABORT_SYM = 3,                  /* ABORT_SYM  */
  YYSYMBOL_ACCESSIBLE_SYM = 4,             /* ACCESSIBLE_SYM  */
  YYSYMBOL_ACCOUNT_SYM = 5,                /* ACCOUNT_SYM  */
  YYSYMBOL_ACTION = 6,                     /* ACTION  */
  YYSYMBOL_ADD = 7,                        /* ADD  */
  YYSYMBOL_ADDDATE_SYM = 8,                /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 9,                  /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 10,                   /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 11,             /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 12,             /* ALGORITHM_SYM  */
  YYSYMBOL_ALL = 13,                       /* ALL  */
  YYSYMBOL_ALTER = 14,                     /* ALTER  */
  YYSYMBOL_ALWAYS_SYM = 15,                /* ALWAYS_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_271 = 16,        /* OBSOLETE_TOKEN_271  */
  YYSYMBOL_ANALYZE_SYM = 17,               /* ANALYZE_SYM  */
  YYSYMBOL_AND_AND_SYM = 18,               /* AND_AND_SYM  */
  YYSYMBOL_AND_SYM = 19,                   /* AND_SYM  */
  YYSYMBOL_ANY_SYM = 20,                   /* ANY_SYM  */
  YYSYMBOL_AS = 21,                        /* AS  */
  YYSYMBOL_ASC = 22,                       /* ASC  */
  YYSYMBOL_ASCII_SYM = 23,                 /* ASCII_SYM  */
  YYSYMBOL_ASENSITIVE_SYM = 24,            /* ASENSITIVE_SYM  */
  YYSYMBOL_AT_SYM = 25,                    /* AT_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 26,       /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 27,                  /* AUTO_INC  */
  YYSYMBOL_AVG_ROW_LENGTH = 28,            /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 29,                   /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 30,                /* BACKUP_SYM  */
  YYSYMBOL_BEFORE_SYM = 31,                /* BEFORE_SYM  */
  YYSYMBOL_BEGIN_SYM = 32,                 /* BEGIN_SYM  */
  YYSYMBOL_BETWEEN_SYM = 33,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT_SYM = 34,                /* BIGINT_SYM  */
  YYSYMBOL_BINARY_SYM = 35,                /* BINARY_SYM  */
  YYSYMBOL_BINLOG_SYM = 36,                /* BINLOG_SYM  */
  YYSYMBOL_BIN_NUM = 37,                   /* BIN_NUM  */
  YYSYMBOL_BIT_AND_SYM = 38,               /* BIT_AND_SYM  */
  YYSYMBOL_BIT_OR_SYM = 39,                /* BIT_OR_SYM  */
  YYSYMBOL_BIT_SYM = 40,                   /* BIT_SYM  */
  YYSYMBOL_BIT_XOR_SYM = 41,               /* BIT_XOR_SYM  */
  YYSYMBOL_BLOB_SYM = 42,                  /* BLOB_SYM  */
  YYSYMBOL_BLOCK_SYM = 43,                 /* BLOCK_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 44,               /* BOOLEAN_SYM  */
  YYSYMBOL_BOOL_SYM = 45,                  /* BOOL_SYM  */
  YYSYMBOL_BOTH = 46,                      /* BOTH  */
  YYSYMBOL_BTREE_SYM = 47,                 /* BTREE_SYM  */
  YYSYMBOL_BY = 48,                        /* BY  */
  YYSYMBOL_BYTE_SYM = 49,                  /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 50,                 /* CACHE_SYM  */
  YYSYMBOL_CALL_SYM = 51,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 52,                   /* CASCADE  */
  YYSYMBOL_CASCADED = 53,                  /* CASCADED  */
  YYSYMBOL_CASE_SYM = 54,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 55,                  /* CAST_SYM  */
  YYSYMBOL_CATALOG_NAME_SYM = 56,          /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 57,                 /* CHAIN_SYM  */
  YYSYMBOL_CHANGE = 58,                    /* CHANGE  */
  YYSYMBOL_CHANGED = 59,                   /* CHANGED  */
  YYSYMBOL_CHANNEL_SYM = 60,               /* CHANNEL_SYM  */
  YYSYMBOL_CHARSET = 61,                   /* CHARSET  */
  YYSYMBOL_CHAR_SYM = 62,                  /* CHAR_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 63,              /* CHECKSUM_SYM  */
  YYSYMBOL_CHECK_SYM = 64,                 /* CHECK_SYM  */
  YYSYMBOL_CIPHER_SYM = 65,                /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 66,          /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 67,                /* CLIENT_SYM  */
  YYSYMBOL_CLOSE_SYM = 68,                 /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 69,                  /* COALESCE  */
  YYSYMBOL_CODE_SYM = 70,                  /* CODE_SYM  */
  YYSYMBOL_COLLATE_SYM = 71,               /* COLLATE_SYM  */
  YYSYMBOL_COLLATION_SYM = 72,             /* COLLATION_SYM  */
  YYSYMBOL_COLUMNS = 73,                   /* COLUMNS  */
  YYSYMBOL_COLUMN_SYM = 74,                /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_FORMAT_SYM = 75,         /* COLUMN_FORMAT_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 76,           /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 77,               /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 78,             /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 79,                /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 80,               /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 81,            /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 82,            /* COMPRESSED_SYM  */
  YYSYMBOL_COMPRESSION_SYM = 83,           /* COMPRESSION_SYM  */
  YYSYMBOL_ENCRYPTION_SYM = 84,            /* ENCRYPTION_SYM  */
  YYSYMBOL_CONCURRENT = 85,                /* CONCURRENT  */
  YYSYMBOL_CONDITION_SYM = 86,             /* CONDITION_SYM  */
  YYSYMBOL_CONNECTION_SYM = 87,            /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 88,            /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT = 89,                /* CONSTRAINT  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 90,    /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 91,       /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 92,     /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 93,              /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 94,               /* CONTEXT_SYM  */
  YYSYMBOL_CONTINUE_SYM = 95,              /* CONTINUE_SYM  */
  YYSYMBOL_CONVERT_SYM = 96,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 97,                 /* COUNT_SYM  */
  YYSYMBOL_CPU_SYM = 98,                   /* CPU_SYM  */
  YYSYMBOL_CREATE = 99,                    /* CREATE  */
  YYSYMBOL_CROSS = 100,                    /* CROSS  */
  YYSYMBOL_CUBE_SYM = 101,                 /* CUBE_SYM  */
  YYSYMBOL_CURDATE = 102,                  /* CURDATE  */
  YYSYMBOL_CURRENT_SYM = 103,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_USER = 104,             /* CURRENT_USER  */
  YYSYMBOL_CURSOR_SYM = 105,               /* CURSOR_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 106,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CURTIME = 107,                  /* CURTIME  */
  YYSYMBOL_DATABASE = 108,                 /* DATABASE  */
  YYSYMBOL_DATABASES = 109,                /* DATABASES  */
  YYSYMBOL_DATAFILE_SYM = 110,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 111,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME_SYM = 112,             /* DATETIME_SYM  */
  YYSYMBOL_DATE_ADD_INTERVAL = 113,        /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 114,        /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DATE_SYM = 115,                 /* DATE_SYM  */
  YYSYMBOL_DAY_HOUR_SYM = 116,             /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 117,      /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 118,           /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 119,           /* DAY_SECOND_SYM  */
  YYSYMBOL_DAY_SYM = 120,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 121,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DECIMAL_NUM = 122,              /* DECIMAL_NUM  */
  YYSYMBOL_DECIMAL_SYM = 123,              /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_SYM = 124,              /* DECLARE_SYM  */
  YYSYMBOL_DEFAULT_SYM = 125,              /* DEFAULT_SYM  */
  YYSYMBOL_DEFAULT_AUTH_SYM = 126,         /* DEFAULT_AUTH_SYM  */
  YYSYMBOL_DEFINER_SYM = 127,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 128,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 129,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DELETE_SYM = 130,               /* DELETE_SYM  */
  YYSYMBOL_DESC = 131,                     /* DESC  */
  YYSYMBOL_DESCRIBE = 132,                 /* DESCRIBE  */
  YYSYMBOL_OBSOLETE_TOKEN_388 = 133,       /* OBSOLETE_TOKEN_388  */
  YYSYMBOL_DETERMINISTIC_SYM = 134,        /* DETERMINISTIC_SYM  */
  YYSYMBOL_DIAGNOSTICS_SYM = 135,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 136,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 137,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD_SYM = 138,              /* DISCARD_SYM  */
  YYSYMBOL_DISK_SYM = 139,                 /* DISK_SYM  */
  YYSYMBOL_DISTINCT = 140,                 /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 141,                  /* DIV_SYM  */
  YYSYMBOL_DOUBLE_SYM = 142,               /* DOUBLE_SYM  */
  YYSYMBOL_DO_SYM = 143,                   /* DO_SYM  */
  YYSYMBOL_DROP = 144,                     /* DROP  */
  YYSYMBOL_DUAL_SYM = 145,                 /* DUAL_SYM  */
  YYSYMBOL_DUMPFILE = 146,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 147,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 148,              /* DYNAMIC_SYM  */
  YYSYMBOL_EACH_SYM = 149,                 /* EACH_SYM  */
  YYSYMBOL_ELSE = 150,                     /* ELSE  */
  YYSYMBOL_ELSEIF_SYM = 151,               /* ELSEIF_SYM  */
  YYSYMBOL_ENABLE_SYM = 152,               /* ENABLE_SYM  */
  YYSYMBOL_ENCLOSED = 153,                 /* ENCLOSED  */
  YYSYMBOL_END = 154,                      /* END  */
  YYSYMBOL_ENDS_SYM = 155,                 /* ENDS_SYM  */
  YYSYMBOL_END_OF_INPUT = 156,             /* END_OF_INPUT  */
  YYSYMBOL_ENGINES_SYM = 157,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 158,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM_SYM = 159,                 /* ENUM_SYM  */
  YYSYMBOL_EQ = 160,                       /* EQ  */
  YYSYMBOL_EQUAL_SYM = 161,                /* EQUAL_SYM  */
  YYSYMBOL_ERROR_SYM = 162,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 163,                   /* ERRORS  */
  YYSYMBOL_ESCAPED = 164,                  /* ESCAPED  */
  YYSYMBOL_ESCAPE_SYM = 165,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 166,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 167,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 168,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 169,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 170,              /* EXECUTE_SYM  */
  YYSYMBOL_EXISTS = 171,                   /* EXISTS  */
  YYSYMBOL_EXIT_SYM = 172,                 /* EXIT_SYM  */
  YYSYMBOL_EXPANSION_SYM = 173,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPIRE_SYM = 174,               /* EXPIRE_SYM  */
  YYSYMBOL_EXPORT_SYM = 175,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 176,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 177,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_EXTRACT_SYM = 178,              /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 179,                /* FALSE_SYM  */
  YYSYMBOL_FAST_SYM = 180,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 181,               /* FAULTS_SYM  */
  YYSYMBOL_FETCH_SYM = 182,                /* FETCH_SYM  */
  YYSYMBOL_FILE_SYM = 183,                 /* FILE_SYM  */
  YYSYMBOL_FILE_BLOCK_SIZE_SYM = 184,      /* FILE_BLOCK_SIZE_SYM  */
  YYSYMBOL_FILTER_SYM = 185,               /* FILTER_SYM  */
  YYSYMBOL_FIRST_SYM = 186,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 187,                /* FIXED_SYM  */
  YYSYMBOL_FLOAT_NUM = 188,                /* FLOAT_NUM  */
  YYSYMBOL_FLOAT_SYM = 189,                /* FLOAT_SYM  */
  YYSYMBOL_FLUSH_SYM = 190,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 191,              /* FOLLOWS_SYM  */
  YYSYMBOL_FORCE_SYM = 192,                /* FORCE_SYM  */
  YYSYMBOL_FOREIGN = 193,                  /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 194,                  /* FOR_SYM  */
  YYSYMBOL_FORMAT_SYM = 195,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 196,                /* FOUND_SYM  */
  YYSYMBOL_FROM = 197,                     /* FROM  */
  YYSYMBOL_FULL = 198,                     /* FULL  */
  YYSYMBOL_FULLTEXT_SYM = 199,             /* FULLTEXT_SYM  */
  YYSYMBOL_FUNCTION_SYM = 200,             /* FUNCTION_SYM  */
  YYSYMBOL_GE = 201,                       /* GE  */
  YYSYMBOL_GENERAL = 202,                  /* GENERAL  */
  YYSYMBOL_GENERATED = 203,                /* GENERATED  */
  YYSYMBOL_GROUP_REPLICATION = 204,        /* GROUP_REPLICATION  */
  YYSYMBOL_GEOMETRYCOLLECTION_SYM = 205,   /* GEOMETRYCOLLECTION_SYM  */
  YYSYMBOL_GEOMETRY_SYM = 206,             /* GEOMETRY_SYM  */
  YYSYMBOL_GET_FORMAT = 207,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 208,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 209,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANT = 210,                    /* GRANT  */
  YYSYMBOL_GRANTS = 211,                   /* GRANTS  */
  YYSYMBOL_GROUP_SYM = 212,                /* GROUP_SYM  */
  YYSYMBOL_GROUP_CONCAT_SYM = 213,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_GT_SYM = 214,                   /* GT_SYM  */
  YYSYMBOL_HANDLER_SYM = 215,              /* HANDLER_SYM  */
  YYSYMBOL_HASH_SYM = 216,                 /* HASH_SYM  */
  YYSYMBOL_HAVING = 217,                   /* HAVING  */
  YYSYMBOL_HELP_SYM = 218,                 /* HELP_SYM  */
  YYSYMBOL_HEX_NUM = 219,                  /* HEX_NUM  */
  YYSYMBOL_HIGH_PRIORITY = 220,            /* HIGH_PRIORITY  */
  YYSYMBOL_HOST_SYM = 221,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 222,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 223,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 224,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 225,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_HOUR_SYM = 226,                 /* HOUR_SYM  */
  YYSYMBOL_IDENT = 227,                    /* IDENT  */
  YYSYMBOL_IDENTIFIED_SYM = 228,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IDENT_QUOTED = 229,             /* IDENT_QUOTED  */
  YYSYMBOL_IF = 230,                       /* IF  */
  YYSYMBOL_IGNORE_SYM = 231,               /* IGNORE_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 232,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMPORT = 233,                   /* IMPORT  */
  YYSYMBOL_INDEXES = 234,                  /* INDEXES  */
  YYSYMBOL_INDEX_SYM = 235,                /* INDEX_SYM  */
  YYSYMBOL_INFILE_SYM = 236,               /* INFILE_SYM  */
  YYSYMBOL_INITIAL_SIZE_SYM = 237,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INNER_SYM = 238,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 239,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 240,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT_SYM = 241,               /* INSERT_SYM  */
  YYSYMBOL_INSERT_METHOD = 242,            /* INSERT_METHOD  */
  YYSYMBOL_INSTANCE_SYM = 243,             /* INSTANCE_SYM  */
  YYSYMBOL_INSTALL_SYM = 244,              /* INSTALL_SYM  */
  YYSYMBOL_INTERVAL_SYM = 245,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 246,                     /* INTO  */
  YYSYMBOL_INT_SYM = 247,                  /* INT_SYM  */
  YYSYMBOL_INVOKER_SYM = 248,              /* INVOKER_SYM  */
  YYSYMBOL_IN_SYM = 249,                   /* IN_SYM  */
  YYSYMBOL_IO_AFTER_GTIDS = 250,           /* IO_AFTER_GTIDS  */
  YYSYMBOL_IO_BEFORE_GTIDS = 251,          /* IO_BEFORE_GTIDS  */
  YYSYMBOL_IO_SYM = 252,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 253,                  /* IPC_SYM  */
  YYSYMBOL_IS = 254,                       /* IS  */
  YYSYMBOL_ISOLATION = 255,                /* ISOLATION  */
  YYSYMBOL_ISSUER_SYM = 256,               /* ISSUER_SYM  */
  YYSYMBOL_ITERATE_SYM = 257,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 258,                 /* JOIN_SYM  */
  YYSYMBOL_JSON_SEPARATOR_SYM = 259,       /* JSON_SEPARATOR_SYM  */
  YYSYMBOL_JSON_SYM = 260,                 /* JSON_SYM  */
  YYSYMBOL_KEYS = 261,                     /* KEYS  */
  YYSYMBOL_KEY_BLOCK_SIZE = 262,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_KEY_SYM = 263,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 264,                 /* KILL_SYM  */
  YYSYMBOL_LANGUAGE_SYM = 265,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 266,                 /* LAST_SYM  */
  YYSYMBOL_LE = 267,                       /* LE  */
  YYSYMBOL_LEADING = 268,                  /* LEADING  */
  YYSYMBOL_LEAVES = 269,                   /* LEAVES  */
  YYSYMBOL_LEAVE_SYM = 270,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 271,                     /* LEFT  */
  YYSYMBOL_LESS_SYM = 272,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 273,                /* LEVEL_SYM  */
  YYSYMBOL_LEX_HOSTNAME = 274,             /* LEX_HOSTNAME  */
  YYSYMBOL_LIKE = 275,                     /* LIKE  */
  YYSYMBOL_LIMIT = 276,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 277,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 278,                    /* LINES  */
  YYSYMBOL_LINESTRING_SYM = 279,           /* LINESTRING_SYM  */
  YYSYMBOL_LIST_SYM = 280,                 /* LIST_SYM  */
  YYSYMBOL_LOAD = 281,                     /* LOAD  */
  YYSYMBOL_LOCAL_SYM = 282,                /* LOCAL_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_538 = 283,       /* OBSOLETE_TOKEN_538  */
  YYSYMBOL_LOCKS_SYM = 284,                /* LOCKS_SYM  */
  YYSYMBOL_LOCK_SYM = 285,                 /* LOCK_SYM  */
  YYSYMBOL_LOGFILE_SYM = 286,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 287,                 /* LOGS_SYM  */
  YYSYMBOL_LONGBLOB_SYM = 288,             /* LONGBLOB_SYM  */
  YYSYMBOL_LONGTEXT_SYM = 289,             /* LONGTEXT_SYM  */
  YYSYMBOL_LONG_NUM = 290,                 /* LONG_NUM  */
  YYSYMBOL_LONG_SYM = 291,                 /* LONG_SYM  */
  YYSYMBOL_LOOP_SYM = 292,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 293,             /* LOW_PRIORITY  */
  YYSYMBOL_LT = 294,                       /* LT  */
  YYSYMBOL_OBSOLETE_TOKEN_550 = 295,       /* OBSOLETE_TOKEN_550  */
  YYSYMBOL_OBSOLETE_TOKEN_551 = 296,       /* OBSOLETE_TOKEN_551  */
  YYSYMBOL_OBSOLETE_TOKEN_552 = 297,       /* OBSOLETE_TOKEN_552  */
  YYSYMBOL_OBSOLETE_TOKEN_553 = 298,       /* OBSOLETE_TOKEN_553  */
  YYSYMBOL_OBSOLETE_TOKEN_554 = 299,       /* OBSOLETE_TOKEN_554  */
  YYSYMBOL_OBSOLETE_TOKEN_555 = 300,       /* OBSOLETE_TOKEN_555  */
  YYSYMBOL_OBSOLETE_TOKEN_556 = 301,       /* OBSOLETE_TOKEN_556  */
  YYSYMBOL_OBSOLETE_TOKEN_557 = 302,       /* OBSOLETE_TOKEN_557  */
  YYSYMBOL_OBSOLETE_TOKEN_558 = 303,       /* OBSOLETE_TOKEN_558  */
  YYSYMBOL_OBSOLETE_TOKEN_559 = 304,       /* OBSOLETE_TOKEN_559  */
  YYSYMBOL_OBSOLETE_TOKEN_561 = 305,       /* OBSOLETE_TOKEN_561  */
  YYSYMBOL_OBSOLETE_TOKEN_562 = 306,       /* OBSOLETE_TOKEN_562  */
  YYSYMBOL_OBSOLETE_TOKEN_563 = 307,       /* OBSOLETE_TOKEN_563  */
  YYSYMBOL_OBSOLETE_TOKEN_564 = 308,       /* OBSOLETE_TOKEN_564  */
  YYSYMBOL_OBSOLETE_TOKEN_565 = 309,       /* OBSOLETE_TOKEN_565  */
  YYSYMBOL_OBSOLETE_TOKEN_566 = 310,       /* OBSOLETE_TOKEN_566  */
  YYSYMBOL_OBSOLETE_TOKEN_567 = 311,       /* OBSOLETE_TOKEN_567  */
  YYSYMBOL_OBSOLETE_TOKEN_568 = 312,       /* OBSOLETE_TOKEN_568  */
  YYSYMBOL_OBSOLETE_TOKEN_569 = 313,       /* OBSOLETE_TOKEN_569  */
  YYSYMBOL_OBSOLETE_TOKEN_570 = 314,       /* OBSOLETE_TOKEN_570  */
  YYSYMBOL_MASTER_SYM = 315,               /* MASTER_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_572 = 316,       /* OBSOLETE_TOKEN_572  */
  YYSYMBOL_OBSOLETE_TOKEN_573 = 317,       /* OBSOLETE_TOKEN_573  */
  YYSYMBOL_MATCH = 318,                    /* MATCH  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 319, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 320,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 321,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 322,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_SYM = 323,                  /* MAX_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 324,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 325, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MAX_VALUE_SYM = 326,            /* MAX_VALUE_SYM  */
  YYSYMBOL_MEDIUMBLOB_SYM = 327,           /* MEDIUMBLOB_SYM  */
  YYSYMBOL_MEDIUMINT_SYM = 328,            /* MEDIUMINT_SYM  */
  YYSYMBOL_MEDIUMTEXT_SYM = 329,           /* MEDIUMTEXT_SYM  */
  YYSYMBOL_MEDIUM_SYM = 330,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 331,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 332,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 333,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 334,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 335,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 336,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 337,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MINUTE_SYM = 338,               /* MINUTE_SYM  */
  YYSYMBOL_MIN_ROWS = 339,                 /* MIN_ROWS  */
  YYSYMBOL_MIN_SYM = 340,                  /* MIN_SYM  */
  YYSYMBOL_MODE_SYM = 341,                 /* MODE_SYM  */
  YYSYMBOL_MODIFIES_SYM = 342,             /* MODIFIES_SYM  */
  YYSYMBOL_MODIFY_SYM = 343,               /* MODIFY_SYM  */
  YYSYMBOL_MOD_SYM = 344,                  /* MOD_SYM  */
  YYSYMBOL_MONTH_SYM = 345,                /* MONTH_SYM  */
  YYSYMBOL_MULTILINESTRING_SYM = 346,      /* MULTILINESTRING_SYM  */
  YYSYMBOL_MULTIPOINT_SYM = 347,           /* MULTIPOINT_SYM  */
  YYSYMBOL_MULTIPOLYGON_SYM = 348,         /* MULTIPOLYGON_SYM  */
  YYSYMBOL_MUTEX_SYM = 349,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 350,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 351,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 352,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 353,             /* NATIONAL_SYM  */
  YYSYMBOL_NATURAL = 354,                  /* NATURAL  */
  YYSYMBOL_NCHAR_STRING = 355,             /* NCHAR_STRING  */
  YYSYMBOL_NCHAR_SYM = 356,                /* NCHAR_SYM  */
  YYSYMBOL_NDBCLUSTER_SYM = 357,           /* NDBCLUSTER_SYM  */
  YYSYMBOL_NE = 358,                       /* NE  */
  YYSYMBOL_NEG = 359,                      /* NEG  */
  YYSYMBOL_NEVER_SYM = 360,                /* NEVER_SYM  */
  YYSYMBOL_NEW_SYM = 361,                  /* NEW_SYM  */
  YYSYMBOL_NEXT_SYM = 362,                 /* NEXT_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 363,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 364,                 /* NONE_SYM  */
  YYSYMBOL_NOT2_SYM = 365,                 /* NOT2_SYM  */
  YYSYMBOL_NOT_SYM = 366,                  /* NOT_SYM  */
  YYSYMBOL_NOW_SYM = 367,                  /* NOW_SYM  */
  YYSYMBOL_NO_SYM = 368,                   /* NO_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 369,              /* NO_WAIT_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 370,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NULL_SYM = 371,                 /* NULL_SYM  */
  YYSYMBOL_NUM = 372,                      /* NUM  */
  YYSYMBOL_NUMBER_SYM = 373,               /* NUMBER_SYM  */
  YYSYMBOL_NUMERIC_SYM = 374,              /* NUMERIC_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 375,             /* NVARCHAR_SYM  */
  YYSYMBOL_OFFSET_SYM = 376,               /* OFFSET_SYM  */
  YYSYMBOL_ON_SYM = 377,                   /* ON_SYM  */
  YYSYMBOL_ONE_SYM = 378,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 379,                 /* ONLY_SYM  */
  YYSYMBOL_OPEN_SYM = 380,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIMIZE = 381,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIMIZER_COSTS_SYM = 382,      /* OPTIMIZER_COSTS_SYM  */
  YYSYMBOL_OPTIONS_SYM = 383,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 384,                   /* OPTION  */
  YYSYMBOL_OPTIONALLY = 385,               /* OPTIONALLY  */
  YYSYMBOL_OR2_SYM = 386,                  /* OR2_SYM  */
  YYSYMBOL_ORDER_SYM = 387,                /* ORDER_SYM  */
  YYSYMBOL_OR_OR_SYM = 388,                /* OR_OR_SYM  */
  YYSYMBOL_OR_SYM = 389,                   /* OR_SYM  */
  YYSYMBOL_OUTER_SYM = 390,                /* OUTER_SYM  */
  YYSYMBOL_OUTFILE = 391,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 392,                  /* OUT_SYM  */
  YYSYMBOL_OWNER_SYM = 393,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 394,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 395,                 /* PAGE_SYM  */
  YYSYMBOL_PARAM_MARKER = 396,             /* PARAM_MARKER  */
  YYSYMBOL_PARSER_SYM = 397,               /* PARSER_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_654 = 398,       /* OBSOLETE_TOKEN_654  */
  YYSYMBOL_PARTIAL = 399,                  /* PARTIAL  */
  YYSYMBOL_PARTITION_SYM = 400,            /* PARTITION_SYM  */
  YYSYMBOL_PARTITIONS_SYM = 401,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 402,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD = 403,                 /* PASSWORD  */
  YYSYMBOL_PHASE_SYM = 404,                /* PHASE_SYM  */
  YYSYMBOL_PLUGIN_DIR_SYM = 405,           /* PLUGIN_DIR_SYM  */
  YYSYMBOL_PLUGIN_SYM = 406,               /* PLUGIN_SYM  */
  YYSYMBOL_PLUGINS_SYM = 407,              /* PLUGINS_SYM  */
  YYSYMBOL_POINT_SYM = 408,                /* POINT_SYM  */
  YYSYMBOL_POLYGON_SYM = 409,              /* POLYGON_SYM  */
  YYSYMBOL_PORT_SYM = 410,                 /* PORT_SYM  */
  YYSYMBOL_POSITION_SYM = 411,             /* POSITION_SYM  */
  YYSYMBOL_PRECEDES_SYM = 412,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECISION = 413,                /* PRECISION  */
  YYSYMBOL_PREPARE_SYM = 414,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 415,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 416,                 /* PREV_SYM  */
  YYSYMBOL_PRIMARY_SYM = 417,              /* PRIMARY_SYM  */
  YYSYMBOL_PRIVILEGES = 418,               /* PRIVILEGES  */
  YYSYMBOL_PROCEDURE_SYM = 419,            /* PROCEDURE_SYM  */
  YYSYMBOL_PROCESS = 420,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 421,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 422,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 423,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 424,                /* PROXY_SYM  */
  YYSYMBOL_PURGE = 425,                    /* PURGE  */
  YYSYMBOL_QUARTER_SYM = 426,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 427,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 428,                    /* QUICK  */
  YYSYMBOL_RANGE_SYM = 429,                /* RANGE_SYM  */
  YYSYMBOL_READS_SYM = 430,                /* READS_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 431,            /* READ_ONLY_SYM  */
  YYSYMBOL_READ_SYM = 432,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 433,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL_SYM = 434,                 /* REAL_SYM  */
  YYSYMBOL_REBUILD_SYM = 435,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 436,              /* RECOVER_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_693 = 437,       /* OBSOLETE_TOKEN_693  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 438,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 439,            /* REDUNDANT_SYM  */
  YYSYMBOL_REFERENCES = 440,               /* REFERENCES  */
  YYSYMBOL_REGEXP = 441,                   /* REGEXP  */
  YYSYMBOL_RELAY = 442,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 443,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 444,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 445,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 446,             /* RELAY_THREAD  */
  YYSYMBOL_RELEASE_SYM = 447,              /* RELEASE_SYM  */
  YYSYMBOL_RELOAD = 448,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 449,               /* REMOVE_SYM  */
  YYSYMBOL_RENAME = 450,                   /* RENAME  */
  YYSYMBOL_REORGANIZE_SYM = 451,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 452,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 453,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPEAT_SYM = 454,               /* REPEAT_SYM  */
  YYSYMBOL_REPLACE_SYM = 455,              /* REPLACE_SYM  */
  YYSYMBOL_REPLICATION = 456,              /* REPLICATION  */
  YYSYMBOL_REPLICATE_DO_DB = 457,          /* REPLICATE_DO_DB  */
  YYSYMBOL_REPLICATE_IGNORE_DB = 458,      /* REPLICATE_IGNORE_DB  */
  YYSYMBOL_REPLICATE_DO_TABLE = 459,       /* REPLICATE_DO_TABLE  */
  YYSYMBOL_REPLICATE_IGNORE_TABLE = 460,   /* REPLICATE_IGNORE_TABLE  */
  YYSYMBOL_REPLICATE_WILD_DO_TABLE = 461,  /* REPLICATE_WILD_DO_TABLE  */
  YYSYMBOL_REPLICATE_WILD_IGNORE_TABLE = 462, /* REPLICATE_WILD_IGNORE_TABLE  */
  YYSYMBOL_REPLICATE_REWRITE_DB = 463,     /* REPLICATE_REWRITE_DB  */
  YYSYMBOL_REQUIRE_SYM = 464,              /* REQUIRE_SYM  */
  YYSYMBOL_RESET_SYM = 465,                /* RESET_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 466,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESOURCES = 467,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 468,              /* RESTORE_SYM  */
  YYSYMBOL_RESTRICT = 469,                 /* RESTRICT  */
  YYSYMBOL_RESUME_SYM = 470,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 471,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 472,              /* RETURNS_SYM  */
  YYSYMBOL_RETURN_SYM = 473,               /* RETURN_SYM  */
  YYSYMBOL_REVERSE_SYM = 474,              /* REVERSE_SYM  */
  YYSYMBOL_REVOKE = 475,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 476,                    /* RIGHT  */
  YYSYMBOL_ROLLBACK_SYM = 477,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 478,               /* ROLLUP_SYM  */
  YYSYMBOL_ROTATE_SYM = 479,               /* ROTATE_SYM  */
  YYSYMBOL_ROUTINE_SYM = 480,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWS_SYM = 481,                 /* ROWS_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 482,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_ROW_SYM = 483,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 484,            /* ROW_COUNT_SYM  */
  YYSYMBOL_RTREE_SYM = 485,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 486,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 487,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 488,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 489,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SECOND_SYM = 490,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 491,             /* SECURITY_SYM  */
  YYSYMBOL_SELECT_SYM = 492,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 493,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 494,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 495,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 496,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 497,              /* SESSION_SYM  */
  YYSYMBOL_SERVER_SYM = 498,               /* SERVER_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_755 = 499,       /* OBSOLETE_TOKEN_755  */
  YYSYMBOL_SET_SYM = 500,                  /* SET_SYM  */
  YYSYMBOL_SET_VAR = 501,                  /* SET_VAR  */
  YYSYMBOL_SHARE_SYM = 502,                /* SHARE_SYM  */
  YYSYMBOL_SHIFT_LEFT = 503,               /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 504,              /* SHIFT_RIGHT  */
  YYSYMBOL_SHOW = 505,                     /* SHOW  */
  YYSYMBOL_SHUTDOWN = 506,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNAL_SYM = 507,               /* SIGNAL_SYM  */
  YYSYMBOL_SIGNED_SYM = 508,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 509,               /* SIMPLE_SYM  */
  YYSYMBOL_SLAVE = 510,                    /* SLAVE  */
  YYSYMBOL_SLOW = 511,                     /* SLOW  */
  YYSYMBOL_SMALLINT_SYM = 512,             /* SMALLINT_SYM  */
  YYSYMBOL_SNAPSHOT_SYM = 513,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 514,               /* SOCKET_SYM  */
  YYSYMBOL_SONAME_SYM = 515,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 516,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 517,               /* SOURCE_SYM  */
  YYSYMBOL_SPATIAL_SYM = 518,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 519,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQLEXCEPTION_SYM = 520,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQLSTATE_SYM = 521,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 522,           /* SQLWARNING_SYM  */
  YYSYMBOL_SQL_AFTER_GTIDS = 523,          /* SQL_AFTER_GTIDS  */
  YYSYMBOL_SQL_AFTER_MTS_GAPS = 524,       /* SQL_AFTER_MTS_GAPS  */
  YYSYMBOL_SQL_BEFORE_GTIDS = 525,         /* SQL_BEFORE_GTIDS  */
  YYSYMBOL_SQL_BIG_RESULT = 526,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQL_BUFFER_RESULT = 527,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_OBSOLETE_TOKEN_784 = 528,       /* OBSOLETE_TOKEN_784  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 529,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 530,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_SMALL_RESULT = 531,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQL_SYM = 532,                  /* SQL_SYM  */
  YYSYMBOL_SQL_THREAD = 533,               /* SQL_THREAD  */
  YYSYMBOL_SSL_SYM = 534,                  /* SSL_SYM  */
  YYSYMBOL_STACKED_SYM = 535,              /* STACKED_SYM  */
  YYSYMBOL_STARTING = 536,                 /* STARTING  */
  YYSYMBOL_STARTS_SYM = 537,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 538,                /* START_SYM  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 539,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 540,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 541,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STATUS_SYM = 542,               /* STATUS_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 543,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 544,                  /* STD_SYM  */
  YYSYMBOL_STOP_SYM = 545,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 546,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 547,               /* STORED_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 548,            /* STRAIGHT_JOIN  */
  YYSYMBOL_STRING_SYM = 549,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 550,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 551,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 552,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 553,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 554,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUBSTRING = 555,                /* SUBSTRING  */
  YYSYMBOL_SUM_SYM = 556,                  /* SUM_SYM  */
  YYSYMBOL_SUPER_SYM = 557,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 558,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 559,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 560,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSDATE = 561,                  /* SYSDATE  */
  YYSYMBOL_TABLES = 562,                   /* TABLES  */
  YYSYMBOL_TABLESPACE_SYM = 563,           /* TABLESPACE_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_820 = 564,       /* OBSOLETE_TOKEN_820  */
  YYSYMBOL_TABLE_SYM = 565,                /* TABLE_SYM  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 566,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 567,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 568,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 569,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TERMINATED = 570,               /* TERMINATED  */
  YYSYMBOL_TEXT_STRING = 571,              /* TEXT_STRING  */
  YYSYMBOL_TEXT_SYM = 572,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 573,                 /* THAN_SYM  */
  YYSYMBOL_THEN_SYM = 574,                 /* THEN_SYM  */
  YYSYMBOL_TIMESTAMP_SYM = 575,            /* TIMESTAMP_SYM  */
  YYSYMBOL_TIMESTAMP_ADD = 576,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 577,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 578,                 /* TIME_SYM  */
  YYSYMBOL_TINYBLOB_SYM = 579,             /* TINYBLOB_SYM  */
  YYSYMBOL_TINYINT_SYM = 580,              /* TINYINT_SYM  */
  YYSYMBOL_TINYTEXT_SYN = 581,             /* TINYTEXT_SYN  */
  YYSYMBOL_TO_SYM = 582,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 583,                 /* TRAILING  */
  YYSYMBOL_TRANSACTION_SYM = 584,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 585,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIGGER_SYM = 586,              /* TRIGGER_SYM  */
  YYSYMBOL_TRIM = 587,                     /* TRIM  */
  YYSYMBOL_TRUE_SYM = 588,                 /* TRUE_SYM  */
  YYSYMBOL_TRUNCATE_SYM = 589,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPES_SYM = 590,                /* TYPES_SYM  */
  YYSYMBOL_TYPE_SYM = 591,                 /* TYPE_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_848 = 592,       /* OBSOLETE_TOKEN_848  */
  YYSYMBOL_ULONGLONG_NUM = 593,            /* ULONGLONG_NUM  */
  YYSYMBOL_UNCOMMITTED_SYM = 594,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 595,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDERSCORE_CHARSET = 596,       /* UNDERSCORE_CHARSET  */
  YYSYMBOL_UNDOFILE_SYM = 597,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 598,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNDO_SYM = 599,                 /* UNDO_SYM  */
  YYSYMBOL_UNICODE_SYM = 600,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 601,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNION_SYM = 602,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 603,               /* UNIQUE_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 604,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNLOCK_SYM = 605,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED_SYM = 606,             /* UNSIGNED_SYM  */
  YYSYMBOL_UNTIL_SYM = 607,                /* UNTIL_SYM  */
  YYSYMBOL_UPDATE_SYM = 608,               /* UPDATE_SYM  */
  YYSYMBOL_UPGRADE_SYM = 609,              /* UPGRADE_SYM  */
  YYSYMBOL_USAGE = 610,                    /* USAGE  */
  YYSYMBOL_USER = 611,                     /* USER  */
  YYSYMBOL_USE_FRM = 612,                  /* USE_FRM  */
  YYSYMBOL_USE_SYM = 613,                  /* USE_SYM  */
  YYSYMBOL_USING = 614,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 615,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 616,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 617,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALIDATION_SYM = 618,           /* VALIDATION_SYM  */
  YYSYMBOL_VALUES = 619,                   /* VALUES  */
  YYSYMBOL_VALUE_SYM = 620,                /* VALUE_SYM  */
  YYSYMBOL_VARBINARY_SYM = 621,            /* VARBINARY_SYM  */
  YYSYMBOL_VARCHAR_SYM = 622,              /* VARCHAR_SYM  */
  YYSYMBOL_VARIABLES = 623,                /* VARIABLES  */
  YYSYMBOL_VARIANCE_SYM = 624,             /* VARIANCE_SYM  */
  YYSYMBOL_VARYING = 625,                  /* VARYING  */
  YYSYMBOL_VAR_SAMP_SYM = 626,             /* VAR_SAMP_SYM  */
  YYSYMBOL_VIEW_SYM = 627,                 /* VIEW_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 628,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 629,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 630,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 631,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 632,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WHEN_SYM = 633,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 634,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 635,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 636,                     /* WITH  */
  YYSYMBOL_OBSOLETE_TOKEN_893 = 637,       /* OBSOLETE_TOKEN_893  */
  YYSYMBOL_WITH_ROLLUP_SYM = 638,          /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITHOUT_SYM = 639,              /* WITHOUT_SYM  */
  YYSYMBOL_WORK_SYM = 640,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 641,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 642,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 643,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 644,                   /* XA_SYM  */
  YYSYMBOL_XID_SYM = 645,                  /* XID_SYM  */
  YYSYMBOL_XML_SYM = 646,                  /* XML_SYM  */
  YYSYMBOL_XOR = 647,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 648,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_YEAR_SYM = 649,                 /* YEAR_SYM  */
  YYSYMBOL_ZEROFILL_SYM = 650,             /* ZEROFILL_SYM  */
  YYSYMBOL_JSON_UNQUOTED_SEPARATOR_SYM = 651, /* JSON_UNQUOTED_SEPARATOR_SYM  */
  YYSYMBOL_PERSIST_SYM = 652,              /* PERSIST_SYM  */
  YYSYMBOL_ROLE_SYM = 653,                 /* ROLE_SYM  */
  YYSYMBOL_ADMIN_SYM = 654,                /* ADMIN_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 655,            /* INVISIBLE_SYM  */
  YYSYMBOL_VISIBLE_SYM = 656,              /* VISIBLE_SYM  */
  YYSYMBOL_EXCEPT_SYM = 657,               /* EXCEPT_SYM  */
  YYSYMBOL_COMPONENT_SYM = 658,            /* COMPONENT_SYM  */
  YYSYMBOL_RECURSIVE_SYM = 659,            /* RECURSIVE_SYM  */
  YYSYMBOL_GRAMMAR_SELECTOR_EXPR = 660,    /* GRAMMAR_SELECTOR_EXPR  */
  YYSYMBOL_GRAMMAR_SELECTOR_GCOL = 661,    /* GRAMMAR_SELECTOR_GCOL  */
  YYSYMBOL_GRAMMAR_SELECTOR_PART = 662,    /* GRAMMAR_SELECTOR_PART  */
  YYSYMBOL_GRAMMAR_SELECTOR_CTE = 663,     /* GRAMMAR_SELECTOR_CTE  */
  YYSYMBOL_JSON_OBJECTAGG = 664,           /* JSON_OBJECTAGG  */
  YYSYMBOL_JSON_ARRAYAGG = 665,            /* JSON_ARRAYAGG  */
  YYSYMBOL_OF_SYM = 666,                   /* OF_SYM  */
  YYSYMBOL_SKIP_SYM = 667,                 /* SKIP_SYM  */
  YYSYMBOL_LOCKED_SYM = 668,               /* LOCKED_SYM  */
  YYSYMBOL_NOWAIT_SYM = 669,               /* NOWAIT_SYM  */
  YYSYMBOL_GROUPING_SYM = 670,             /* GROUPING_SYM  */
  YYSYMBOL_PERSIST_ONLY_SYM = 671,         /* PERSIST_ONLY_SYM  */
  YYSYMBOL_HISTOGRAM_SYM = 672,            /* HISTOGRAM_SYM  */
  YYSYMBOL_BUCKETS_SYM = 673,              /* BUCKETS_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_930 = 674,       /* OBSOLETE_TOKEN_930  */
  YYSYMBOL_CLONE_SYM = 675,                /* CLONE_SYM  */
  YYSYMBOL_CUME_DIST_SYM = 676,            /* CUME_DIST_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 677,           /* DENSE_RANK_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 678,              /* EXCLUDE_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 679,          /* FIRST_VALUE_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 680,            /* FOLLOWING_SYM  */
  YYSYMBOL_GROUPS_SYM = 681,               /* GROUPS_SYM  */
  YYSYMBOL_LAG_SYM = 682,                  /* LAG_SYM  */
  YYSYMBOL_LAST_VALUE_SYM = 683,           /* LAST_VALUE_SYM  */
  YYSYMBOL_LEAD_SYM = 684,                 /* LEAD_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 685,            /* NTH_VALUE_SYM  */
  YYSYMBOL_NTILE_SYM = 686,                /* NTILE_SYM  */
  YYSYMBOL_NULLS_SYM = 687,                /* NULLS_SYM  */
  YYSYMBOL_OTHERS_SYM = 688,               /* OTHERS_SYM  */
  YYSYMBOL_OVER_SYM = 689,                 /* OVER_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 690,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PRECEDING_SYM = 691,            /* PRECEDING_SYM  */
  YYSYMBOL_RANK_SYM = 692,                 /* RANK_SYM  */
  YYSYMBOL_RESPECT_SYM = 693,              /* RESPECT_SYM  */
  YYSYMBOL_ROW_NUMBER_SYM = 694,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_TIES_SYM = 695,                 /* TIES_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 696,            /* UNBOUNDED_SYM  */
  YYSYMBOL_WINDOW_SYM = 697,               /* WINDOW_SYM  */
  YYSYMBOL_EMPTY_SYM = 698,                /* EMPTY_SYM  */
  YYSYMBOL_JSON_TABLE_SYM = 699,           /* JSON_TABLE_SYM  */
  YYSYMBOL_NESTED_SYM = 700,               /* NESTED_SYM  */
  YYSYMBOL_ORDINALITY_SYM = 701,           /* ORDINALITY_SYM  */
  YYSYMBOL_PATH_SYM = 702,                 /* PATH_SYM  */
  YYSYMBOL_HISTORY_SYM = 703,              /* HISTORY_SYM  */
  YYSYMBOL_REUSE_SYM = 704,                /* REUSE_SYM  */
  YYSYMBOL_SRID_SYM = 705,                 /* SRID_SYM  */
  YYSYMBOL_THREAD_PRIORITY_SYM = 706,      /* THREAD_PRIORITY_SYM  */
  YYSYMBOL_RESOURCE_SYM = 707,             /* RESOURCE_SYM  */
  YYSYMBOL_SYSTEM_SYM = 708,               /* SYSTEM_SYM  */
  YYSYMBOL_VCPU_SYM = 709,                 /* VCPU_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_966 = 710,       /* OBSOLETE_TOKEN_966  */
  YYSYMBOL_OBSOLETE_TOKEN_967 = 711,       /* OBSOLETE_TOKEN_967  */
  YYSYMBOL_RESTART_SYM = 712,              /* RESTART_SYM  */
  YYSYMBOL_DEFINITION_SYM = 713,           /* DEFINITION_SYM  */
  YYSYMBOL_DESCRIPTION_SYM = 714,          /* DESCRIPTION_SYM  */
  YYSYMBOL_ORGANIZATION_SYM = 715,         /* ORGANIZATION_SYM  */
  YYSYMBOL_REFERENCE_SYM = 716,            /* REFERENCE_SYM  */
  YYSYMBOL_ACTIVE_SYM = 717,               /* ACTIVE_SYM  */
  YYSYMBOL_INACTIVE_SYM = 718,             /* INACTIVE_SYM  */
  YYSYMBOL_LATERAL_SYM = 719,              /* LATERAL_SYM  */
  YYSYMBOL_ARRAY_SYM = 720,                /* ARRAY_SYM  */
  YYSYMBOL_MEMBER_SYM = 721,               /* MEMBER_SYM  */
  YYSYMBOL_OPTIONAL_SYM = 722,             /* OPTIONAL_SYM  */
  YYSYMBOL_SECONDARY_SYM = 723,            /* SECONDARY_SYM  */
  YYSYMBOL_SECONDARY_ENGINE_SYM = 724,     /* SECONDARY_ENGINE_SYM  */
  YYSYMBOL_SECONDARY_LOAD_SYM = 725,       /* SECONDARY_LOAD_SYM  */
  YYSYMBOL_SECONDARY_UNLOAD_SYM = 726,     /* SECONDARY_UNLOAD_SYM  */
  YYSYMBOL_RETAIN_SYM = 727,               /* RETAIN_SYM  */
  YYSYMBOL_OLD_SYM = 728,                  /* OLD_SYM  */
  YYSYMBOL_ENFORCED_SYM = 729,             /* ENFORCED_SYM  */
  YYSYMBOL_OJ_SYM = 730,                   /* OJ_SYM  */
  YYSYMBOL_NETWORK_NAMESPACE_SYM = 731,    /* NETWORK_NAMESPACE_SYM  */
  YYSYMBOL_RANDOM_SYM = 732,               /* RANDOM_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_989 = 733,       /* OBSOLETE_TOKEN_989  */
  YYSYMBOL_OBSOLETE_TOKEN_990 = 734,       /* OBSOLETE_TOKEN_990  */
  YYSYMBOL_PRIVILEGE_CHECKS_USER_SYM = 735, /* PRIVILEGE_CHECKS_USER_SYM  */
  YYSYMBOL_OBSOLETE_TOKEN_992 = 736,       /* OBSOLETE_TOKEN_992  */
  YYSYMBOL_REQUIRE_ROW_FORMAT_SYM = 737,   /* REQUIRE_ROW_FORMAT_SYM  */
  YYSYMBOL_PASSWORD_LOCK_TIME_SYM = 738,   /* PASSWORD_LOCK_TIME_SYM  */
  YYSYMBOL_FAILED_LOGIN_ATTEMPTS_SYM = 739, /* FAILED_LOGIN_ATTEMPTS_SYM  */
  YYSYMBOL_REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 740, /* REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM  */
  YYSYMBOL_STREAM_SYM = 741,               /* STREAM_SYM  */
  YYSYMBOL_OFF_SYM = 742,                  /* OFF_SYM  */
  YYSYMBOL_RETURNING_SYM = 743,            /* RETURNING_SYM  */
  YYSYMBOL_JSON_VALUE_SYM = 744,           /* JSON_VALUE_SYM  */
  YYSYMBOL_TLS_SYM = 745,                  /* TLS_SYM  */
  YYSYMBOL_ATTRIBUTE_SYM = 746,            /* ATTRIBUTE_SYM  */
  YYSYMBOL_ENGINE_ATTRIBUTE_SYM = 747,     /* ENGINE_ATTRIBUTE_SYM  */
  YYSYMBOL_SECONDARY_ENGINE_ATTRIBUTE_SYM = 748, /* SECONDARY_ENGINE_ATTRIBUTE_SYM  */
  YYSYMBOL_SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 749, /* SOURCE_CONNECTION_AUTO_FAILOVER_SYM  */
  YYSYMBOL_ZONE_SYM = 750,                 /* ZONE_SYM  */
  YYSYMBOL_GRAMMAR_SELECTOR_DERIVED_EXPR = 751, /* GRAMMAR_SELECTOR_DERIVED_EXPR  */
  YYSYMBOL_REPLICA_SYM = 752,              /* REPLICA_SYM  */
  YYSYMBOL_REPLICAS_SYM = 753,             /* REPLICAS_SYM  */
  YYSYMBOL_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 754, /* ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM  */
  YYSYMBOL_GET_SOURCE_PUBLIC_KEY_SYM = 755, /* GET_SOURCE_PUBLIC_KEY_SYM  */
  YYSYMBOL_SOURCE_AUTO_POSITION_SYM = 756, /* SOURCE_AUTO_POSITION_SYM  */
  YYSYMBOL_SOURCE_BIND_SYM = 757,          /* SOURCE_BIND_SYM  */
  YYSYMBOL_SOURCE_COMPRESSION_ALGORITHM_SYM = 758, /* SOURCE_COMPRESSION_ALGORITHM_SYM  */
  YYSYMBOL_SOURCE_CONNECT_RETRY_SYM = 759, /* SOURCE_CONNECT_RETRY_SYM  */
  YYSYMBOL_SOURCE_DELAY_SYM = 760,         /* SOURCE_DELAY_SYM  */
  YYSYMBOL_SOURCE_HEARTBEAT_PERIOD_SYM = 761, /* SOURCE_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_SOURCE_HOST_SYM = 762,          /* SOURCE_HOST_SYM  */
  YYSYMBOL_SOURCE_LOG_FILE_SYM = 763,      /* SOURCE_LOG_FILE_SYM  */
  YYSYMBOL_SOURCE_LOG_POS_SYM = 764,       /* SOURCE_LOG_POS_SYM  */
  YYSYMBOL_SOURCE_PASSWORD_SYM = 765,      /* SOURCE_PASSWORD_SYM  */
  YYSYMBOL_SOURCE_PORT_SYM = 766,          /* SOURCE_PORT_SYM  */
  YYSYMBOL_SOURCE_PUBLIC_KEY_PATH_SYM = 767, /* SOURCE_PUBLIC_KEY_PATH_SYM  */
  YYSYMBOL_SOURCE_RETRY_COUNT_SYM = 768,   /* SOURCE_RETRY_COUNT_SYM  */
  YYSYMBOL_SOURCE_SSL_SYM = 769,           /* SOURCE_SSL_SYM  */
  YYSYMBOL_SOURCE_SSL_CA_SYM = 770,        /* SOURCE_SSL_CA_SYM  */
  YYSYMBOL_SOURCE_SSL_CAPATH_SYM = 771,    /* SOURCE_SSL_CAPATH_SYM  */
  YYSYMBOL_SOURCE_SSL_CERT_SYM = 772,      /* SOURCE_SSL_CERT_SYM  */
  YYSYMBOL_SOURCE_SSL_CIPHER_SYM = 773,    /* SOURCE_SSL_CIPHER_SYM  */
  YYSYMBOL_SOURCE_SSL_CRL_SYM = 774,       /* SOURCE_SSL_CRL_SYM  */
  YYSYMBOL_SOURCE_SSL_CRLPATH_SYM = 775,   /* SOURCE_SSL_CRLPATH_SYM  */
  YYSYMBOL_SOURCE_SSL_KEY_SYM = 776,       /* SOURCE_SSL_KEY_SYM  */
  YYSYMBOL_SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 777, /* SOURCE_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_SOURCE_TLS_CIPHERSUITES_SYM = 778, /* SOURCE_TLS_CIPHERSUITES_SYM  */
  YYSYMBOL_SOURCE_TLS_VERSION_SYM = 779,   /* SOURCE_TLS_VERSION_SYM  */
  YYSYMBOL_SOURCE_USER_SYM = 780,          /* SOURCE_USER_SYM  */
  YYSYMBOL_SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 781, /* SOURCE_ZSTD_COMPRESSION_LEVEL_SYM  */
  YYSYMBOL_ST_COLLECT_SYM = 782,           /* ST_COLLECT_SYM  */
  YYSYMBOL_KEYRING_SYM = 783,              /* KEYRING_SYM  */
  YYSYMBOL_AUTHENTICATION_SYM = 784,       /* AUTHENTICATION_SYM  */
  YYSYMBOL_FACTOR_SYM = 785,               /* FACTOR_SYM  */
  YYSYMBOL_FINISH_SYM = 786,               /* FINISH_SYM  */
  YYSYMBOL_INITIATE_SYM = 787,             /* INITIATE_SYM  */
  YYSYMBOL_REGISTRATION_SYM = 788,         /* REGISTRATION_SYM  */
  YYSYMBOL_UNREGISTER_SYM = 789,           /* UNREGISTER_SYM  */
  YYSYMBOL_INITIAL_SYM = 790,              /* INITIAL_SYM  */
  YYSYMBOL_CHALLENGE_RESPONSE_SYM = 791,   /* CHALLENGE_RESPONSE_SYM  */
  YYSYMBOL_GTID_ONLY_SYM = 792,            /* GTID_ONLY_SYM  */
  YYSYMBOL_INTERSECT_SYM = 793,            /* INTERSECT_SYM  */
  YYSYMBOL_BULK_SYM = 794,                 /* BULK_SYM  */
  YYSYMBOL_URL_SYM = 795,                  /* URL_SYM  */
  YYSYMBOL_GENERATE_SYM = 796,             /* GENERATE_SYM  */
  YYSYMBOL_DOLLAR_QUOTED_STRING_SYM = 797, /* DOLLAR_QUOTED_STRING_SYM  */
  YYSYMBOL_PARSE_TREE_SYM = 798,           /* PARSE_TREE_SYM  */
  YYSYMBOL_LOG_SYM = 799,                  /* LOG_SYM  */
  YYSYMBOL_GTIDS_SYM = 800,                /* GTIDS_SYM  */
  YYSYMBOL_PARALLEL_SYM = 801,             /* PARALLEL_SYM  */
  YYSYMBOL_S3_SYM = 802,                   /* S3_SYM  */
  YYSYMBOL_QUALIFY_SYM = 803,              /* QUALIFY_SYM  */
  YYSYMBOL_AUTO_SYM = 804,                 /* AUTO_SYM  */
  YYSYMBOL_MANUAL_SYM = 805,               /* MANUAL_SYM  */
  YYSYMBOL_BERNOULLI_SYM = 806,            /* BERNOULLI_SYM  */
  YYSYMBOL_TABLESAMPLE_SYM = 807,          /* TABLESAMPLE_SYM  */
  YYSYMBOL_VECTOR_SYM = 808,               /* VECTOR_SYM  */
  YYSYMBOL_JAVASCRIPT_SYM = 809,           /* JAVASCRIPT_SYM  */
  YYSYMBOL_KEYWORD_USED_AS_IDENT = 810,    /* KEYWORD_USED_AS_IDENT  */
  YYSYMBOL_KEYWORD_USED_AS_KEYWORD = 811,  /* KEYWORD_USED_AS_KEYWORD  */
  YYSYMBOL_CONDITIONLESS_JOIN = 812,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_813_ = 813,                     /* '|'  */
  YYSYMBOL_814_ = 814,                     /* '&'  */
  YYSYMBOL_815_ = 815,                     /* '-'  */
  YYSYMBOL_816_ = 816,                     /* '+'  */
  YYSYMBOL_817_ = 817,                     /* '*'  */
  YYSYMBOL_818_ = 818,                     /* '/'  */
  YYSYMBOL_819_ = 819,                     /* '%'  */
  YYSYMBOL_820_ = 820,                     /* '^'  */
  YYSYMBOL_821_ = 821,                     /* '~'  */
  YYSYMBOL_PREFER_PARENTHESES = 822,       /* PREFER_PARENTHESES  */
  YYSYMBOL_823_ = 823,                     /* '('  */
  YYSYMBOL_824_ = 824,                     /* ')'  */
  YYSYMBOL_EMPTY_FROM_CLAUSE = 825,        /* EMPTY_FROM_CLAUSE  */
  YYSYMBOL_826_ = 826,                     /* ';'  */
  YYSYMBOL_827_ = 827,                     /* '@'  */
  YYSYMBOL_828_ = 828,                     /* ','  */
  YYSYMBOL_829_ = 829,                     /* '.'  */
  YYSYMBOL_830_ = 830,                     /* ':'  */
  YYSYMBOL_831_ = 831,                     /* '!'  */
  YYSYMBOL_832_ = 832,                     /* '{'  */
  YYSYMBOL_833_ = 833,                     /* '}'  */
  YYSYMBOL_YYACCEPT = 834,                 /* $accept  */
  YYSYMBOL_start_entry = 835,              /* start_entry  */
  YYSYMBOL_sql_statement = 836,            /* sql_statement  */
  YYSYMBOL_837_1 = 837,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 838,         /* opt_end_of_input  */
  YYSYMBOL_simple_statement_or_begin = 839, /* simple_statement_or_begin  */
  YYSYMBOL_simple_statement = 840,         /* simple_statement  */
  YYSYMBOL_deallocate = 841,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 842,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 843,                  /* prepare  */
  YYSYMBOL_prepare_src = 844,              /* prepare_src  */
  YYSYMBOL_execute = 845,                  /* execute  */
  YYSYMBOL_846_2 = 846,                    /* $@2  */
  YYSYMBOL_execute_using = 847,            /* execute_using  */
  YYSYMBOL_execute_var_list = 848,         /* execute_var_list  */
  YYSYMBOL_execute_var_ident = 849,        /* execute_var_ident  */
  YYSYMBOL_help = 850,                     /* help  */
  YYSYMBOL_851_3 = 851,                    /* $@3  */
  YYSYMBOL_change_replication_stmt = 852,  /* change_replication_stmt  */
  YYSYMBOL_853_4 = 853,                    /* $@4  */
  YYSYMBOL_854_5 = 854,                    /* $@5  */
  YYSYMBOL_filter_defs = 855,              /* filter_defs  */
  YYSYMBOL_filter_def = 856,               /* filter_def  */
  YYSYMBOL_opt_filter_db_list = 857,       /* opt_filter_db_list  */
  YYSYMBOL_filter_db_list = 858,           /* filter_db_list  */
  YYSYMBOL_filter_db_ident = 859,          /* filter_db_ident  */
  YYSYMBOL_opt_filter_db_pair_list = 860,  /* opt_filter_db_pair_list  */
  YYSYMBOL_filter_db_pair_list = 861,      /* filter_db_pair_list  */
  YYSYMBOL_opt_filter_table_list = 862,    /* opt_filter_table_list  */
  YYSYMBOL_filter_table_list = 863,        /* filter_table_list  */
  YYSYMBOL_filter_table_ident = 864,       /* filter_table_ident  */
  YYSYMBOL_opt_filter_string_list = 865,   /* opt_filter_string_list  */
  YYSYMBOL_filter_string_list = 866,       /* filter_string_list  */
  YYSYMBOL_filter_string = 867,            /* filter_string  */
  YYSYMBOL_source_defs = 868,              /* source_defs  */
  YYSYMBOL_source_def = 869,               /* source_def  */
  YYSYMBOL_ignore_server_id_list = 870,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 871,         /* ignore_server_id  */
  YYSYMBOL_privilege_check_def = 872,      /* privilege_check_def  */
  YYSYMBOL_table_primary_key_check_def = 873, /* table_primary_key_check_def  */
  YYSYMBOL_assign_gtids_to_anonymous_transactions_def = 874, /* assign_gtids_to_anonymous_transactions_def  */
  YYSYMBOL_source_tls_ciphersuites_def = 875, /* source_tls_ciphersuites_def  */
  YYSYMBOL_source_file_def = 876,          /* source_file_def  */
  YYSYMBOL_opt_channel = 877,              /* opt_channel  */
  YYSYMBOL_create_table_stmt = 878,        /* create_table_stmt  */
  YYSYMBOL_create_role_stmt = 879,         /* create_role_stmt  */
  YYSYMBOL_create_resource_group_stmt = 880, /* create_resource_group_stmt  */
  YYSYMBOL_create = 881,                   /* create  */
  YYSYMBOL_882_6 = 882,                    /* $@6  */
  YYSYMBOL_create_srs_stmt = 883,          /* create_srs_stmt  */
  YYSYMBOL_srs_attributes = 884,           /* srs_attributes  */
  YYSYMBOL_default_role_clause = 885,      /* default_role_clause  */
  YYSYMBOL_create_index_stmt = 886,        /* create_index_stmt  */
  YYSYMBOL_server_options_list = 887,      /* server_options_list  */
  YYSYMBOL_server_option = 888,            /* server_option  */
  YYSYMBOL_event_tail = 889,               /* event_tail  */
  YYSYMBOL_890_7 = 890,                    /* $@7  */
  YYSYMBOL_ev_schedule_time = 891,         /* ev_schedule_time  */
  YYSYMBOL_892_8 = 892,                    /* $@8  */
  YYSYMBOL_opt_ev_status = 893,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 894,                /* ev_starts  */
  YYSYMBOL_ev_ends = 895,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 896,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 897,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 898,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 899,              /* ev_sql_stmt  */
  YYSYMBOL_900_9 = 900,                    /* $@9  */
  YYSYMBOL_ev_sql_stmt_inner = 901,        /* ev_sql_stmt_inner  */
  YYSYMBOL_sp_name = 902,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 903,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 904,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 905,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 906,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 907,                  /* sp_suid  */
  YYSYMBOL_call_stmt = 908,                /* call_stmt  */
  YYSYMBOL_opt_paren_expr_list = 909,      /* opt_paren_expr_list  */
  YYSYMBOL_sp_fdparam_list = 910,          /* sp_fdparam_list  */
  YYSYMBOL_sp_fdparams = 911,              /* sp_fdparams  */
  YYSYMBOL_sp_fdparam = 912,               /* sp_fdparam  */
  YYSYMBOL_sp_pdparam_list = 913,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 914,              /* sp_pdparams  */
  YYSYMBOL_sp_pdparam = 915,               /* sp_pdparam  */
  YYSYMBOL_sp_opt_inout = 916,             /* sp_opt_inout  */
  YYSYMBOL_sp_proc_stmts = 917,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 918,           /* sp_proc_stmts1  */
  YYSYMBOL_sp_decls = 919,                 /* sp_decls  */
  YYSYMBOL_sp_decl = 920,                  /* sp_decl  */
  YYSYMBOL_921_10 = 921,                   /* $@10  */
  YYSYMBOL_922_11 = 922,                   /* $@11  */
  YYSYMBOL_sp_handler_type = 923,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 924,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 925,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 926,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 927,                 /* sqlstate  */
  YYSYMBOL_opt_value = 928,                /* opt_value  */
  YYSYMBOL_sp_hcond = 929,                 /* sp_hcond  */
  YYSYMBOL_signal_stmt = 930,              /* signal_stmt  */
  YYSYMBOL_signal_value = 931,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 932,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 933, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 934, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 935,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 936, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 937,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 938,          /* get_diagnostics  */
  YYSYMBOL_which_area = 939,               /* which_area  */
  YYSYMBOL_diagnostics_information = 940,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 941,    /* statement_information  */
  YYSYMBOL_statement_information_item = 942, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 943, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 944, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 945,         /* condition_number  */
  YYSYMBOL_condition_information = 946,    /* condition_information  */
  YYSYMBOL_condition_information_item = 947, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 948, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_idents = 949,           /* sp_decl_idents  */
  YYSYMBOL_sp_opt_default = 950,           /* sp_opt_default  */
  YYSYMBOL_sp_proc_stmt = 951,             /* sp_proc_stmt  */
  YYSYMBOL_sp_proc_stmt_if = 952,          /* sp_proc_stmt_if  */
  YYSYMBOL_953_12 = 953,                   /* $@12  */
  YYSYMBOL_sp_proc_stmt_statement = 954,   /* sp_proc_stmt_statement  */
  YYSYMBOL_955_13 = 955,                   /* $@13  */
  YYSYMBOL_sp_proc_stmt_return = 956,      /* sp_proc_stmt_return  */
  YYSYMBOL_957_14 = 957,                   /* $@14  */
  YYSYMBOL_sp_proc_stmt_unlabeled = 958,   /* sp_proc_stmt_unlabeled  */
  YYSYMBOL_959_15 = 959,                   /* $@15  */
  YYSYMBOL_sp_proc_stmt_leave = 960,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 961,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_open = 962,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch = 963,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_964_16 = 964,                   /* $@16  */
  YYSYMBOL_sp_proc_stmt_close = 965,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_opt_fetch_noise = 966,       /* sp_opt_fetch_noise  */
  YYSYMBOL_sp_fetch_list = 967,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 968,                    /* sp_if  */
  YYSYMBOL_969_17 = 969,                   /* $@17  */
  YYSYMBOL_970_18 = 970,                   /* $@18  */
  YYSYMBOL_971_19 = 971,                   /* $@19  */
  YYSYMBOL_sp_elseifs = 972,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 973,  /* case_stmt_specification  */
  YYSYMBOL_simple_case_stmt = 974,         /* simple_case_stmt  */
  YYSYMBOL_975_20 = 975,                   /* $@20  */
  YYSYMBOL_976_21 = 976,                   /* $@21  */
  YYSYMBOL_searched_case_stmt = 977,       /* searched_case_stmt  */
  YYSYMBOL_978_22 = 978,                   /* $@22  */
  YYSYMBOL_simple_when_clause_list = 979,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 980, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 981,       /* simple_when_clause  */
  YYSYMBOL_982_23 = 982,                   /* $@23  */
  YYSYMBOL_983_24 = 983,                   /* $@24  */
  YYSYMBOL_searched_when_clause = 984,     /* searched_when_clause  */
  YYSYMBOL_985_25 = 985,                   /* $@25  */
  YYSYMBOL_986_26 = 986,                   /* $@26  */
  YYSYMBOL_else_clause_opt = 987,          /* else_clause_opt  */
  YYSYMBOL_sp_labeled_control = 988,       /* sp_labeled_control  */
  YYSYMBOL_989_27 = 989,                   /* $@27  */
  YYSYMBOL_sp_opt_label = 990,             /* sp_opt_label  */
  YYSYMBOL_sp_labeled_block = 991,         /* sp_labeled_block  */
  YYSYMBOL_992_28 = 992,                   /* $@28  */
  YYSYMBOL_sp_unlabeled_block = 993,       /* sp_unlabeled_block  */
  YYSYMBOL_994_29 = 994,                   /* $@29  */
  YYSYMBOL_sp_block_content = 995,         /* sp_block_content  */
  YYSYMBOL_996_30 = 996,                   /* $@30  */
  YYSYMBOL_sp_unlabeled_control = 997,     /* sp_unlabeled_control  */
  YYSYMBOL_998_31 = 998,                   /* $@31  */
  YYSYMBOL_999_32 = 999,                   /* $@32  */
  YYSYMBOL_1000_33 = 1000,                 /* $@33  */
  YYSYMBOL_1001_34 = 1001,                 /* $@34  */
  YYSYMBOL_trg_action_time = 1002,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1003,               /* trg_event  */
  YYSYMBOL_opt_ts_datafile_name = 1004,    /* opt_ts_datafile_name  */
  YYSYMBOL_opt_logfile_group_name = 1005,  /* opt_logfile_group_name  */
  YYSYMBOL_opt_tablespace_options = 1006,  /* opt_tablespace_options  */
  YYSYMBOL_tablespace_option_list = 1007,  /* tablespace_option_list  */
  YYSYMBOL_tablespace_option = 1008,       /* tablespace_option  */
  YYSYMBOL_opt_alter_tablespace_options = 1009, /* opt_alter_tablespace_options  */
  YYSYMBOL_alter_tablespace_option_list = 1010, /* alter_tablespace_option_list  */
  YYSYMBOL_alter_tablespace_option = 1011, /* alter_tablespace_option  */
  YYSYMBOL_opt_undo_tablespace_options = 1012, /* opt_undo_tablespace_options  */
  YYSYMBOL_undo_tablespace_option_list = 1013, /* undo_tablespace_option_list  */
  YYSYMBOL_undo_tablespace_option = 1014,  /* undo_tablespace_option  */
  YYSYMBOL_opt_logfile_group_options = 1015, /* opt_logfile_group_options  */
  YYSYMBOL_logfile_group_option_list = 1016, /* logfile_group_option_list  */
  YYSYMBOL_logfile_group_option = 1017,    /* logfile_group_option  */
  YYSYMBOL_opt_alter_logfile_group_options = 1018, /* opt_alter_logfile_group_options  */
  YYSYMBOL_alter_logfile_group_option_list = 1019, /* alter_logfile_group_option_list  */
  YYSYMBOL_alter_logfile_group_option = 1020, /* alter_logfile_group_option  */
  YYSYMBOL_ts_datafile = 1021,             /* ts_datafile  */
  YYSYMBOL_undo_tablespace_state = 1022,   /* undo_tablespace_state  */
  YYSYMBOL_lg_undofile = 1023,             /* lg_undofile  */
  YYSYMBOL_ts_option_initial_size = 1024,  /* ts_option_initial_size  */
  YYSYMBOL_ts_option_autoextend_size = 1025, /* ts_option_autoextend_size  */
  YYSYMBOL_option_autoextend_size = 1026,  /* option_autoextend_size  */
  YYSYMBOL_ts_option_max_size = 1027,      /* ts_option_max_size  */
  YYSYMBOL_ts_option_extent_size = 1028,   /* ts_option_extent_size  */
  YYSYMBOL_ts_option_undo_buffer_size = 1029, /* ts_option_undo_buffer_size  */
  YYSYMBOL_ts_option_redo_buffer_size = 1030, /* ts_option_redo_buffer_size  */
  YYSYMBOL_ts_option_nodegroup = 1031,     /* ts_option_nodegroup  */
  YYSYMBOL_ts_option_comment = 1032,       /* ts_option_comment  */
  YYSYMBOL_ts_option_engine = 1033,        /* ts_option_engine  */
  YYSYMBOL_ts_option_file_block_size = 1034, /* ts_option_file_block_size  */
  YYSYMBOL_ts_option_wait = 1035,          /* ts_option_wait  */
  YYSYMBOL_ts_option_encryption = 1036,    /* ts_option_encryption  */
  YYSYMBOL_ts_option_engine_attribute = 1037, /* ts_option_engine_attribute  */
  YYSYMBOL_size_number = 1038,             /* size_number  */
  YYSYMBOL_opt_create_table_options_etc = 1039, /* opt_create_table_options_etc  */
  YYSYMBOL_opt_create_partitioning_etc = 1040, /* opt_create_partitioning_etc  */
  YYSYMBOL_opt_duplicate_as_qe = 1041,     /* opt_duplicate_as_qe  */
  YYSYMBOL_as_create_query_expression = 1042, /* as_create_query_expression  */
  YYSYMBOL_partition_clause = 1043,        /* partition_clause  */
  YYSYMBOL_part_type_def = 1044,           /* part_type_def  */
  YYSYMBOL_opt_linear = 1045,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1046,            /* opt_key_algo  */
  YYSYMBOL_opt_num_parts = 1047,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1048,            /* opt_sub_part  */
  YYSYMBOL_opt_name_list = 1049,           /* opt_name_list  */
  YYSYMBOL_name_list = 1050,               /* name_list  */
  YYSYMBOL_opt_num_subparts = 1051,        /* opt_num_subparts  */
  YYSYMBOL_opt_part_defs = 1052,           /* opt_part_defs  */
  YYSYMBOL_part_def_list = 1053,           /* part_def_list  */
  YYSYMBOL_part_definition = 1054,         /* part_definition  */
  YYSYMBOL_opt_part_values = 1055,         /* opt_part_values  */
  YYSYMBOL_part_func_max = 1056,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1057,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1058,         /* part_value_list  */
  YYSYMBOL_part_value_item_list_paren = 1059, /* part_value_item_list_paren  */
  YYSYMBOL_1060_35 = 1060,                 /* $@35  */
  YYSYMBOL_part_value_item_list = 1061,    /* part_value_item_list  */
  YYSYMBOL_part_value_item = 1062,         /* part_value_item  */
  YYSYMBOL_opt_sub_partition = 1063,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1064,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1065,     /* sub_part_definition  */
  YYSYMBOL_opt_part_options = 1066,        /* opt_part_options  */
  YYSYMBOL_part_option_list = 1067,        /* part_option_list  */
  YYSYMBOL_part_option = 1068,             /* part_option  */
  YYSYMBOL_alter_database_options = 1069,  /* alter_database_options  */
  YYSYMBOL_alter_database_option = 1070,   /* alter_database_option  */
  YYSYMBOL_opt_create_database_options = 1071, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1072, /* create_database_options  */
  YYSYMBOL_create_database_option = 1073,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists = 1074,       /* opt_if_not_exists  */
  YYSYMBOL_create_table_options_space_separated = 1075, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1076,    /* create_table_options  */
  YYSYMBOL_opt_comma = 1077,               /* opt_comma  */
  YYSYMBOL_create_table_option = 1078,     /* create_table_option  */
  YYSYMBOL_ternary_option = 1079,          /* ternary_option  */
  YYSYMBOL_default_charset = 1080,         /* default_charset  */
  YYSYMBOL_default_collation = 1081,       /* default_collation  */
  YYSYMBOL_default_encryption = 1082,      /* default_encryption  */
  YYSYMBOL_row_types = 1083,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1084,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1085,                /* udf_type  */
  YYSYMBOL_table_element_list = 1086,      /* table_element_list  */
  YYSYMBOL_table_element = 1087,           /* table_element  */
  YYSYMBOL_column_def = 1088,              /* column_def  */
  YYSYMBOL_opt_references = 1089,          /* opt_references  */
  YYSYMBOL_table_constraint_def = 1090,    /* table_constraint_def  */
  YYSYMBOL_check_constraint = 1091,        /* check_constraint  */
  YYSYMBOL_opt_constraint_name = 1092,     /* opt_constraint_name  */
  YYSYMBOL_opt_not = 1093,                 /* opt_not  */
  YYSYMBOL_opt_constraint_enforcement = 1094, /* opt_constraint_enforcement  */
  YYSYMBOL_constraint_enforcement = 1095,  /* constraint_enforcement  */
  YYSYMBOL_field_def = 1096,               /* field_def  */
  YYSYMBOL_opt_generated_always = 1097,    /* opt_generated_always  */
  YYSYMBOL_opt_stored_attribute = 1098,    /* opt_stored_attribute  */
  YYSYMBOL_type = 1099,                    /* type  */
  YYSYMBOL_spatial_type = 1100,            /* spatial_type  */
  YYSYMBOL_nchar = 1101,                   /* nchar  */
  YYSYMBOL_varchar = 1102,                 /* varchar  */
  YYSYMBOL_nvarchar = 1103,                /* nvarchar  */
  YYSYMBOL_int_type = 1104,                /* int_type  */
  YYSYMBOL_real_type = 1105,               /* real_type  */
  YYSYMBOL_opt_PRECISION = 1106,           /* opt_PRECISION  */
  YYSYMBOL_numeric_type = 1107,            /* numeric_type  */
  YYSYMBOL_standard_float_options = 1108,  /* standard_float_options  */
  YYSYMBOL_float_options = 1109,           /* float_options  */
  YYSYMBOL_precision = 1110,               /* precision  */
  YYSYMBOL_type_datetime_precision = 1111, /* type_datetime_precision  */
  YYSYMBOL_func_datetime_precision = 1112, /* func_datetime_precision  */
  YYSYMBOL_field_options = 1113,           /* field_options  */
  YYSYMBOL_field_opt_list = 1114,          /* field_opt_list  */
  YYSYMBOL_field_option = 1115,            /* field_option  */
  YYSYMBOL_field_length = 1116,            /* field_length  */
  YYSYMBOL_opt_field_length = 1117,        /* opt_field_length  */
  YYSYMBOL_opt_precision = 1118,           /* opt_precision  */
  YYSYMBOL_opt_column_attribute_list = 1119, /* opt_column_attribute_list  */
  YYSYMBOL_column_attribute_list = 1120,   /* column_attribute_list  */
  YYSYMBOL_column_attribute = 1121,        /* column_attribute  */
  YYSYMBOL_column_format = 1122,           /* column_format  */
  YYSYMBOL_storage_media = 1123,           /* storage_media  */
  YYSYMBOL_now = 1124,                     /* now  */
  YYSYMBOL_now_or_signed_literal = 1125,   /* now_or_signed_literal  */
  YYSYMBOL_character_set = 1126,           /* character_set  */
  YYSYMBOL_charset_name = 1127,            /* charset_name  */
  YYSYMBOL_opt_load_data_charset = 1128,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1129, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1130, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1131,          /* collation_name  */
  YYSYMBOL_opt_collate = 1132,             /* opt_collate  */
  YYSYMBOL_opt_default = 1133,             /* opt_default  */
  YYSYMBOL_ascii = 1134,                   /* ascii  */
  YYSYMBOL_unicode = 1135,                 /* unicode  */
  YYSYMBOL_opt_charset_with_opt_binary = 1136, /* opt_charset_with_opt_binary  */
  YYSYMBOL_opt_bin_mod = 1137,             /* opt_bin_mod  */
  YYSYMBOL_ws_num_codepoints = 1138,       /* ws_num_codepoints  */
  YYSYMBOL_1139_36 = 1139,                 /* $@36  */
  YYSYMBOL_opt_primary = 1140,             /* opt_primary  */
  YYSYMBOL_references = 1141,              /* references  */
  YYSYMBOL_opt_ref_list = 1142,            /* opt_ref_list  */
  YYSYMBOL_reference_list = 1143,          /* reference_list  */
  YYSYMBOL_opt_match_clause = 1144,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1145,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1146,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1147,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1148,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1149,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1150,           /* keys_or_index  */
  YYSYMBOL_opt_unique = 1151,              /* opt_unique  */
  YYSYMBOL_opt_fulltext_index_options = 1152, /* opt_fulltext_index_options  */
  YYSYMBOL_fulltext_index_options = 1153,  /* fulltext_index_options  */
  YYSYMBOL_fulltext_index_option = 1154,   /* fulltext_index_option  */
  YYSYMBOL_opt_spatial_index_options = 1155, /* opt_spatial_index_options  */
  YYSYMBOL_spatial_index_options = 1156,   /* spatial_index_options  */
  YYSYMBOL_spatial_index_option = 1157,    /* spatial_index_option  */
  YYSYMBOL_opt_index_options = 1158,       /* opt_index_options  */
  YYSYMBOL_index_options = 1159,           /* index_options  */
  YYSYMBOL_index_option = 1160,            /* index_option  */
  YYSYMBOL_common_index_option = 1161,     /* common_index_option  */
  YYSYMBOL_opt_index_name_and_type = 1162, /* opt_index_name_and_type  */
  YYSYMBOL_opt_index_type_clause = 1163,   /* opt_index_type_clause  */
  YYSYMBOL_index_type_clause = 1164,       /* index_type_clause  */
  YYSYMBOL_visibility = 1165,              /* visibility  */
  YYSYMBOL_index_type = 1166,              /* index_type  */
  YYSYMBOL_key_list = 1167,                /* key_list  */
  YYSYMBOL_key_part = 1168,                /* key_part  */
  YYSYMBOL_key_list_with_expression = 1169, /* key_list_with_expression  */
  YYSYMBOL_key_part_with_expression = 1170, /* key_part_with_expression  */
  YYSYMBOL_opt_ident = 1171,               /* opt_ident  */
  YYSYMBOL_string_list = 1172,             /* string_list  */
  YYSYMBOL_alter_table_stmt = 1173,        /* alter_table_stmt  */
  YYSYMBOL_alter_database_stmt = 1174,     /* alter_database_stmt  */
  YYSYMBOL_1175_37 = 1175,                 /* $@37  */
  YYSYMBOL_alter_procedure_stmt = 1176,    /* alter_procedure_stmt  */
  YYSYMBOL_1177_38 = 1177,                 /* $@38  */
  YYSYMBOL_alter_function_stmt = 1178,     /* alter_function_stmt  */
  YYSYMBOL_1179_39 = 1179,                 /* $@39  */
  YYSYMBOL_alter_view_stmt = 1180,         /* alter_view_stmt  */
  YYSYMBOL_1181_40 = 1181,                 /* $@40  */
  YYSYMBOL_1182_41 = 1182,                 /* $@41  */
  YYSYMBOL_alter_event_stmt = 1183,        /* alter_event_stmt  */
  YYSYMBOL_1184_42 = 1184,                 /* $@42  */
  YYSYMBOL_alter_logfile_stmt = 1185,      /* alter_logfile_stmt  */
  YYSYMBOL_alter_tablespace_stmt = 1186,   /* alter_tablespace_stmt  */
  YYSYMBOL_alter_undo_tablespace_stmt = 1187, /* alter_undo_tablespace_stmt  */
  YYSYMBOL_alter_server_stmt = 1188,       /* alter_server_stmt  */
  YYSYMBOL_alter_user_stmt = 1189,         /* alter_user_stmt  */
  YYSYMBOL_opt_replace_password = 1190,    /* opt_replace_password  */
  YYSYMBOL_alter_resource_group_stmt = 1191, /* alter_resource_group_stmt  */
  YYSYMBOL_alter_user_command = 1192,      /* alter_user_command  */
  YYSYMBOL_opt_user_attribute = 1193,      /* opt_user_attribute  */
  YYSYMBOL_opt_account_lock_password_expire_options = 1194, /* opt_account_lock_password_expire_options  */
  YYSYMBOL_opt_account_lock_password_expire_option_list = 1195, /* opt_account_lock_password_expire_option_list  */
  YYSYMBOL_opt_account_lock_password_expire_option = 1196, /* opt_account_lock_password_expire_option  */
  YYSYMBOL_connect_options = 1197,         /* connect_options  */
  YYSYMBOL_connect_option_list = 1198,     /* connect_option_list  */
  YYSYMBOL_connect_option = 1199,          /* connect_option  */
  YYSYMBOL_user_func = 1200,               /* user_func  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1201, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1202,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1203,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1204,          /* ident_or_empty  */
  YYSYMBOL_opt_alter_table_actions = 1205, /* opt_alter_table_actions  */
  YYSYMBOL_standalone_alter_table_action = 1206, /* standalone_alter_table_action  */
  YYSYMBOL_alter_table_partition_options = 1207, /* alter_table_partition_options  */
  YYSYMBOL_opt_alter_command_list = 1208,  /* opt_alter_command_list  */
  YYSYMBOL_standalone_alter_commands = 1209, /* standalone_alter_commands  */
  YYSYMBOL_opt_with_validation = 1210,     /* opt_with_validation  */
  YYSYMBOL_with_validation = 1211,         /* with_validation  */
  YYSYMBOL_all_or_alt_part_name_list = 1212, /* all_or_alt_part_name_list  */
  YYSYMBOL_alter_list = 1213,              /* alter_list  */
  YYSYMBOL_alter_commands_modifier_list = 1214, /* alter_commands_modifier_list  */
  YYSYMBOL_alter_list_item = 1215,         /* alter_list_item  */
  YYSYMBOL_alter_commands_modifier = 1216, /* alter_commands_modifier  */
  YYSYMBOL_opt_index_lock_and_algorithm = 1217, /* opt_index_lock_and_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1218,  /* alter_algorithm_option  */
  YYSYMBOL_alter_algorithm_option_value = 1219, /* alter_algorithm_option_value  */
  YYSYMBOL_alter_lock_option = 1220,       /* alter_lock_option  */
  YYSYMBOL_alter_lock_option_value = 1221, /* alter_lock_option_value  */
  YYSYMBOL_opt_column = 1222,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1223,              /* opt_ignore  */
  YYSYMBOL_opt_restrict = 1224,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1225,               /* opt_place  */
  YYSYMBOL_opt_to = 1226,                  /* opt_to  */
  YYSYMBOL_group_replication = 1227,       /* group_replication  */
  YYSYMBOL_group_replication_start = 1228, /* group_replication_start  */
  YYSYMBOL_opt_group_replication_start_options = 1229, /* opt_group_replication_start_options  */
  YYSYMBOL_group_replication_start_options = 1230, /* group_replication_start_options  */
  YYSYMBOL_group_replication_start_option = 1231, /* group_replication_start_option  */
  YYSYMBOL_group_replication_user = 1232,  /* group_replication_user  */
  YYSYMBOL_group_replication_password = 1233, /* group_replication_password  */
  YYSYMBOL_group_replication_plugin_auth = 1234, /* group_replication_plugin_auth  */
  YYSYMBOL_stop_replica_stmt = 1235,       /* stop_replica_stmt  */
  YYSYMBOL_start_replica_stmt = 1236,      /* start_replica_stmt  */
  YYSYMBOL_1237_43 = 1237,                 /* $@43  */
  YYSYMBOL_1238_44 = 1238,                 /* $@44  */
  YYSYMBOL_start = 1239,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1240, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1241, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1242, /* start_transaction_option  */
  YYSYMBOL_opt_user_option = 1243,         /* opt_user_option  */
  YYSYMBOL_opt_password_option = 1244,     /* opt_password_option  */
  YYSYMBOL_opt_default_auth_option = 1245, /* opt_default_auth_option  */
  YYSYMBOL_opt_plugin_dir_option = 1246,   /* opt_plugin_dir_option  */
  YYSYMBOL_opt_replica_thread_option_list = 1247, /* opt_replica_thread_option_list  */
  YYSYMBOL_replica_thread_option_list = 1248, /* replica_thread_option_list  */
  YYSYMBOL_replica_thread_option = 1249,   /* replica_thread_option  */
  YYSYMBOL_opt_replica_until = 1250,       /* opt_replica_until  */
  YYSYMBOL_replica_until = 1251,           /* replica_until  */
  YYSYMBOL_checksum = 1252,                /* checksum  */
  YYSYMBOL_opt_checksum_type = 1253,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_stmt = 1254,       /* repair_table_stmt  */
  YYSYMBOL_opt_mi_repair_types = 1255,     /* opt_mi_repair_types  */
  YYSYMBOL_mi_repair_types = 1256,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1257,          /* mi_repair_type  */
  YYSYMBOL_analyze_table_stmt = 1258,      /* analyze_table_stmt  */
  YYSYMBOL_opt_histogram_auto_update = 1259, /* opt_histogram_auto_update  */
  YYSYMBOL_opt_histogram_num_buckets = 1260, /* opt_histogram_num_buckets  */
  YYSYMBOL_opt_histogram_update_param = 1261, /* opt_histogram_update_param  */
  YYSYMBOL_opt_histogram = 1262,           /* opt_histogram  */
  YYSYMBOL_binlog_base64_event = 1263,     /* binlog_base64_event  */
  YYSYMBOL_check_table_stmt = 1264,        /* check_table_stmt  */
  YYSYMBOL_opt_mi_check_types = 1265,      /* opt_mi_check_types  */
  YYSYMBOL_mi_check_types = 1266,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1267,           /* mi_check_type  */
  YYSYMBOL_optimize_table_stmt = 1268,     /* optimize_table_stmt  */
  YYSYMBOL_opt_no_write_to_binlog = 1269,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1270,                  /* rename  */
  YYSYMBOL_1271_45 = 1271,                 /* $@45  */
  YYSYMBOL_rename_list = 1272,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1273,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1274,          /* table_to_table  */
  YYSYMBOL_keycache_stmt = 1275,           /* keycache_stmt  */
  YYSYMBOL_keycache_list = 1276,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1277,      /* assign_to_keycache  */
  YYSYMBOL_key_cache_name = 1278,          /* key_cache_name  */
  YYSYMBOL_preload_stmt = 1279,            /* preload_stmt  */
  YYSYMBOL_preload_list = 1280,            /* preload_list  */
  YYSYMBOL_preload_keys = 1281,            /* preload_keys  */
  YYSYMBOL_adm_partition = 1282,           /* adm_partition  */
  YYSYMBOL_opt_cache_key_list = 1283,      /* opt_cache_key_list  */
  YYSYMBOL_opt_ignore_leaves = 1284,       /* opt_ignore_leaves  */
  YYSYMBOL_select_stmt = 1285,             /* select_stmt  */
  YYSYMBOL_select_stmt_with_into = 1286,   /* select_stmt_with_into  */
  YYSYMBOL_query_expression = 1287,        /* query_expression  */
  YYSYMBOL_query_expression_body = 1288,   /* query_expression_body  */
  YYSYMBOL_query_expression_parens = 1289, /* query_expression_parens  */
  YYSYMBOL_query_primary = 1290,           /* query_primary  */
  YYSYMBOL_query_specification = 1291,     /* query_specification  */
  YYSYMBOL_opt_from_clause = 1292,         /* opt_from_clause  */
  YYSYMBOL_from_clause = 1293,             /* from_clause  */
  YYSYMBOL_from_tables = 1294,             /* from_tables  */
  YYSYMBOL_table_reference_list = 1295,    /* table_reference_list  */
  YYSYMBOL_table_value_constructor = 1296, /* table_value_constructor  */
  YYSYMBOL_explicit_table = 1297,          /* explicit_table  */
  YYSYMBOL_select_options = 1298,          /* select_options  */
  YYSYMBOL_select_option_list = 1299,      /* select_option_list  */
  YYSYMBOL_select_option = 1300,           /* select_option  */
  YYSYMBOL_locking_clause_list = 1301,     /* locking_clause_list  */
  YYSYMBOL_locking_clause = 1302,          /* locking_clause  */
  YYSYMBOL_lock_strength = 1303,           /* lock_strength  */
  YYSYMBOL_table_locking_list = 1304,      /* table_locking_list  */
  YYSYMBOL_opt_locked_row_action = 1305,   /* opt_locked_row_action  */
  YYSYMBOL_locked_row_action = 1306,       /* locked_row_action  */
  YYSYMBOL_select_item_list = 1307,        /* select_item_list  */
  YYSYMBOL_select_item = 1308,             /* select_item  */
  YYSYMBOL_select_alias = 1309,            /* select_alias  */
  YYSYMBOL_optional_braces = 1310,         /* optional_braces  */
  YYSYMBOL_expr = 1311,                    /* expr  */
  YYSYMBOL_bool_pri = 1312,                /* bool_pri  */
  YYSYMBOL_predicate = 1313,               /* predicate  */
  YYSYMBOL_opt_of = 1314,                  /* opt_of  */
  YYSYMBOL_bit_expr = 1315,                /* bit_expr  */
  YYSYMBOL_or = 1316,                      /* or  */
  YYSYMBOL_and = 1317,                     /* and  */
  YYSYMBOL_not = 1318,                     /* not  */
  YYSYMBOL_not2 = 1319,                    /* not2  */
  YYSYMBOL_comp_op = 1320,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1321,              /* all_or_any  */
  YYSYMBOL_simple_expr = 1322,             /* simple_expr  */
  YYSYMBOL_opt_array_cast = 1323,          /* opt_array_cast  */
  YYSYMBOL_function_call_keyword = 1324,   /* function_call_keyword  */
  YYSYMBOL_function_call_nonkeyword = 1325, /* function_call_nonkeyword  */
  YYSYMBOL_opt_returning_type = 1326,      /* opt_returning_type  */
  YYSYMBOL_function_call_conflict = 1327,  /* function_call_conflict  */
  YYSYMBOL_geometry_function = 1328,       /* geometry_function  */
  YYSYMBOL_function_call_generic = 1329,   /* function_call_generic  */
  YYSYMBOL_fulltext_options = 1330,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1331, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1332,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1333,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1334,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1335,                /* udf_expr  */
  YYSYMBOL_set_function_specification = 1336, /* set_function_specification  */
  YYSYMBOL_sum_expr = 1337,                /* sum_expr  */
  YYSYMBOL_sampling_method = 1338,         /* sampling_method  */
  YYSYMBOL_sampling_percentage = 1339,     /* sampling_percentage  */
  YYSYMBOL_opt_tablesample_clause = 1340,  /* opt_tablesample_clause  */
  YYSYMBOL_window_func_call = 1341,        /* window_func_call  */
  YYSYMBOL_opt_lead_lag_info = 1342,       /* opt_lead_lag_info  */
  YYSYMBOL_stable_integer = 1343,          /* stable_integer  */
  YYSYMBOL_param_or_var = 1344,            /* param_or_var  */
  YYSYMBOL_opt_ll_default = 1345,          /* opt_ll_default  */
  YYSYMBOL_opt_null_treatment = 1346,      /* opt_null_treatment  */
  YYSYMBOL_opt_from_first_last = 1347,     /* opt_from_first_last  */
  YYSYMBOL_opt_windowing_clause = 1348,    /* opt_windowing_clause  */
  YYSYMBOL_windowing_clause = 1349,        /* windowing_clause  */
  YYSYMBOL_window_name_or_spec = 1350,     /* window_name_or_spec  */
  YYSYMBOL_window_name = 1351,             /* window_name  */
  YYSYMBOL_window_spec = 1352,             /* window_spec  */
  YYSYMBOL_window_spec_details = 1353,     /* window_spec_details  */
  YYSYMBOL_opt_existing_window_name = 1354, /* opt_existing_window_name  */
  YYSYMBOL_opt_partition_clause = 1355,    /* opt_partition_clause  */
  YYSYMBOL_opt_window_order_by_clause = 1356, /* opt_window_order_by_clause  */
  YYSYMBOL_opt_window_frame_clause = 1357, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_extent = 1358,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1359,      /* window_frame_start  */
  YYSYMBOL_window_frame_between = 1360,    /* window_frame_between  */
  YYSYMBOL_window_frame_bound = 1361,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1362, /* opt_window_frame_exclusion  */
  YYSYMBOL_window_frame_units = 1363,      /* window_frame_units  */
  YYSYMBOL_grouping_operation = 1364,      /* grouping_operation  */
  YYSYMBOL_in_expression_user_variable_assignment = 1365, /* in_expression_user_variable_assignment  */
  YYSYMBOL_rvalue_system_or_user_variable = 1366, /* rvalue_system_or_user_variable  */
  YYSYMBOL_opt_distinct = 1367,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1368,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1369,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1370,             /* gorder_list  */
  YYSYMBOL_in_sum_expr = 1371,             /* in_sum_expr  */
  YYSYMBOL_cast_type = 1372,               /* cast_type  */
  YYSYMBOL_opt_expr_list = 1373,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1374,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1375,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1376,              /* ident_list  */
  YYSYMBOL_opt_expr = 1377,                /* opt_expr  */
  YYSYMBOL_opt_else = 1378,                /* opt_else  */
  YYSYMBOL_when_list = 1379,               /* when_list  */
  YYSYMBOL_table_reference = 1380,         /* table_reference  */
  YYSYMBOL_esc_table_reference = 1381,     /* esc_table_reference  */
  YYSYMBOL_joined_table = 1382,            /* joined_table  */
  YYSYMBOL_natural_join_type = 1383,       /* natural_join_type  */
  YYSYMBOL_inner_join_type = 1384,         /* inner_join_type  */
  YYSYMBOL_outer_join_type = 1385,         /* outer_join_type  */
  YYSYMBOL_opt_inner = 1386,               /* opt_inner  */
  YYSYMBOL_opt_outer = 1387,               /* opt_outer  */
  YYSYMBOL_opt_use_partition = 1388,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1389,           /* use_partition  */
  YYSYMBOL_table_factor = 1390,            /* table_factor  */
  YYSYMBOL_table_reference_list_parens = 1391, /* table_reference_list_parens  */
  YYSYMBOL_single_table_parens = 1392,     /* single_table_parens  */
  YYSYMBOL_single_table = 1393,            /* single_table  */
  YYSYMBOL_joined_table_parens = 1394,     /* joined_table_parens  */
  YYSYMBOL_derived_table = 1395,           /* derived_table  */
  YYSYMBOL_table_function = 1396,          /* table_function  */
  YYSYMBOL_columns_clause = 1397,          /* columns_clause  */
  YYSYMBOL_columns_list = 1398,            /* columns_list  */
  YYSYMBOL_jt_column = 1399,               /* jt_column  */
  YYSYMBOL_jt_column_type = 1400,          /* jt_column_type  */
  YYSYMBOL_opt_on_empty_or_error = 1401,   /* opt_on_empty_or_error  */
  YYSYMBOL_opt_on_empty_or_error_json_table = 1402, /* opt_on_empty_or_error_json_table  */
  YYSYMBOL_on_empty = 1403,                /* on_empty  */
  YYSYMBOL_on_error = 1404,                /* on_error  */
  YYSYMBOL_json_on_response = 1405,        /* json_on_response  */
  YYSYMBOL_index_hint_clause = 1406,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1407,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1408,   /* index_hint_definition  */
  YYSYMBOL_index_hints_list = 1409,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1410,    /* opt_index_hints_list  */
  YYSYMBOL_opt_key_definition = 1411,      /* opt_key_definition  */
  YYSYMBOL_opt_key_usage_list = 1412,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1413,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1414,          /* key_usage_list  */
  YYSYMBOL_using_list = 1415,              /* using_list  */
  YYSYMBOL_ident_string_list = 1416,       /* ident_string_list  */
  YYSYMBOL_interval = 1417,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1418,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1419,          /* date_time_type  */
  YYSYMBOL_opt_as = 1420,                  /* opt_as  */
  YYSYMBOL_opt_table_alias = 1421,         /* opt_table_alias  */
  YYSYMBOL_opt_all = 1422,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1423,        /* opt_where_clause  */
  YYSYMBOL_where_clause = 1424,            /* where_clause  */
  YYSYMBOL_opt_having_clause = 1425,       /* opt_having_clause  */
  YYSYMBOL_opt_qualify_clause = 1426,      /* opt_qualify_clause  */
  YYSYMBOL_with_clause = 1427,             /* with_clause  */
  YYSYMBOL_with_list = 1428,               /* with_list  */
  YYSYMBOL_common_table_expr = 1429,       /* common_table_expr  */
  YYSYMBOL_opt_derived_column_list = 1430, /* opt_derived_column_list  */
  YYSYMBOL_simple_ident_list = 1431,       /* simple_ident_list  */
  YYSYMBOL_opt_window_clause = 1432,       /* opt_window_clause  */
  YYSYMBOL_window_definition_list = 1433,  /* window_definition_list  */
  YYSYMBOL_window_definition = 1434,       /* window_definition  */
  YYSYMBOL_opt_group_clause = 1435,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1436,              /* group_list  */
  YYSYMBOL_olap_opt = 1437,                /* olap_opt  */
  YYSYMBOL_alter_order_list = 1438,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1439,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1440,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1441,            /* order_clause  */
  YYSYMBOL_order_list = 1442,              /* order_list  */
  YYSYMBOL_opt_ordering_direction = 1443,  /* opt_ordering_direction  */
  YYSYMBOL_ordering_direction = 1444,      /* ordering_direction  */
  YYSYMBOL_opt_limit_clause = 1445,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause = 1446,            /* limit_clause  */
  YYSYMBOL_limit_options = 1447,           /* limit_options  */
  YYSYMBOL_limit_option = 1448,            /* limit_option  */
  YYSYMBOL_opt_simple_limit = 1449,        /* opt_simple_limit  */
  YYSYMBOL_ulong_num = 1450,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1451,          /* real_ulong_num  */
  YYSYMBOL_ulonglong_num = 1452,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1453,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1454,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1455,                 /* dec_num  */
  YYSYMBOL_select_var_list = 1456,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1457,        /* select_var_ident  */
  YYSYMBOL_into_clause = 1458,             /* into_clause  */
  YYSYMBOL_into_destination = 1459,        /* into_destination  */
  YYSYMBOL_do_stmt = 1460,                 /* do_stmt  */
  YYSYMBOL_drop_table_stmt = 1461,         /* drop_table_stmt  */
  YYSYMBOL_drop_index_stmt = 1462,         /* drop_index_stmt  */
  YYSYMBOL_drop_database_stmt = 1463,      /* drop_database_stmt  */
  YYSYMBOL_drop_function_stmt = 1464,      /* drop_function_stmt  */
  YYSYMBOL_drop_resource_group_stmt = 1465, /* drop_resource_group_stmt  */
  YYSYMBOL_drop_procedure_stmt = 1466,     /* drop_procedure_stmt  */
  YYSYMBOL_drop_user_stmt = 1467,          /* drop_user_stmt  */
  YYSYMBOL_drop_view_stmt = 1468,          /* drop_view_stmt  */
  YYSYMBOL_drop_event_stmt = 1469,         /* drop_event_stmt  */
  YYSYMBOL_drop_trigger_stmt = 1470,       /* drop_trigger_stmt  */
  YYSYMBOL_drop_tablespace_stmt = 1471,    /* drop_tablespace_stmt  */
  YYSYMBOL_drop_undo_tablespace_stmt = 1472, /* drop_undo_tablespace_stmt  */
  YYSYMBOL_drop_logfile_stmt = 1473,       /* drop_logfile_stmt  */
  YYSYMBOL_drop_server_stmt = 1474,        /* drop_server_stmt  */
  YYSYMBOL_drop_srs_stmt = 1475,           /* drop_srs_stmt  */
  YYSYMBOL_drop_role_stmt = 1476,          /* drop_role_stmt  */
  YYSYMBOL_table_list = 1477,              /* table_list  */
  YYSYMBOL_table_alias_ref_list = 1478,    /* table_alias_ref_list  */
  YYSYMBOL_if_exists = 1479,               /* if_exists  */
  YYSYMBOL_opt_ignore_unknown_user = 1480, /* opt_ignore_unknown_user  */
  YYSYMBOL_opt_temporary = 1481,           /* opt_temporary  */
  YYSYMBOL_opt_drop_ts_options = 1482,     /* opt_drop_ts_options  */
  YYSYMBOL_drop_ts_option_list = 1483,     /* drop_ts_option_list  */
  YYSYMBOL_drop_ts_option = 1484,          /* drop_ts_option  */
  YYSYMBOL_insert_stmt = 1485,             /* insert_stmt  */
  YYSYMBOL_replace_stmt = 1486,            /* replace_stmt  */
  YYSYMBOL_insert_lock_option = 1487,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1488,     /* replace_lock_option  */
  YYSYMBOL_opt_INTO = 1489,                /* opt_INTO  */
  YYSYMBOL_insert_from_constructor = 1490, /* insert_from_constructor  */
  YYSYMBOL_insert_query_expression = 1491, /* insert_query_expression  */
  YYSYMBOL_insert_columns = 1492,          /* insert_columns  */
  YYSYMBOL_insert_values = 1493,           /* insert_values  */
  YYSYMBOL_query_expression_with_opt_locking_clauses = 1494, /* query_expression_with_opt_locking_clauses  */
  YYSYMBOL_value_or_values = 1495,         /* value_or_values  */
  YYSYMBOL_values_list = 1496,             /* values_list  */
  YYSYMBOL_values_row_list = 1497,         /* values_row_list  */
  YYSYMBOL_equal = 1498,                   /* equal  */
  YYSYMBOL_opt_equal = 1499,               /* opt_equal  */
  YYSYMBOL_row_value = 1500,               /* row_value  */
  YYSYMBOL_row_value_explicit = 1501,      /* row_value_explicit  */
  YYSYMBOL_opt_values = 1502,              /* opt_values  */
  YYSYMBOL_values = 1503,                  /* values  */
  YYSYMBOL_expr_or_default = 1504,         /* expr_or_default  */
  YYSYMBOL_opt_values_reference = 1505,    /* opt_values_reference  */
  YYSYMBOL_opt_insert_update_list = 1506,  /* opt_insert_update_list  */
  YYSYMBOL_update_stmt = 1507,             /* update_stmt  */
  YYSYMBOL_opt_with_clause = 1508,         /* opt_with_clause  */
  YYSYMBOL_update_list = 1509,             /* update_list  */
  YYSYMBOL_update_elem = 1510,             /* update_elem  */
  YYSYMBOL_opt_low_priority = 1511,        /* opt_low_priority  */
  YYSYMBOL_delete_stmt = 1512,             /* delete_stmt  */
  YYSYMBOL_opt_wild = 1513,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1514,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1515,       /* opt_delete_option  */
  YYSYMBOL_truncate_stmt = 1516,           /* truncate_stmt  */
  YYSYMBOL_opt_table = 1517,               /* opt_table  */
  YYSYMBOL_opt_profile_defs = 1518,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1519,            /* profile_defs  */
  YYSYMBOL_profile_def = 1520,             /* profile_def  */
  YYSYMBOL_opt_for_query = 1521,           /* opt_for_query  */
  YYSYMBOL_show_databases_stmt = 1522,     /* show_databases_stmt  */
  YYSYMBOL_show_tables_stmt = 1523,        /* show_tables_stmt  */
  YYSYMBOL_show_triggers_stmt = 1524,      /* show_triggers_stmt  */
  YYSYMBOL_show_events_stmt = 1525,        /* show_events_stmt  */
  YYSYMBOL_show_table_status_stmt = 1526,  /* show_table_status_stmt  */
  YYSYMBOL_show_open_tables_stmt = 1527,   /* show_open_tables_stmt  */
  YYSYMBOL_show_plugins_stmt = 1528,       /* show_plugins_stmt  */
  YYSYMBOL_show_engine_logs_stmt = 1529,   /* show_engine_logs_stmt  */
  YYSYMBOL_show_engine_mutex_stmt = 1530,  /* show_engine_mutex_stmt  */
  YYSYMBOL_show_engine_status_stmt = 1531, /* show_engine_status_stmt  */
  YYSYMBOL_show_columns_stmt = 1532,       /* show_columns_stmt  */
  YYSYMBOL_show_binary_logs_stmt = 1533,   /* show_binary_logs_stmt  */
  YYSYMBOL_show_replicas_stmt = 1534,      /* show_replicas_stmt  */
  YYSYMBOL_show_binlog_events_stmt = 1535, /* show_binlog_events_stmt  */
  YYSYMBOL_show_relaylog_events_stmt = 1536, /* show_relaylog_events_stmt  */
  YYSYMBOL_show_keys_stmt = 1537,          /* show_keys_stmt  */
  YYSYMBOL_show_engines_stmt = 1538,       /* show_engines_stmt  */
  YYSYMBOL_show_count_warnings_stmt = 1539, /* show_count_warnings_stmt  */
  YYSYMBOL_show_count_errors_stmt = 1540,  /* show_count_errors_stmt  */
  YYSYMBOL_show_warnings_stmt = 1541,      /* show_warnings_stmt  */
  YYSYMBOL_show_errors_stmt = 1542,        /* show_errors_stmt  */
  YYSYMBOL_show_profiles_stmt = 1543,      /* show_profiles_stmt  */
  YYSYMBOL_show_profile_stmt = 1544,       /* show_profile_stmt  */
  YYSYMBOL_show_status_stmt = 1545,        /* show_status_stmt  */
  YYSYMBOL_show_processlist_stmt = 1546,   /* show_processlist_stmt  */
  YYSYMBOL_show_variables_stmt = 1547,     /* show_variables_stmt  */
  YYSYMBOL_show_character_set_stmt = 1548, /* show_character_set_stmt  */
  YYSYMBOL_show_collation_stmt = 1549,     /* show_collation_stmt  */
  YYSYMBOL_show_privileges_stmt = 1550,    /* show_privileges_stmt  */
  YYSYMBOL_show_grants_stmt = 1551,        /* show_grants_stmt  */
  YYSYMBOL_show_create_database_stmt = 1552, /* show_create_database_stmt  */
  YYSYMBOL_show_create_table_stmt = 1553,  /* show_create_table_stmt  */
  YYSYMBOL_show_create_view_stmt = 1554,   /* show_create_view_stmt  */
  YYSYMBOL_show_binary_log_status_stmt = 1555, /* show_binary_log_status_stmt  */
  YYSYMBOL_show_replica_status_stmt = 1556, /* show_replica_status_stmt  */
  YYSYMBOL_show_create_procedure_stmt = 1557, /* show_create_procedure_stmt  */
  YYSYMBOL_show_create_function_stmt = 1558, /* show_create_function_stmt  */
  YYSYMBOL_show_create_trigger_stmt = 1559, /* show_create_trigger_stmt  */
  YYSYMBOL_show_procedure_status_stmt = 1560, /* show_procedure_status_stmt  */
  YYSYMBOL_show_function_status_stmt = 1561, /* show_function_status_stmt  */
  YYSYMBOL_show_procedure_code_stmt = 1562, /* show_procedure_code_stmt  */
  YYSYMBOL_show_function_code_stmt = 1563, /* show_function_code_stmt  */
  YYSYMBOL_show_create_event_stmt = 1564,  /* show_create_event_stmt  */
  YYSYMBOL_show_create_user_stmt = 1565,   /* show_create_user_stmt  */
  YYSYMBOL_show_parse_tree_stmt = 1566,    /* show_parse_tree_stmt  */
  YYSYMBOL_engine_or_all = 1567,           /* engine_or_all  */
  YYSYMBOL_opt_storage = 1568,             /* opt_storage  */
  YYSYMBOL_opt_db = 1569,                  /* opt_db  */
  YYSYMBOL_opt_full = 1570,                /* opt_full  */
  YYSYMBOL_opt_extended = 1571,            /* opt_extended  */
  YYSYMBOL_opt_show_cmd_type = 1572,       /* opt_show_cmd_type  */
  YYSYMBOL_from_or_in = 1573,              /* from_or_in  */
  YYSYMBOL_opt_binlog_in = 1574,           /* opt_binlog_in  */
  YYSYMBOL_binlog_from = 1575,             /* binlog_from  */
  YYSYMBOL_opt_wild_or_where = 1576,       /* opt_wild_or_where  */
  YYSYMBOL_describe_stmt = 1577,           /* describe_stmt  */
  YYSYMBOL_explain_stmt = 1578,            /* explain_stmt  */
  YYSYMBOL_explainable_stmt = 1579,        /* explainable_stmt  */
  YYSYMBOL_describe_command = 1580,        /* describe_command  */
  YYSYMBOL_opt_explain_format = 1581,      /* opt_explain_format  */
  YYSYMBOL_opt_explain_options = 1582,     /* opt_explain_options  */
  YYSYMBOL_opt_explain_into = 1583,        /* opt_explain_into  */
  YYSYMBOL_opt_explain_for_schema = 1584,  /* opt_explain_for_schema  */
  YYSYMBOL_opt_describe_column = 1585,     /* opt_describe_column  */
  YYSYMBOL_flush = 1586,                   /* flush  */
  YYSYMBOL_1587_46 = 1587,                 /* $@46  */
  YYSYMBOL_flush_options = 1588,           /* flush_options  */
  YYSYMBOL_1589_47 = 1589,                 /* $@47  */
  YYSYMBOL_opt_flush_lock = 1590,          /* opt_flush_lock  */
  YYSYMBOL_1591_48 = 1591,                 /* $@48  */
  YYSYMBOL_flush_options_list = 1592,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1593,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1594,          /* opt_table_list  */
  YYSYMBOL_reset = 1595,                   /* reset  */
  YYSYMBOL_1596_49 = 1596,                 /* $@49  */
  YYSYMBOL_reset_options = 1597,           /* reset_options  */
  YYSYMBOL_opt_if_exists_ident = 1598,     /* opt_if_exists_ident  */
  YYSYMBOL_persisted_variable_ident = 1599, /* persisted_variable_ident  */
  YYSYMBOL_reset_option = 1600,            /* reset_option  */
  YYSYMBOL_1601_50 = 1601,                 /* $@50  */
  YYSYMBOL_1602_51 = 1602,                 /* $@51  */
  YYSYMBOL_opt_replica_reset_options = 1603, /* opt_replica_reset_options  */
  YYSYMBOL_source_reset_options = 1604,    /* source_reset_options  */
  YYSYMBOL_purge = 1605,                   /* purge  */
  YYSYMBOL_1606_52 = 1606,                 /* $@52  */
  YYSYMBOL_purge_options = 1607,           /* purge_options  */
  YYSYMBOL_purge_option = 1608,            /* purge_option  */
  YYSYMBOL_kill = 1609,                    /* kill  */
  YYSYMBOL_kill_option = 1610,             /* kill_option  */
  YYSYMBOL_use = 1611,                     /* use  */
  YYSYMBOL_load_stmt = 1612,               /* load_stmt  */
  YYSYMBOL_data_or_xml = 1613,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1614,               /* opt_local  */
  YYSYMBOL_opt_from_keyword = 1615,        /* opt_from_keyword  */
  YYSYMBOL_load_data_lock = 1616,          /* load_data_lock  */
  YYSYMBOL_load_source_type = 1617,        /* load_source_type  */
  YYSYMBOL_opt_source_count = 1618,        /* opt_source_count  */
  YYSYMBOL_opt_source_order = 1619,        /* opt_source_order  */
  YYSYMBOL_opt_duplicate = 1620,           /* opt_duplicate  */
  YYSYMBOL_duplicate = 1621,               /* duplicate  */
  YYSYMBOL_opt_field_term = 1622,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1623,         /* field_term_list  */
  YYSYMBOL_field_term = 1624,              /* field_term  */
  YYSYMBOL_opt_line_term = 1625,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1626,          /* line_term_list  */
  YYSYMBOL_line_term = 1627,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1628, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1629,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1630,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1631,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1632,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1633,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1634,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1635,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1636,      /* load_data_set_elem  */
  YYSYMBOL_opt_load_algorithm = 1637,      /* opt_load_algorithm  */
  YYSYMBOL_opt_compression_algorithm = 1638, /* opt_compression_algorithm  */
  YYSYMBOL_opt_load_parallel = 1639,       /* opt_load_parallel  */
  YYSYMBOL_opt_load_memory = 1640,         /* opt_load_memory  */
  YYSYMBOL_text_literal = 1641,            /* text_literal  */
  YYSYMBOL_text_string = 1642,             /* text_string  */
  YYSYMBOL_param_marker = 1643,            /* param_marker  */
  YYSYMBOL_signed_literal = 1644,          /* signed_literal  */
  YYSYMBOL_signed_literal_or_null = 1645,  /* signed_literal_or_null  */
  YYSYMBOL_null_as_literal = 1646,         /* null_as_literal  */
  YYSYMBOL_literal = 1647,                 /* literal  */
  YYSYMBOL_literal_or_null = 1648,         /* literal_or_null  */
  YYSYMBOL_NUM_literal = 1649,             /* NUM_literal  */
  YYSYMBOL_int64_literal = 1650,           /* int64_literal  */
  YYSYMBOL_temporal_literal = 1651,        /* temporal_literal  */
  YYSYMBOL_opt_interval = 1652,            /* opt_interval  */
  YYSYMBOL_insert_column = 1653,           /* insert_column  */
  YYSYMBOL_table_wild = 1654,              /* table_wild  */
  YYSYMBOL_order_expr = 1655,              /* order_expr  */
  YYSYMBOL_grouping_expr = 1656,           /* grouping_expr  */
  YYSYMBOL_simple_ident = 1657,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1658,    /* simple_ident_nospvar  */
  YYSYMBOL_simple_ident_q = 1659,          /* simple_ident_q  */
  YYSYMBOL_table_ident = 1660,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1661,    /* table_ident_opt_wild  */
  YYSYMBOL_IDENT_sys = 1662,               /* IDENT_sys  */
  YYSYMBOL_TEXT_STRING_sys_nonewline = 1663, /* TEXT_STRING_sys_nonewline  */
  YYSYMBOL_filter_wild_db_table_string = 1664, /* filter_wild_db_table_string  */
  YYSYMBOL_TEXT_STRING_sys = 1665,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1666,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1667,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_TEXT_STRING_password = 1668,    /* TEXT_STRING_password  */
  YYSYMBOL_TEXT_STRING_hash = 1669,        /* TEXT_STRING_hash  */
  YYSYMBOL_TEXT_STRING_validated = 1670,   /* TEXT_STRING_validated  */
  YYSYMBOL_ident = 1671,                   /* ident  */
  YYSYMBOL_role_ident = 1672,              /* role_ident  */
  YYSYMBOL_label_ident = 1673,             /* label_ident  */
  YYSYMBOL_lvalue_ident = 1674,            /* lvalue_ident  */
  YYSYMBOL_ident_or_text = 1675,           /* ident_or_text  */
  YYSYMBOL_role_ident_or_text = 1676,      /* role_ident_or_text  */
  YYSYMBOL_user_ident_or_text = 1677,      /* user_ident_or_text  */
  YYSYMBOL_user = 1678,                    /* user  */
  YYSYMBOL_role = 1679,                    /* role  */
  YYSYMBOL_schema = 1680,                  /* schema  */
  YYSYMBOL_ident_keyword = 1681,           /* ident_keyword  */
  YYSYMBOL_ident_keywords_ambiguous_1_roles_and_labels = 1682, /* ident_keywords_ambiguous_1_roles_and_labels  */
  YYSYMBOL_ident_keywords_ambiguous_2_labels = 1683, /* ident_keywords_ambiguous_2_labels  */
  YYSYMBOL_label_keyword = 1684,           /* label_keyword  */
  YYSYMBOL_ident_keywords_ambiguous_3_roles = 1685, /* ident_keywords_ambiguous_3_roles  */
  YYSYMBOL_ident_keywords_unambiguous = 1686, /* ident_keywords_unambiguous  */
  YYSYMBOL_role_keyword = 1687,            /* role_keyword  */
  YYSYMBOL_lvalue_keyword = 1688,          /* lvalue_keyword  */
  YYSYMBOL_ident_keywords_ambiguous_4_system_variables = 1689, /* ident_keywords_ambiguous_4_system_variables  */
  YYSYMBOL_set = 1690,                     /* set  */
  YYSYMBOL_start_option_value_list = 1691, /* start_option_value_list  */
  YYSYMBOL_set_role_stmt = 1692,           /* set_role_stmt  */
  YYSYMBOL_opt_except_role_list = 1693,    /* opt_except_role_list  */
  YYSYMBOL_set_resource_group_stmt = 1694, /* set_resource_group_stmt  */
  YYSYMBOL_thread_id_list = 1695,          /* thread_id_list  */
  YYSYMBOL_thread_id_list_options = 1696,  /* thread_id_list_options  */
  YYSYMBOL_start_option_value_list_following_option_type = 1697, /* start_option_value_list_following_option_type  */
  YYSYMBOL_option_value_list_continued = 1698, /* option_value_list_continued  */
  YYSYMBOL_option_value_list = 1699,       /* option_value_list  */
  YYSYMBOL_option_value = 1700,            /* option_value  */
  YYSYMBOL_option_type = 1701,             /* option_type  */
  YYSYMBOL_opt_var_type = 1702,            /* opt_var_type  */
  YYSYMBOL_opt_rvalue_system_variable_type = 1703, /* opt_rvalue_system_variable_type  */
  YYSYMBOL_opt_set_var_ident_type = 1704,  /* opt_set_var_ident_type  */
  YYSYMBOL_option_value_following_option_type = 1705, /* option_value_following_option_type  */
  YYSYMBOL_option_value_no_option_type = 1706, /* option_value_no_option_type  */
  YYSYMBOL_lvalue_variable = 1707,         /* lvalue_variable  */
  YYSYMBOL_rvalue_system_variable = 1708,  /* rvalue_system_variable  */
  YYSYMBOL_transaction_characteristics = 1709, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1710, /* transaction_access_mode  */
  YYSYMBOL_opt_transaction_access_mode = 1711, /* opt_transaction_access_mode  */
  YYSYMBOL_isolation_level = 1712,         /* isolation_level  */
  YYSYMBOL_opt_isolation_level = 1713,     /* opt_isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1714, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1715,         /* isolation_types  */
  YYSYMBOL_set_expr_or_default = 1716,     /* set_expr_or_default  */
  YYSYMBOL_lock = 1717,                    /* lock  */
  YYSYMBOL_1718_53 = 1718,                 /* $@53  */
  YYSYMBOL_table_or_tables = 1719,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1720,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1721,              /* table_lock  */
  YYSYMBOL_lock_option = 1722,             /* lock_option  */
  YYSYMBOL_unlock = 1723,                  /* unlock  */
  YYSYMBOL_1724_54 = 1724,                 /* $@54  */
  YYSYMBOL_shutdown_stmt = 1725,           /* shutdown_stmt  */
  YYSYMBOL_restart_server_stmt = 1726,     /* restart_server_stmt  */
  YYSYMBOL_alter_instance_stmt = 1727,     /* alter_instance_stmt  */
  YYSYMBOL_alter_instance_action = 1728,   /* alter_instance_action  */
  YYSYMBOL_handler_stmt = 1729,            /* handler_stmt  */
  YYSYMBOL_handler_scan_function = 1730,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1731,   /* handler_rkey_function  */
  YYSYMBOL_handler_rkey_mode = 1732,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1733,                  /* revoke  */
  YYSYMBOL_1734_55 = 1734,                 /* $@55  */
  YYSYMBOL_grant = 1735,                   /* grant  */
  YYSYMBOL_1736_56 = 1736,                 /* $@56  */
  YYSYMBOL_opt_acl_type = 1737,            /* opt_acl_type  */
  YYSYMBOL_opt_privileges = 1738,          /* opt_privileges  */
  YYSYMBOL_role_or_privilege_list = 1739,  /* role_or_privilege_list  */
  YYSYMBOL_role_or_privilege = 1740,       /* role_or_privilege  */
  YYSYMBOL_opt_with_admin_option = 1741,   /* opt_with_admin_option  */
  YYSYMBOL_opt_and = 1742,                 /* opt_and  */
  YYSYMBOL_require_list = 1743,            /* require_list  */
  YYSYMBOL_require_list_element = 1744,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1745,             /* grant_ident  */
  YYSYMBOL_user_list = 1746,               /* user_list  */
  YYSYMBOL_role_list = 1747,               /* role_list  */
  YYSYMBOL_opt_retain_current_password = 1748, /* opt_retain_current_password  */
  YYSYMBOL_opt_discard_old_password = 1749, /* opt_discard_old_password  */
  YYSYMBOL_opt_user_registration = 1750,   /* opt_user_registration  */
  YYSYMBOL_create_user = 1751,             /* create_user  */
  YYSYMBOL_opt_create_user_with_mfa = 1752, /* opt_create_user_with_mfa  */
  YYSYMBOL_identification = 1753,          /* identification  */
  YYSYMBOL_identified_by_password = 1754,  /* identified_by_password  */
  YYSYMBOL_identified_by_random_password = 1755, /* identified_by_random_password  */
  YYSYMBOL_identified_with_plugin = 1756,  /* identified_with_plugin  */
  YYSYMBOL_identified_with_plugin_as_auth = 1757, /* identified_with_plugin_as_auth  */
  YYSYMBOL_identified_with_plugin_by_password = 1758, /* identified_with_plugin_by_password  */
  YYSYMBOL_identified_with_plugin_by_random_password = 1759, /* identified_with_plugin_by_random_password  */
  YYSYMBOL_opt_initial_auth = 1760,        /* opt_initial_auth  */
  YYSYMBOL_alter_user = 1761,              /* alter_user  */
  YYSYMBOL_factor = 1762,                  /* factor  */
  YYSYMBOL_create_user_list = 1763,        /* create_user_list  */
  YYSYMBOL_alter_user_list = 1764,         /* alter_user_list  */
  YYSYMBOL_opt_column_list = 1765,         /* opt_column_list  */
  YYSYMBOL_column_list = 1766,             /* column_list  */
  YYSYMBOL_require_clause = 1767,          /* require_clause  */
  YYSYMBOL_grant_options = 1768,           /* grant_options  */
  YYSYMBOL_opt_grant_option = 1769,        /* opt_grant_option  */
  YYSYMBOL_opt_with_roles = 1770,          /* opt_with_roles  */
  YYSYMBOL_opt_grant_as = 1771,            /* opt_grant_as  */
  YYSYMBOL_begin_stmt = 1772,              /* begin_stmt  */
  YYSYMBOL_1773_57 = 1773,                 /* $@57  */
  YYSYMBOL_opt_work = 1774,                /* opt_work  */
  YYSYMBOL_opt_chain = 1775,               /* opt_chain  */
  YYSYMBOL_opt_release = 1776,             /* opt_release  */
  YYSYMBOL_opt_savepoint = 1777,           /* opt_savepoint  */
  YYSYMBOL_commit = 1778,                  /* commit  */
  YYSYMBOL_rollback = 1779,                /* rollback  */
  YYSYMBOL_savepoint = 1780,               /* savepoint  */
  YYSYMBOL_release = 1781,                 /* release  */
  YYSYMBOL_union_option = 1782,            /* union_option  */
  YYSYMBOL_row_subquery = 1783,            /* row_subquery  */
  YYSYMBOL_table_subquery = 1784,          /* table_subquery  */
  YYSYMBOL_subquery = 1785,                /* subquery  */
  YYSYMBOL_query_spec_option = 1786,       /* query_spec_option  */
  YYSYMBOL_init_lex_create_info = 1787,    /* init_lex_create_info  */
  YYSYMBOL_view_or_trigger_or_sp_or_event = 1788, /* view_or_trigger_or_sp_or_event  */
  YYSYMBOL_definer_tail = 1789,            /* definer_tail  */
  YYSYMBOL_no_definer_tail = 1790,         /* no_definer_tail  */
  YYSYMBOL_definer_opt = 1791,             /* definer_opt  */
  YYSYMBOL_no_definer = 1792,              /* no_definer  */
  YYSYMBOL_definer = 1793,                 /* definer  */
  YYSYMBOL_view_replace_or_algorithm = 1794, /* view_replace_or_algorithm  */
  YYSYMBOL_view_replace = 1795,            /* view_replace  */
  YYSYMBOL_view_algorithm = 1796,          /* view_algorithm  */
  YYSYMBOL_view_suid = 1797,               /* view_suid  */
  YYSYMBOL_view_tail = 1798,               /* view_tail  */
  YYSYMBOL_1799_58 = 1799,                 /* $@58  */
  YYSYMBOL_view_query_block = 1800,        /* view_query_block  */
  YYSYMBOL_view_check_option = 1801,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 1802,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 1803, /* trigger_follows_precedes_clause  */
  YYSYMBOL_trigger_tail = 1804,            /* trigger_tail  */
  YYSYMBOL_1805_59 = 1805,                 /* $@59  */
  YYSYMBOL_udf_tail = 1806,                /* udf_tail  */
  YYSYMBOL_sf_tail = 1807,                 /* sf_tail  */
  YYSYMBOL_1808_60 = 1808,                 /* $@60  */
  YYSYMBOL_1809_61 = 1809,                 /* $@61  */
  YYSYMBOL_1810_62 = 1810,                 /* $@62  */
  YYSYMBOL_1811_63 = 1811,                 /* $@63  */
  YYSYMBOL_routine_string = 1812,          /* routine_string  */
  YYSYMBOL_stored_routine_body = 1813,     /* stored_routine_body  */
  YYSYMBOL_sp_tail = 1814,                 /* sp_tail  */
  YYSYMBOL_1815_64 = 1815,                 /* $@64  */
  YYSYMBOL_1816_65 = 1816,                 /* $@65  */
  YYSYMBOL_1817_66 = 1817,                 /* $@66  */
  YYSYMBOL_1818_67 = 1818,                 /* $@67  */
  YYSYMBOL_xa = 1819,                      /* xa  */
  YYSYMBOL_opt_convert_xid = 1820,         /* opt_convert_xid  */
  YYSYMBOL_xid = 1821,                     /* xid  */
  YYSYMBOL_begin_or_start = 1822,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 1823,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 1824,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 1825,             /* opt_suspend  */
  YYSYMBOL_install_option_type = 1826,     /* install_option_type  */
  YYSYMBOL_install_set_rvalue = 1827,      /* install_set_rvalue  */
  YYSYMBOL_install_set_value = 1828,       /* install_set_value  */
  YYSYMBOL_install_set_value_list = 1829,  /* install_set_value_list  */
  YYSYMBOL_opt_install_set_value_list = 1830, /* opt_install_set_value_list  */
  YYSYMBOL_install_stmt = 1831,            /* install_stmt  */
  YYSYMBOL_uninstall = 1832,               /* uninstall  */
  YYSYMBOL_TEXT_STRING_sys_list = 1833,    /* TEXT_STRING_sys_list  */
  YYSYMBOL_import_stmt = 1834,             /* import_stmt  */
  YYSYMBOL_clone_stmt = 1835,              /* clone_stmt  */
  YYSYMBOL_opt_datadir_ssl = 1836,         /* opt_datadir_ssl  */
  YYSYMBOL_opt_ssl = 1837,                 /* opt_ssl  */
  YYSYMBOL_resource_group_types = 1838,    /* resource_group_types  */
  YYSYMBOL_opt_resource_group_vcpu_list = 1839, /* opt_resource_group_vcpu_list  */
  YYSYMBOL_vcpu_range_spec_list = 1840,    /* vcpu_range_spec_list  */
  YYSYMBOL_vcpu_num_or_range = 1841,       /* vcpu_num_or_range  */
  YYSYMBOL_signed_num = 1842,              /* signed_num  */
  YYSYMBOL_opt_resource_group_priority = 1843, /* opt_resource_group_priority  */
  YYSYMBOL_opt_resource_group_enable_disable = 1844, /* opt_resource_group_enable_disable  */
  YYSYMBOL_opt_force = 1845,               /* opt_force  */
  YYSYMBOL_json_attribute = 1846           /* json_attribute  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;




#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

#if defined __GNUC__ && ! defined __ICC && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                            \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL \
             && defined MY_SQL_PARSER_STYPE_IS_TRIVIAL && MY_SQL_PARSER_STYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE) \
             + YYSIZEOF (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1119
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   94866

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  834
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1013
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3196
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5588

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1221


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   831,     2,     2,     2,   819,   814,     2,
     823,   824,   817,   816,   828,   815,   829,   818,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   830,   826,
       2,     2,     2,     2,   827,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   820,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   832,   813,   833,   821,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   799,   800,   801,   802,
     803,   804,   805,   806,   807,   808,   809,   810,   811,   812,
     822,   825
};

#if MY_SQL_PARSER_DEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2306,  2306,  2307,  2312,  2322,  2340,  2344,  2352,  2365,
    2364,  2389,  2397,  2398,  2402,  2403,  2408,  2409,  2410,  2411,
    2412,  2413,  2414,  2415,  2416,  2417,  2418,  2419,  2420,  2421,
    2422,  2423,  2424,  2425,  2426,  2427,  2428,  2429,  2430,  2431,
    2432,  2433,  2434,  2435,  2436,  2437,  2438,  2439,  2440,  2441,
    2442,  2443,  2444,  2445,  2446,  2447,  2448,  2449,  2450,  2451,
    2452,  2453,  2454,  2455,  2456,  2457,  2458,  2459,  2460,  2461,
    2462,  2463,  2464,  2465,  2466,  2467,  2468,  2469,  2470,  2471,
    2472,  2473,  2474,  2475,  2476,  2477,  2478,  2479,  2480,  2481,
    2482,  2483,  2484,  2485,  2486,  2487,  2488,  2489,  2490,  2491,
    2492,  2493,  2494,  2495,  2496,  2497,  2498,  2499,  2500,  2501,
    2502,  2503,  2504,  2505,  2506,  2507,  2508,  2509,  2510,  2511,
    2512,  2513,  2514,  2515,  2516,  2517,  2518,  2519,  2520,  2521,
    2522,  2523,  2524,  2525,  2526,  2527,  2528,  2529,  2530,  2531,
    2532,  2533,  2534,  2535,  2536,  2537,  2538,  2539,  2540,  2541,
    2542,  2543,  2547,  2557,  2558,  2562,  2582,  2589,  2600,  2599,
    2611,  2612,  2616,  2617,  2621,  2634,  2633,  2653,  2652,  2669,
    2668,  2686,  2687,  2690,  2697,  2704,  2711,  2718,  2725,  2733,
    2742,  2748,  2755,  2762,  2770,  2779,  2785,  2791,  2799,  2807,
    2813,  2820,  2827,  2835,  2847,  2853,  2860,  2867,  2875,  2885,
    2886,  2890,  2894,  2898,  2902,  2906,  2916,  2920,  2924,  2929,
    2940,  2945,  2949,  2953,  2957,  2958,  2962,  2966,  2970,  2975,
    2979,  2983,  2987,  2993,  3027,  3031,  3035,  3039,  3045,  3046,
    3062,  3063,  3079,  3080,  3097,  3101,  3102,  3103,  3107,  3113,
    3119,  3128,  3132,  3136,  3140,  3147,  3151,  3155,  3169,  3174,
    3182,  3186,  3202,  3206,  3216,  3217,  3222,  3232,  3242,  3247,
    3255,  3262,  3275,  3274,  3289,  3291,  3305,  3325,  3344,  3364,
    3381,  3386,  3394,  3400,  3412,  3424,  3438,  3453,  3458,  3465,
    3474,  3482,  3493,  3494,  3498,  3502,  3506,  3510,  3514,  3519,
    3523,  3531,  3530,  3565,  3564,  3573,  3582,  3583,  3589,  3597,
    3603,  3612,  3619,  3628,  3629,  3638,  3639,  3643,  3649,  3658,
    3659,  3667,  3667,  3728,  3729,  3730,  3731,  3732,  3733,  3734,
    3735,  3736,  3737,  3738,  3739,  3740,  3744,  3758,  3777,  3778,
    3782,  3783,  3788,  3790,  3792,  3796,  3798,  3800,  3802,  3804,
    3806,  3812,  3813,  3814,  3818,  3822,  3829,  3836,  3837,  3845,
    3846,  3850,  3851,  3855,  3907,  3908,  3912,  3913,  3917,  3967,
    3968,  3969,  3970,  3974,  3975,  3979,  3980,  3984,  3988,  4012,
    4111,  4129,  4128,  4207,  4203,  4280,  4281,  4286,  4288,  4293,
    4316,  4327,  4331,  4353,  4354,  4358,  4362,  4375,  4381,  4387,
    4396,  4409,  4435,  4440,  4441,  4446,  4447,  4452,  4458,  4471,
    4473,  4475,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,
    4497,  4499,  4501,  4503,  4508,  4522,  4539,  4540,  4542,  4547,
    4553,  4562,  4568,  4577,  4585,  4613,  4621,  4623,  4632,  4637,
    4643,  4652,  4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,
    4676,  4678,  4680,  4682,  4684,  4689,  4709,  4732,  4737,  4745,
    4746,  4747,  4748,  4749,  4750,  4751,  4752,  4753,  4754,  4755,
    4756,  4757,  4762,  4761,  4772,  4772,  4832,  4831,  4888,  4888,
    4910,  4967,  5014,  5038,  5037,  5062,  5085,  5086,  5087,  5091,
    5109,  5130,  5138,  5176,  5130,  5205,  5206,  5207,  5211,  5212,
    5217,  5227,  5216,  5279,  5278,  5292,  5293,  5297,  5298,  5303,
    5311,  5302,  5361,  5369,  5360,  5414,  5428,  5433,  5432,  5470,
    5471,  5476,  5475,  5509,  5509,  5528,  5527,  5575,  5590,  5598,
    5589,  5656,  5664,  5653,  5706,  5708,  5713,  5715,  5717,  5732,
    5733,  5740,  5741,  5748,  5749,  5753,  5759,  5768,  5769,  5770,
    5771,  5772,  5773,  5774,  5775,  5776,  5777,  5778,  5782,  5783,
    5787,  5793,  5802,  5803,  5804,  5805,  5806,  5807,  5808,  5812,
    5813,  5817,  5823,  5832,  5836,  5837,  5841,  5847,  5856,  5857,
    5858,  5859,  5860,  5861,  5862,  5866,  5867,  5871,  5877,  5886,
    5887,  5888,  5892,  5896,  5897,  5901,  5905,  5912,  5919,  5923,
    5930,  5937,  5944,  5951,  5958,  5965,  5972,  5979,  5983,  5990,
    5997,  6004,  6005,  6080,  6086,  6090,  6095,  6099,  6106,  6114,
    6124,  6125,  6139,  6147,  6151,  6155,  6159,  6163,  6167,  6174,
    6175,  6179,  6180,  6197,  6198,  6210,  6211,  6216,  6225,  6226,
    6231,  6237,  6246,  6247,  6259,  6260,  6264,  6270,  6279,  6287,
    6291,  6296,  6304,  6305,  6309,  6313,  6320,  6327,  6337,  6336,
    6354,  6360,  6369,  6370,  6375,  6376,  6380,  6386,  6395,  6402,
    6403,  6407,  6413,  6422,  6424,  6426,  6428,  6430,  6432,  6434,
    6436,  6445,  6446,  6450,  6451,  6472,  6473,  6477,  6478,  6482,
    6487,  6492,  6507,  6508,  6512,  6518,  6527,  6533,  6542,  6543,
    6547,  6551,  6555,  6559,  6563,  6567,  6580,  6584,  6588,  6592,
    6596,  6600,  6604,  6608,  6612,  6630,  6634,  6638,  6642,  6646,
    6650,  6654,  6658,  6662,  6666,  6670,  6674,  6678,  6682,  6686,
    6690,  6704,  6708,  6712,  6716,  6723,  6737,  6741,  6745,  6749,
    6753,  6754,  6755,  6756,  6757,  6758,  6762,  6763,  6764,  6768,
    6769,  6770,  6771,  6775,  6781,  6790,  6791,  6795,  6802,  6803,
    6811,  6817,  6823,  6828,  6838,  6846,  6854,  6858,  6859,  6863,
    6864,  6868,  6869,  6873,  6877,  6881,  6903,  6904,  6908,  6909,
    6910,  6914,  6918,  6922,  6926,  6930,  6934,  6938,  6942,  6947,
    6952,  6961,  6970,  6974,  6978,  6983,  6992,  6996,  7000,  7023,
    7027,  7031,  7035,  7039,  7043,  7047,  7048,  7052,  7056,  7060,
    7065,  7070,  7075,  7080,  7085,  7089,  7093,  7098,  7102,  7109,
    7111,  7113,  7115,  7117,  7119,  7121,  7123,  7128,  7129,  7133,
    7134,  7138,  7139,  7140,  7141,  7142,  7146,  7147,  7148,  7149,
    7150,  7154,  7159,  7164,  7165,  7169,  7170,  7171,  7172,  7176,
    7181,  7189,  7194,  7199,  7203,  7212,  7213,  7217,  7218,  7219,
    7227,  7228,  7232,  7236,  7240,  7241,  7242,  7251,  7252,  7253,
    7254,  7257,  7258,  7262,  7267,  7271,  7272,  7276,  7295,  7314,
    7318,  7322,  7326,  7330,  7334,  7338,  7342,  7346,  7350,  7354,
    7358,  7362,  7366,  7370,  7374,  7383,  7388,  7401,  7405,  7409,
    7416,  7417,  7418,  7422,  7423,  7424,  7428,  7434,  7438,  7442,
    7443,  7447,  7456,  7460,  7461,  7465,  7474,  7478,  7479,  7483,
    7489,  7493,  7494,  7498,  7499,  7504,  7508,  7513,  7521,  7530,
    7537,  7547,  7552,  7557,  7562,  7567,  7574,  7580,  7591,  7592,
    7600,  7599,  7612,  7613,  7617,  7632,  7633,  7637,  7644,  7654,
    7655,  7656,  7657,  7661,  7666,  7671,  7676,  7682,  7691,  7692,
    7693,  7694,  7695,  7699,  7700,  7704,  7705,  7709,  7710,  7714,
    7715,  7716,  7720,  7721,  7725,  7726,  7730,  7736,  7745,  7746,
    7760,  7761,  7765,  7771,  7780,  7784,  7785,  7789,  7795,  7804,
    7805,  7810,  7811,  7815,  7819,  7823,  7847,  7848,  7849,  7853,
    7854,  7858,  7859,  7863,  7864,  7868,  7869,  7870,  7874,  7880,
    7890,  7896,  7911,  7917,  7927,  7928,  7937,  7938,  7942,  7948,
    7960,  7971,  7986,  7985,  8006,  8005,  8028,  8027,  8050,  8049,
    8070,  8064,  8089,  8088,  8132,  8154,  8173,  8193,  8201,  8223,
    8247,  8258,  8261,  8273,  8285,  8290,  8302,  8314,  8325,  8332,
    8340,  8341,  8345,  8355,  8365,  8371,  8378,  8387,  8388,  8392,
    8393,  8397,  8403,  8409,  8417,  8432,  8440,  8448,  8455,  8462,
    8469,  8476,  8482,  8488,  8494,  8506,  8518,  8527,  8528,  8532,
    8533,  8537,  8543,  8549,  8555,  8564,  8577,  8578,  8579,  8580,
    8584,  8585,  8597,  8598,  8602,  8603,  8607,  8608,  8623,  8628,
    8636,  8640,  8647,  8652,  8657,  8658,  8667,  8671,  8682,  8686,
    8690,  8694,  8698,  8703,  8708,  8713,  8718,  8725,  8729,  8733,
    8737,  8742,  8747,  8752,  8757,  8761,  8768,  8769,  8773,  8777,
    8784,  8785,  8793,  8800,  8805,  8809,  8814,  8825,  8826,  8834,
    8838,  8842,  8846,  8850,  8854,  8859,  8863,  8867,  8871,  8875,
    8879,  8883,  8887,  8891,  8895,  8900,  8904,  8908,  8912,  8916,
    8920,  8924,  8928,  8932,  8939,  8943,  8950,  8955,  8960,  8968,
    8969,  8974,  8979,  8985,  8994,  8998,  9002,  9019,  9023,  9027,
    9044,  9045,  9049,  9050,  9054,  9055,  9056,  9060,  9061,  9062,
    9066,  9067,  9068,  9069,  9073,  9074,  9082,  9091,  9092,  9096,
    9097,  9101,  9102,  9103,  9107,  9119,  9132,  9138,  9151,  9164,
    9150,  9188,  9204,  9208,  9215,  9219,  9226,  9230,  9234,  9241,
    9242,  9249,  9250,  9257,  9258,  9265,  9266,  9273,  9277,  9284,
    9288,  9295,  9299,  9306,  9311,  9336,  9337,  9338,  9343,  9348,
    9355,  9369,  9370,  9371,  9375,  9384,  9385,  9389,  9390,  9398,
    9399,  9400,  9404,  9421,  9422,  9423,  9427,  9431,  9448,  9454,
    9463,  9469,  9478,  9488,  9496,  9504,  9505,  9509,  9510,  9518,
    9520,  9522,  9524,  9526,  9528,  9533,  9540,  9541,  9542,  9547,
    9546,  9552,  9559,  9564,  9572,  9573,  9577,  9590,  9594,  9603,
    9609,  9618,  9625,  9626,  9630,  9635,  9642,  9648,  9657,  9664,
    9671,  9672,  9680,  9681,  9685,  9689,  9694,  9730,  9735,  9739,
    9743,  9782,  9788,  9798,  9802,  9806,  9811,  9816,  9824,  9828,
    9835,  9840,  9844,  9857,  9882,  9909,  9910,  9914,  9918,  9919,
    9923,  9929,  9938,  9945,  9956,  9960,  9964,  9969,  9973,  9977,
    9986,  9992, 10001, 10005, 10009, 10016, 10017, 10021, 10025, 10026,
   10030, 10031, 10035, 10042, 10048, 10058, 10059, 10067, 10068, 10069,
   10070, 10071, 10075, 10076, 10081, 10088, 10093, 10100, 10104, 10108,
   10112, 10116, 10120, 10124, 10128, 10132, 10136, 10140, 10144, 10157,
   10161, 10165, 10170, 10174, 10181, 10185, 10194, 10198, 10202, 10206,
   10214, 10218, 10222, 10227, 10232, 10240, 10248, 10252, 10253, 10257,
   10261, 10265, 10269, 10273, 10277, 10281, 10285, 10289, 10293, 10297,
   10301, 10305, 10309, 10313, 10317, 10318, 10322, 10323, 10330, 10331,
   10335, 10336, 10340, 10341, 10342, 10343, 10344, 10345, 10346, 10350,
   10351, 10355, 10356, 10357, 10358, 10359, 10360, 10365, 10366, 10367,
   10368, 10369, 10370, 10371, 10375, 10380, 10384, 10388, 10392, 10396,
   10401, 10405, 10409, 10413, 10417, 10421, 10428, 10434, 10438, 10448,
   10452, 10458, 10462, 10466, 10470, 10475, 10482, 10493, 10494, 10504,
   10508, 10512, 10516, 10520, 10524, 10528, 10532, 10536, 10540, 10547,
   10551, 10555, 10559, 10563, 10567, 10571, 10575, 10579, 10584, 10589,
   10594, 10598, 10602, 10606, 10610, 10615, 10619, 10638, 10642, 10646,
   10650, 10654, 10659, 10664, 10668, 10672, 10676, 10680, 10685, 10689,
   10693, 10697, 10701, 10705, 10709, 10713, 10718, 10722, 10726, 10730,
   10734, 10745, 10749, 10760, 10764, 10768, 10772, 10776, 10780, 10784,
   10788, 10792, 10796, 10800, 10804, 10808, 10812, 10816, 10820, 10824,
   10828, 10832, 10836, 10840, 10844, 10848, 10852, 10858, 10864, 10870,
   10876, 10882, 10886, 10904, 10908, 10915, 10917, 10930, 10931, 10935,
   10936, 10940, 10941, 10945, 10951, 10963, 10970, 10971, 10975, 10979,
   10983, 10987, 10991, 11001, 11011, 11015, 11019, 11023, 11027, 11031,
   11035, 11044, 11048, 11052, 11056, 11060, 11064, 11068, 11072, 11076,
   11080, 11090, 11091, 11095, 11096, 11097, 11101, 11105, 11112, 11116,
   11120, 11124, 11128, 11132, 11136, 11147, 11158, 11162, 11166, 11178,
   11183, 11195, 11196, 11200, 11201, 11202, 11206, 11210, 11217, 11221,
   11225, 11233, 11237, 11241, 11248, 11252, 11259, 11266, 11270, 11277,
   11284, 11292, 11312, 11316, 11323, 11327, 11335, 11339, 11347, 11351,
   11360, 11365, 11372, 11376, 11380, 11384, 11388, 11395, 11402, 11406,
   11410, 11414, 11418, 11425, 11429, 11433, 11437, 11441, 11447, 11448,
   11449, 11453, 11460, 11470, 11474, 11482, 11483, 11487, 11493, 11497,
   11498, 11502, 11510, 11520, 11527, 11534, 11553, 11561, 11568, 11575,
   11582, 11589, 11596, 11603, 11610, 11617, 11624, 11631, 11639, 11646,
   11653, 11660, 11667, 11674, 11681, 11688, 11698, 11699, 11703, 11709,
   11721, 11722, 11726, 11732, 11742, 11743, 11747, 11748, 11752, 11760,
   11769, 11770, 11771, 11784, 11785, 11866, 11870, 11875, 11879, 11883,
   11893, 11900, 11901, 11902, 11906, 11907, 11908, 11909, 11912, 11913,
   11917, 11918, 11922, 11923, 11931, 11932, 11936, 11965, 11966, 11967,
   11968, 11970, 11972, 11976, 11977, 11986, 11987, 11991, 11998, 11999,
   12003, 12016, 12027, 12043, 12050, 12056, 12065, 12069, 12079, 12086,
   12090, 12100, 12105, 12110, 12115, 12124, 12125, 12136, 12139, 12142,
   12146, 12150, 12157, 12161, 12162, 12163, 12167, 12168, 12172, 12178,
   12187, 12188, 12196, 12197, 12201, 12205, 12212, 12216, 12222, 12231,
   12237, 12245, 12249, 12258, 12270, 12271, 12272, 12273, 12274, 12275,
   12276, 12277, 12278, 12279, 12280, 12281, 12285, 12286, 12287, 12288,
   12289, 12290, 12291, 12292, 12293, 12297, 12298, 12299, 12300, 12304,
   12305, 12309, 12310, 12314, 12315, 12319, 12320, 12324, 12328, 12329,
   12336, 12337, 12344, 12348, 12355, 12361, 12370, 12386, 12395, 12402,
   12408, 12417, 12421, 12428, 12434, 12444, 12459, 12460, 12464, 12468,
   12475, 12481, 12492, 12493, 12508, 12514, 12524, 12531, 12532, 12536,
   12543, 12549, 12559, 12560, 12564, 12565, 12569, 12570, 12574, 12581,
   12587, 12593, 12602, 12606, 12610, 12614, 12618, 12625, 12626, 12630,
   12631, 12632, 12633, 12634, 12635, 12639, 12640, 12641, 12642, 12643,
   12647, 12648, 12649, 12650, 12651, 12655, 12656, 12657, 12658, 12659,
   12663, 12668, 12669, 12673, 12679, 12688, 12692, 12699, 12706, 12712,
   12716, 12724, 12737, 12757, 12766, 12777, 12801, 12837, 12844, 12860,
   12871, 12887, 12897, 12908, 12928, 12950, 12973, 12981, 12988, 12995,
   13001, 13010, 13016, 13025, 13026, 13030, 13031, 13035, 13036, 13040,
   13041, 13045, 13051, 13060, 13061, 13068, 13088, 13108, 13126, 13139,
   13156, 13172, 13173, 13174, 13183, 13187, 13188, 13200, 13201, 13205,
   13211, 13216, 13224, 13229, 13234, 13242, 13249, 13258, 13265, 13266,
   13273, 13274, 13278, 13284, 13294, 13300, 13309, 13310, 13314, 13315,
   13319, 13323, 13327, 13333, 13337, 13344, 13353, 13354, 13361, 13366,
   13379, 13384, 13393, 13410, 13411, 13415, 13422, 13434, 13442, 13443,
   13449, 13462, 13472, 13486, 13487, 13491, 13492, 13496, 13497, 13498,
   13502, 13509, 13510, 13514, 13515, 13519, 13520, 13524, 13525, 13526,
   13527, 13528, 13529, 13530, 13531, 13532, 13536, 13537, 13549, 13555,
   13562, 13569, 13576, 13583, 13590, 13597, 13604, 13611, 13618, 13635,
   13642, 13649, 13656, 13664, 13681, 13688, 13695, 13702, 13709, 13716,
   13727, 13734, 13741, 13748, 13755, 13762, 13769, 13776, 13780, 13784,
   13791, 13798, 13805, 13812, 13819, 13826, 13833, 13840, 13847, 13854,
   13861, 13868, 13875, 13882, 13889, 13900, 13901, 13905, 13906, 13910,
   13911, 13915, 13916, 13920, 13921, 13925, 13926, 13927, 13928, 13932,
   13933, 13937, 13938, 13942, 13943, 13947, 13948, 13949, 13954, 13961,
   13974, 13979, 13984, 13989, 13994, 13999, 14007, 14008, 14012, 14017,
   14038, 14044, 14069, 14073, 14080, 14084, 14091, 14092, 14097, 14105,
   14104, 14117, 14116, 14130, 14134, 14135, 14148, 14147, 14170, 14171,
   14176, 14178, 14180, 14182, 14184, 14186, 14192, 14194, 14196, 14198,
   14200, 14205, 14206, 14211, 14210, 14217, 14227, 14228, 14232, 14238,
   14247, 14248, 14257, 14270, 14269, 14277, 14276, 14296, 14297, 14301,
   14302, 14317, 14316, 14327, 14331, 14335, 14349, 14361, 14362, 14363,
   14369, 14384, 14437, 14438, 14442, 14443, 14447, 14448, 14452, 14453,
   14454, 14458, 14459, 14460, 14464, 14465, 14482, 14483, 14487, 14488,
   14492, 14493, 14497, 14498, 14502, 14507, 14511, 14516, 14522, 14527,
   14535, 14536, 14540, 14545, 14549, 14554, 14562, 14563, 14567, 14568,
   14572, 14573, 14577, 14578, 14579, 14583, 14590, 14599, 14600, 14607,
   14608, 14612, 14620, 14640, 14659, 14660, 14664, 14665, 14670, 14671,
   14675, 14676, 14682, 14687, 14693, 14698, 14706, 14713, 14720, 14730,
   14749, 14750, 14751, 14761, 14762, 14766, 14781, 14782, 14783, 14784,
   14788, 14792, 14796, 14800, 14804, 14811, 14812, 14816, 14817, 14821,
   14832, 14833, 14834, 14839, 14843, 14847, 14854, 14855, 14864, 14868,
   14872, 14882, 14889, 14896, 14900, 14904, 14908, 14912, 14916, 14925,
   14931, 14942, 14948, 14959, 14960, 14990, 15003, 15016, 15032, 15048,
   15065, 15069, 15070, 15077, 15093, 15094, 15105, 15106, 15116, 15117,
   15128, 15129, 15139, 15140, 15141, 15145, 15146, 15147, 15151, 15156,
   15164, 15168, 15181, 15186, 15194, 15218, 15219, 15220, 15221, 15222,
   15229, 15230, 15231, 15238, 15239, 15240, 15241, 15242, 15243, 15244,
   15245, 15246, 15247, 15248, 15249, 15250, 15251, 15252, 15253, 15254,
   15255, 15256, 15257, 15258, 15259, 15260, 15261, 15262, 15263, 15264,
   15265, 15266, 15267, 15268, 15269, 15270, 15271, 15272, 15287, 15288,
   15289, 15296, 15297, 15298, 15299, 15300, 15301, 15302, 15303, 15304,
   15312, 15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321,
   15322, 15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331,
   15332, 15333, 15334, 15335, 15336, 15337, 15338, 15339, 15340, 15341,
   15342, 15343, 15344, 15345, 15346, 15347, 15348, 15349, 15350, 15351,
   15352, 15353, 15354, 15355, 15356, 15357, 15358, 15359, 15360, 15361,
   15362, 15363, 15364, 15365, 15366, 15367, 15368, 15369, 15370, 15371,
   15372, 15373, 15374, 15375, 15376, 15377, 15378, 15379, 15380, 15381,
   15382, 15383, 15384, 15385, 15386, 15387, 15388, 15389, 15390, 15391,
   15392, 15393, 15394, 15395, 15396, 15397, 15398, 15399, 15400, 15401,
   15402, 15403, 15404, 15405, 15406, 15407, 15408, 15409, 15410, 15411,
   15412, 15413, 15414, 15415, 15416, 15417, 15418, 15419, 15420, 15421,
   15422, 15423, 15424, 15431, 15432, 15433, 15434, 15435, 15436, 15437,
   15438, 15439, 15440, 15441, 15442, 15443, 15444, 15445, 15446, 15447,
   15448, 15449, 15450, 15451, 15452, 15453, 15454, 15455, 15456, 15457,
   15458, 15459, 15460, 15461, 15462, 15463, 15464, 15465, 15466, 15467,
   15468, 15469, 15470, 15471, 15472, 15473, 15474, 15475, 15476, 15477,
   15478, 15479, 15480, 15481, 15482, 15483, 15484, 15485, 15486, 15487,
   15488, 15489, 15490, 15491, 15492, 15493, 15494, 15495, 15496, 15497,
   15498, 15499, 15500, 15501, 15502, 15503, 15504, 15505, 15506, 15507,
   15508, 15509, 15510, 15511, 15512, 15513, 15514, 15515, 15516, 15517,
   15518, 15519, 15520, 15521, 15522, 15523, 15524, 15525, 15526, 15527,
   15528, 15529, 15530, 15531, 15532, 15533, 15534, 15535, 15536, 15537,
   15538, 15539, 15540, 15541, 15542, 15543, 15544, 15545, 15546, 15547,
   15548, 15549, 15550, 15551, 15552, 15553, 15554, 15555, 15556, 15557,
   15558, 15559, 15560, 15561, 15562, 15563, 15564, 15565, 15566, 15567,
   15568, 15569, 15570, 15571, 15572, 15573, 15574, 15575, 15576, 15577,
   15578, 15579, 15580, 15581, 15582, 15583, 15584, 15585, 15586, 15587,
   15588, 15589, 15590, 15591, 15592, 15593, 15594, 15595, 15596, 15597,
   15598, 15599, 15600, 15601, 15602, 15603, 15604, 15605, 15606, 15607,
   15608, 15609, 15610, 15611, 15612, 15613, 15614, 15615, 15616, 15617,
   15618, 15619, 15620, 15621, 15622, 15623, 15624, 15625, 15626, 15627,
   15628, 15629, 15630, 15631, 15632, 15633, 15634, 15635, 15636, 15637,
   15638, 15639, 15640, 15641, 15642, 15643, 15644, 15645, 15646, 15647,
   15648, 15649, 15650, 15651, 15652, 15653, 15654, 15655, 15656, 15657,
   15658, 15659, 15660, 15661, 15662, 15663, 15664, 15665, 15666, 15667,
   15668, 15669, 15670, 15671, 15672, 15673, 15674, 15675, 15676, 15677,
   15678, 15679, 15680, 15681, 15682, 15683, 15684, 15685, 15686, 15687,
   15688, 15689, 15690, 15691, 15692, 15693, 15694, 15695, 15696, 15697,
   15698, 15699, 15700, 15701, 15702, 15703, 15704, 15705, 15706, 15707,
   15708, 15709, 15710, 15711, 15712, 15713, 15714, 15715, 15716, 15717,
   15718, 15719, 15720, 15721, 15722, 15723, 15724, 15725, 15726, 15738,
   15739, 15740, 15752, 15753, 15754, 15755, 15764, 15765, 15766, 15767,
   15768, 15779, 15788, 15792, 15796, 15800, 15807, 15815, 15823, 15835,
   15839, 15844, 15849, 15854, 15859, 15864, 15872, 15873, 15877, 15881,
   15888, 15894, 15903, 15908, 15915, 15925, 15926, 15931, 15935, 15943,
   15947, 15951, 15952, 15953, 15954, 15955, 15959, 15960, 15961, 15962,
   15966, 15967, 15968, 15969, 15973, 15974, 15975, 15976, 15977, 15978,
   15983, 15992, 15996, 16000, 16006, 16010, 16017, 16021, 16028, 16032,
   16045, 16052, 16056, 16068, 16072, 16079, 16086, 16087, 16091, 16098,
   16099, 16103, 16104, 16108, 16109, 16110, 16111, 16115, 16116, 16117,
   16121, 16125, 16129, 16133, 16143, 16142, 16155, 16165, 16166, 16170,
   16171, 16175, 16203, 16204, 16205, 16210, 16209, 16222, 16233, 16241,
   16248, 16255, 16271, 16275, 16279, 16282, 16285, 16300, 16315, 16325,
   16329, 16333, 16342, 16353, 16369, 16370, 16374, 16375, 16376, 16377,
   16381, 16382, 16383, 16384, 16385, 16391, 16398, 16417, 16416, 16438,
   16446, 16460, 16465, 16483, 16482, 16500, 16514, 16515, 16516, 16517,
   16521, 16522, 16526, 16532, 16541, 16548, 16550, 16552, 16554, 16556,
   16558, 16560, 16562, 16564, 16566, 16568, 16570, 16572, 16574, 16576,
   16578, 16580, 16585, 16587, 16601, 16603, 16605, 16607, 16609, 16611,
   16613, 16615, 16617, 16619, 16621, 16623, 16625, 16627, 16632, 16633,
   16637, 16638, 16642, 16643, 16647, 16657, 16667, 16680, 16694, 16706,
   16718, 16730, 16747, 16753, 16762, 16768, 16777, 16778, 16782, 16783,
   16787, 16797, 16806, 16820, 16827, 16841, 16850, 16851, 16856, 16865,
   16866, 16867, 16868, 16869, 16870, 16874, 16887, 16901, 16915, 16929,
   16944, 16959, 16965, 16971, 16980, 16991, 17002, 17009, 17016, 17027,
   17034, 17041, 17048, 17056, 17062, 17070, 17087, 17095, 17109, 17120,
   17143, 17157, 17162, 17170, 17175, 17183, 17184, 17188, 17194, 17203,
   17204, 17208, 17212, 17216, 17223, 17224, 17229, 17230, 17233, 17234,
   17238, 17243, 17245, 17249, 17250, 17258, 17257, 17267, 17268, 17272,
   17273, 17274, 17278, 17279, 17280, 17284, 17285, 17289, 17301, 17310,
   17320, 17329, 17343, 17344, 17345, 17349, 17353, 17357, 17364, 17365,
   17366, 17367, 17368, 17369, 17370, 17376, 17386, 17396, 17398, 17400,
   17405, 17406, 17407, 17408, 17409, 17413, 17414, 17415, 17416, 17417,
   17418, 17428, 17429, 17433, 17447, 17460, 17462, 17464, 17469, 17474,
   17476, 17478, 17483, 17484, 17486, 17492, 17491, 17531, 17582, 17583,
   17584, 17585, 17595, 17597, 17602, 17608, 17627, 17616, 17699, 17733,
   17773, 17799, 17805, 17849, 17769, 17911, 17912, 17915, 17927, 17943,
   17964, 17969, 17980, 17940, 17997, 18002, 18007, 18012, 18017, 18022,
   18030, 18031, 18034, 18043, 18053, 18071, 18072, 18076, 18077, 18078,
   18082, 18083, 18087, 18088, 18090, 18095, 18096, 18097, 18101, 18102,
   18109, 18116, 18124, 18133, 18137, 18141, 18148, 18155, 18161, 18170,
   18176, 18185, 18202, 18211, 18233, 18237, 18244, 18248, 18252, 18259,
   18260, 18264, 18271, 18275, 18282, 18292, 18299, 18312, 18313, 18317,
   18318, 18326, 18327, 18332, 18340, 18341, 18346
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if MY_SQL_PARSER_DEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "ABORT_SYM",
  "ACCESSIBLE_SYM", "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM",
  "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER",
  "ALWAYS_SYM", "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM",
  "AND_SYM", "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM",
  "AT_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE_SYM",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "OBSOLETE_TOKEN_550",
  "OBSOLETE_TOKEN_551", "OBSOLETE_TOKEN_552", "OBSOLETE_TOKEN_553",
  "OBSOLETE_TOKEN_554", "OBSOLETE_TOKEN_555", "OBSOLETE_TOKEN_556",
  "OBSOLETE_TOKEN_557", "OBSOLETE_TOKEN_558", "OBSOLETE_TOKEN_559",
  "OBSOLETE_TOKEN_561", "OBSOLETE_TOKEN_562", "OBSOLETE_TOKEN_563",
  "OBSOLETE_TOKEN_564", "OBSOLETE_TOKEN_565", "OBSOLETE_TOKEN_566",
  "OBSOLETE_TOKEN_567", "OBSOLETE_TOKEN_568", "OBSOLETE_TOKEN_569",
  "OBSOLETE_TOKEN_570", "MASTER_SYM", "OBSOLETE_TOKEN_572",
  "OBSOLETE_TOKEN_573", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "OBSOLETE_TOKEN_966", "OBSOLETE_TOKEN_967", "RESTART_SYM",
  "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM", "REFERENCE_SYM",
  "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM", "ARRAY_SYM", "MEMBER_SYM",
  "OPTIONAL_SYM", "SECONDARY_SYM", "SECONDARY_ENGINE_SYM",
  "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM", "RETAIN_SYM", "OLD_SYM",
  "ENFORCED_SYM", "OJ_SYM", "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "OBSOLETE_TOKEN_989", "OBSOLETE_TOKEN_990", "PRIVILEGE_CHECKS_USER_SYM",
  "OBSOLETE_TOKEN_992", "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "JSON_VALUE_SYM", "TLS_SYM",
  "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "INTERSECT_SYM", "BULK_SYM",
  "URL_SYM", "GENERATE_SYM", "DOLLAR_QUOTED_STRING_SYM", "PARSE_TREE_SYM",
  "LOG_SYM", "GTIDS_SYM", "PARALLEL_SYM", "S3_SYM", "QUALIFY_SYM",
  "AUTO_SYM", "MANUAL_SYM", "BERNOULLI_SYM", "TABLESAMPLE_SYM",
  "VECTOR_SYM", "JAVASCRIPT_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "PREFER_PARENTHESES", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_stmt", "$@4", "$@5", "filter_defs",
  "filter_def", "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "source_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_histogram_auto_update",
  "opt_histogram_num_buckets", "opt_histogram_update_param",
  "opt_histogram", "binlog_base64_event", "check_table_stmt",
  "opt_mi_check_types", "mi_check_types", "mi_check_type",
  "optimize_table_stmt", "opt_no_write_to_binlog", "rename", "$@45",
  "rename_list", "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "sampling_method",
  "sampling_percentage", "opt_tablesample_clause", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "opt_qualify_clause", "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_ignore_unknown_user",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "insert_columns", "insert_values",
  "query_expression_with_opt_locking_clauses", "value_or_values",
  "values_list", "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_binary_log_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "show_parse_tree_stmt", "engine_or_all",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format", "opt_explain_options", "opt_explain_into",
  "opt_explain_for_schema", "opt_describe_column", "flush", "$@46",
  "flush_options", "$@47", "opt_flush_lock", "$@48", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "persisted_variable_ident", "reset_option",
  "$@50", "$@51", "opt_replica_reset_options", "source_reset_options",
  "purge", "$@52", "purge_options", "purge_option", "kill", "kill_option",
  "use", "load_stmt", "data_or_xml", "opt_local", "opt_from_keyword",
  "load_data_lock", "load_source_type", "opt_source_count",
  "opt_source_order", "opt_duplicate", "duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "opt_load_algorithm", "opt_compression_algorithm",
  "opt_load_parallel", "opt_load_memory", "text_literal", "text_string",
  "param_marker", "signed_literal", "signed_literal_or_null",
  "null_as_literal", "literal", "literal_or_null", "NUM_literal",
  "int64_literal", "temporal_literal", "opt_interval", "insert_column",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@53", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@54",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@55", "grant",
  "$@56", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@57", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@58", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@59", "udf_tail",
  "sf_tail", "$@60", "$@61", "$@62", "$@63", "routine_string",
  "stored_routine_body", "sp_tail", "$@64", "$@65", "$@66", "$@67", "xa",
  "opt_convert_xid", "xid", "begin_or_start", "opt_join_or_resume",
  "opt_one_phase", "opt_suspend", "install_option_type",
  "install_set_rvalue", "install_set_value", "install_set_value_list",
  "opt_install_set_value_list", "install_stmt", "uninstall",
  "TEXT_STRING_sys_list", "import_stmt", "clone_stmt", "opt_datadir_ssl",
  "opt_ssl", "resource_group_types", "opt_resource_group_vcpu_list",
  "vcpu_range_spec_list", "vcpu_num_or_range", "signed_num",
  "opt_resource_group_priority", "opt_resource_group_enable_disable",
  "opt_force", "json_attribute", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_int16 yytoknum[] =
{
       0,   256,  1150,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1151,  1152,  1153,  1154,  1155,  1156,
    1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,  1166,
    1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,  1176,
    1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,
    1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,
    1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  1206,
    1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1215,  1216,
    1217,  1218,  1219,   124,    38,    45,    43,    42,    47,    37,
      94,   126,  1220,    40,    41,  1221,    59,    64,    44,    46,
      58,    33,   123,   125
};
#endif

#define YYPACT_NINF (-4795)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-2961)

#define yytable_value_is_error(Yyn) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6344,  3198,   900, -4795,    -9,   388, 76358,   116,  1932,  1932,
     546,  3391, -4795, -4795, -4795, 12401,  4346, -4795, 76358,   900,
     284, 51434, 76358, -4795,   568,  1978,  1065,   332,   358,  1046,
     900, 76358, -4795,   715,   -13,   900,  1072,   594, 67514,  1061,
     546, 76358,  2651, 32125,  4741, -4795, 67514,   143,   160, 76358,
    1055,  1308,  1463, 76358,  1203, 68318,  1719, 23993,   319,  1437,
     967,  1981, -4795, 18197,  2496,  1852, -4795,  1775, -4795, -4795,
    1560, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, 59474, -4795,   452,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795,  2291,  1251, -4795, -4795, -4795, -4795,
   -4795,  1301, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795,   436, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, 69122, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    1849, 76358,  1865, 76358,  1587,  1939, 76358, 65906, 76358, 76358,
    1571,  1061,  2000,  2051, -4795, -4795,  2103, -4795, -4795,  1932,
     546, -4795, -4795, 76358, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,  1421, -4795,  1425,
   -4795, -4795, -4795, -4795, -4795, -4795,   984, -4795, -4795, 76358,
   76358, -4795,  2307,  2123,  2145,  2229,  2057, 65906,   368, 76358,
   -4795,  1970, -4795,  2123,  2123,  2323,  2152,  1998, -4795, -4795,
   -4795,  2103,  2533, -4795,  1728,  1748,  1810, 23993, -4795,  1821,
    1833,  1856, 18197,  1882,  1899,  1911,  1914,  1916,  1921,  1935,
    2004,  2004,  2012,  2014,  2041,  2044,  1209,  2077, -4795,  2079,
     967,  2099, -4795, -4795,  2107,  2115,  2130,  2136, -4795,  2139,
    2150,  2161, 19025,  2192,  2200, -4795, 43393,  2213,  2219,  2224,
    2230,  2242,  2255,  2258,  2261,  2267, -4795, -4795, 18197,  2012,
   -4795, -4795, -4795,  2299,  2301,  2302,  2316,  2335,  2349,  2356,
    2364,  2369,  2372,  2377,  2382,  2388,  2391,  2399,  2400,  2012,
   -4795,  1220,  2402,  2417,  1228,  2418, -4795,  2427, -4795,   344,
    2432,  2004,  2012,  2012,  2435,  2437,  2461,  2472,  2475,  2478,
    2480,  2486,  2491,  2514,  2515,  2522,  2529,  2532,  2538,  2552,
    2565,  2566,  2568,  2569,  2573,  2574,  2576, 23993, 23993, -4795,
   23993,  9917, 32930, -4795, 76358, -4795, -4795,  1772, -4795, 54650,
    4122, -4795,  2765, 23993,  1207, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795,  2053, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,   847, -4795,  2588,  1994, -4795,
   -4795,  1061,  1061,  1061, 76358,  2442,  1061,  1061,  2047, 76358,
    1061,  2246,  1061,  1061,  1061,  2617,  1932, -4795, -4795, -4795,
   -4795,  2647,  2459,  2404,  2885, -4795,  2292, -4795, -4795, -4795,
    2584, -4795,  2592, -4795,  2413, -4795,  2612,  2592, -4795,   337,
    2592,   387, -4795, -4795, -4795,  2592, -4795, -4795, -4795, -4795,
    1665, -4795, -4795, -4795, -4795,   744, -4795,  2629,   178, 65906,
    2815, -4795, -4795, -4795,  2856, 76358,    -9, -4795, -4795, 18197,
   -4795,  2904, -4795,  1197,  3219, -4795,  1932,  3179,  3383, 76358,
   60278, -4795,  1932, -4795, -4795,  3173, -4795,   207,   195,  2800,
   -4795, -4795,  2921, -4795,  3262, 52238,   317, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, 12401,  2651, -4795,
   -4795,   115,  2935,  1027, -4795, -4795, 55454,  1390, -4795,  1512,
   -4795, 80378, -4795,  3225, 33735, 57062, -4795,  2609, -4795, -4795,
   -4795, -4795, -4795, -4795, 78770,  2611,   261,    69,  3274, -4795,
     161,  2622,  3786,   161, 61082,  3170,   334,   431,   316,   486,
   -4795,  3255, -4795,  2889, -4795, -4795,   510,  2965, -4795,  3286,
   -4795, -4795,  2915,  3170,  2918, -4795,  7277,   161,  3304,  1526,
    2086,   451,  1450,  2921, -4795,  1199,    59, -4795,    59, -4795,
    2637, -4795, 76358, 76358,    -9, -4795,  1932, -4795,  2644,  2646,
   -4795, 76358,  2653, -4795,  2652, -4795,   516,   516,   516,  3373,
     516, -4795,   516,  3303,  2648,  2656,  3440,  3327,  3276,  3334,
   -4795,  3298,  3387,  2641,  2678,  2291,  2679,  1301,  2680, -4795,
   -4795,  2681, 76358,  2004, -4795,  2686,   304, -4795, -4795,  2687,
   -4795,  2948, -4795,   -64,  3350,  3356,  3361, -4795,  2695, -4795,
   -4795, -4795, -4795,    23, 31320,  3277,  2291, -4795,   357,  3481,
     471,   471,   471,  3170, -4795,  1251,  1020,  3238,  3340,  3379,
    3294,  3347, 61886,  1389, -4795, -4795, 60278, -4795, 76358, 76358,
    1033, 65906, -4795, 76358, -4795,  3162,  2839, 94040, 76358, -4795,
   76358, 76358,  3016, -4795, 76358, -4795,    65, -4795,  2217, 18197,
   -4795, 76358, -4795,  2967,   132, -4795,   196,   371,   140,  1395,
   76358, 76358, 76358,  3048,  3358, 76358,  2859,  3568, 76358, 60278,
   83594, 76358, 76358,  2123,  2276,  1681, -4795, -4795, 18197, 18197,
     473,  3506,  3574,  3574,  3574,  2061,  2955, 18197, 18197, 18197,
   18197, 18197, 18197,  2101,  2767, -4795, -4795,    35, -4795,  2768,
   18197, 18197, -4795, 18197, 18197, 76358, -4795,  4200, 18197, 18197,
     574,  3456, 18197, 18197, 18197,  9917,  6379, 18197, 18197, 76358,
    3587,  2771, -4795,  2772,  2163, 18197, 18197,  2214, 18197, 18197,
   18197, 18197, 18197, -4795, -4795, 18197, 18197, 23993, 18197, 18197,
   18197, 18197, 18197, 18197,  2776, 18197,  3574,  3574, 18197, 18197,
    2226, -4795, -4795, 18197,  2570,  2570, -4795, 18197, 10745, 18197,
   -4795, -4795, -4795,  2779, -4795, -4795, -4795, 76358,  3574,  3574,
   18197, 18197, 18197,  3574,  3574, 18197,  2782,  2784, 18197, 18197,
   18197, 18197, 18197, 30515,  2785,  2786,  2789, 23993,  2234, 18197,
    3506,  3506,  3506,   -87,   357,  2665,   223,  1675,  3113, 18197,
   18197, -4795, -4795, 69926, -4795, -4795, -4795, 18197, -4795, 18197,
   18197, -4795, -4795, -4795, -4795, -4795, -4795,  1558, -4795, -4795,
   -4795, 19853, 23993, 23993,  2792, 23993, 23993, -4795, -4795, 23993,
   23993, 23993,  3344,  2954, 23993, 23993, 24821, 25649, 23993, 23993,
   23993, 23993,  1509,  3506, 65906, 23993, -4795, -4795,  2053,  2053,
   18197, 46609, 76358, 76358, 76358,  3248, 76358, 76358, 65906,  2919,
    1087, 76358, 76358, 60278, 76358, 83594, 76358,  1061,  3014,  3888,
   36150, -4795, -4795, -4795, -4795, -4795,  3068, -4795, -4795, -4795,
   -4795, -4795, 76358, -4795, -4795, 60278, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, 65906, -4795,  1211, 60278, 53042,   190, -4795,
   77162, 76358, -4795,    -9, -4795,  3173,  3116, -4795,   597,  2061,
    3582, -4795, -4795,  3436,  3604, 76358, 76358,  -101,  3353, -4795,
   -4795,  2814,  3063, 76358, 76358, -4795, 76358, 70730, -4795,  3362,
   -4795,  2818, -4795, -4795,  2053,  4626, -4795, -4795,  2459,  3282,
     133,  3165,   140,   212, -4795, -4795, 81986, 76358, -4795, -4795,
   -4795, -4795,  3583, 18197, -4795, 60278,  2929,  3094,  3397,    51,
   -4795,  2836,  2843, -4795,  3021, -4795, -4795,  2852, -4795,  2853,
   76358,  2006,   261, -4795, -4795, -4795, -4795, -4795, 76358,  2860,
    1512, -4795,  2611,   261, 34540, -4795, 11573, -4795,  3140,  3441,
    2053, 18197, -4795, -4795,  2871,  2123, 76358, 76358, 76358, 76358,
   76358, 60278, 76358, -4795, -4795,   191, -4795, 57866, -4795, -4795,
   -4795, -4795,   161, 76358, -4795, 76358,   161, 60278,   334, 76358,
     161, -4795,  3442,  3132, -4795, -4795, -4795,  3512, -4795, -4795,
    3504,  2872, -4795,  3441,   334, -4795,  3515, -4795, -4795, -4795,
   -4795,   334, -4795, -4795, -4795,   334,   334,   334,   161,   161,
   -4795,    64,  3622, -4795,  2886, -4795, -4795, -4795, -4795,  2891,
   -4795,  3515, -4795, -4795,  2896, -4795, 20681,  1203,  2653, 76358,
   76358,  3696, -4795, -4795,  2897, -4795,  3348,  3160, -4795,  3086,
   -4795, -4795,   213, -4795, 76358, 18197,  1887, -4795, -4795, 60278,
    3597, -4795, -4795,  2291, -4795, -4795,  3578, -4795, -4795,  2912,
    3010,  3692,  2957, -4795,  3289,  3289,  1900, 65906,  3375,  3095,
    3025,  3375,   237,  3375, -4795, -4795,   883,   897, -4795,  3027,
    1022,  3027,  1515, 60278,  3124,    -9,    -9,    -9,   452, -4795,
   -4795,  2334,  3191,  3191, 65906,  2937, -4795, -4795, -4795,  3268,
   -4795, -4795,   357, 18197, -4795, -4795,  1301,  1301,  1301, -4795,
    3170, -4795, -4795, -4795, 71534,  1020,  2856,  3379, -4795, 65906,
    2944, -4795,   457, -4795,  2278, -4795, -4795, -4795, -4795, -4795,
   -4795,  1159, -4795, -4795, 76358, 76358,  1784, -4795,  3458,  3767,
   -4795,  2953,  3671,   261,   261,  3671,   261,   261, -4795,  3204,
   -4795,   261,   108, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795,  3635,  3753,   261,  2320,  3394,   261,   261,  3721,
     261,  3403,  3405,   261,   261,   261,   261,  3226,  3676, -4795,
     261,  3552,   781,  3598,  3554,   261,  3421, -4795,  1602,  3686,
     261,   261,   261,   261,   261,  3721,  3426,  3780,   261,   261,
    3429,  1756,  3430,  3431,   261,  3250,   261,   261,   261,  1500,
     261,   261,  3437,   261,  3217,  3218,   261,  3444,  3444,   261,
     261, -4795,  7473, -4795, -4795, -4795,  2649, -4795, -4795,   832,
   -4795, -4795,  3012,  3017, -4795, -4795, -4795, -4795,  3355,  3138,
   -4795,  3367,  3223, -4795,  3016,   135, 72338, 76358, -4795, -4795,
    3030,  3036,  2070, -4795,  2061,  3040,  3032, -4795,  3776, -4795,
   -4795, -4795, 76358, -4795, -4795, -4795, -4795,  3258, -4795, -4795,
   -4795, -4795,  3057, -4795,  3820,  3434, -4795, -4795,  3716, -4795,
    3513,  3884,  3176,  3788,  3520,  2123,  3671,  3288,  3899,   441,
   -4795,   128,  2853,  3316,  1841, 76358,  3708,  2123,  2123,  2123,
    2123, -4795, -4795, -4795, -4795, -4795, -4795, -4795,  2123, -4795,
   -4795, -4795, -4795, -4795, -4795,  3016,   308,   310, -4795,  3574,
    3087, 18197,  3090,  3091,  3092, 18197,   194,  2627,   364,  1194,
    1749,   374,   229, 18197,  3101, 13229, -4795,  3107, -4795, -4795,
     414,   422,   448,   578,  3108, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,  3713, -4795,   435,  3111, -4795,
   -4795, -4795, -4795,  3100, -4795, 18197,  1210,   446,   476,   301,
    3102,   480,  1801,  1823,  3118, 76358, 76358,  3574,  3119,  1474,
    1521,  3574,  3120,   493,  1642,  1844,  1917,  1940,   536,  1951,
    3589,  1653,   540,   646,  1671,   947,  1023, -4795,  1708,  3123,
    3125,  1040,   292,  3574,  3126,   315,  3127,  3135,  1716, 14057,
   14885, 15713,   250,  1084, -4795,  3141, -4795,  2772,  3151,  3152,
     323,   272,  1750,  3149,  3154,  1953,  3259,  3259,  1764,  1086,
    1768,  1086,  1093, 65906,  3156, -4795, -4795, -4795, -4795,  3259,
    3259,  3259,   130,  3574,  3167,   331,   357, -4795, 18197,  3122,
    3164,  3168, 65906, 18197,   184, -4795, -4795, -4795,  2322,   285,
   -4795, -4795, -4795, -4795, -4795,  1148, -4795,  3166, -4795,   967,
    1934,  3180,  9917, -4795,  1214,  3180,  3480,   987,   987, 23993,
   -4795,  3178,  3153,  2590, 19025,   440, 19025,   440,  3180,  3180,
    3180, -4795, 23993,  3181, 23993, 23993, -4795,  3506, -4795, -4795,
   54650,  3175,  3177, -4795, -4795,  1445, -4795, -4795,  3174, 76358,
    1087, -4795, -4795,  1061, -4795, -4795, -4795,   109, -4795, -4795,
     256, -4795,  3184,   158,  2853,  3804, 76358,  3186, -4795,  3719,
    3722,  3727,  3730, -4795, -4795, -4795,  3732, -4795,  3734, -4795,
   -4795,  3202, -4795, 76358, 29710, 65906, -4795,  3206, -4795,  3872,
   -4795,  3659, -4795, -4795,  1966,  3455, -4795, -4795, -4795, -4795,
   47413,  1273, -4795, -4795, 76358, -4795,   211,   293,  4379,  3406,
   -4795,  2896, 76358,    -9,   397,    -9, -4795, 76358, -4795,  3759,
   -4795,   271,  3215, -4795,  3220, 65906, -4795, -4795,   278, 60278,
   60278,  3221, -4795,  3463,    95,  3444,  3224, -4795,  3227,  4028,
    4039,   195, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,  3229,  3894,  3230, 60278, 60278,
    1211, -4795, 76358, -4795, 27287,  3406, -4795,  3863,  3479,  3482,
    -143, -4795, 62690, -4795,  2061,  1143,  3289, -4795,  3289,    90,
   -4795, -4795,  3807, -4795,  3631, -4795, 83594, -4795, 65906, 83594,
    3871,  3240,  3241,  3243,  3244,  3257, 79574, 18197, -4795, -4795,
   -4795, 11573,  3247, -4795, 79574, -4795, -4795, 23993,  2079, -4795,
    2369, -4795,  2061, -4795, -4795,    -9,  3898, -4795,  2061,  3267,
   76358, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,   322, -4795, -4795, -4795, -4795,
   -4795, -4795,  3483,   161, -4795, -4795, -4795, -4795, -4795,  3669,
    3170,  2965,  3898,   161,  4040, -4795,   161, 76358, 76358,   161,
   -4795, -4795, -4795, -4795,  3588,  1199,  3496,    59, -4795,  2079,
    2061,  3280,  3279, -4795, -4795, -4795,  1979, -4795,   967,   516,
    3701, -4795,  3916, -4795, -4795, -4795, -4795, -4795,  1607,  1777,
   -4795,   152,   156,  3725,  1008,  3284,   261, -4795, -4795, -4795,
    3709,   -88, -4795,  3094,  3027,  3027,  3342,  3343, -4795, -4795,
    3904, 82790,  3731,  3991, 65906,  3904,  3094,  4034, -4795,  3094,
   -4795, -4795,  3094, -4795, -4795,  3569,  3571, -4795, -4795,  3572,
   -4795, -4795,   379,  2045, -4795,  2662,   246, -4795, -4795, -4795,
   -4795, -4795, 76358,  3476, -4795,  1079, -4795, -4795, -4795, -4795,
    2524, -4795, 35345,  3808,   497,  3320, -4795,  3357,  3357, -4795,
   -4795, 76358,    89, -4795,  3323, -4795, 28097, -4795, 65906,  1959,
   65906, -4795, -4795, -4795, -4795, -4795,  3779,   142, -4795, -4795,
   -4795, -4795, -4795,  2528,  2502, -4795, -4795,  4095,  3682,  3900,
    3564,  2502,  1767,    -9,  1501, -4795,  2509,    -9,  1501,  2509,
    2509, 76358,    -9, -4795,  2536,   261, -4795, 76358,  2070,   900,
    2070, -4795,   298, 76358, 44197, 73142, 76358, 76358, 76358, 76358,
     900,  1127,  1127, 76358,  3042, 73946,   900,    -9,    -9,    -9,
      -9,  2524,   261,  3042, -4795, 73946, -4795, 76358, 76358,  3906,
   76358,  3911, 76358, 76358, -4795, 65906, 76358, 73946, -4795,   261,
     295,  1127, 74750,  1127,  1127, 76358,   900, 76358,  2747,    -9,
     900, -4795, 76358, -4795, -4795, 76358, 76358,   900,   900,  1846,
   -4795,  2747,  2747,  2870, -4795, -4795, 76358,  3042, 73946,  3354,
   -4795, -4795, 63494,  3363, -4795, -4795, -4795,    -9,    -9, -4795,
     261,   261,  3765, -4795, -4795,  7622, 94118,  2048,   261,  3478,
    3805,  1822, 76358, -4795,  3516,  3518, -4795, -4795, -4795, -4795,
   -4795,  2070, 73946, 75554,  3936, -4795, 18197,  4032,  4033,  4037,
    4038,  4043,  4044,  4046,    56, -4795,  7683, -4795, -4795, -4795,
   -4795, -4795, -4795,   157, 76358,  3564,  3491,  3570, 76358,  3246,
   -4795,  3927,  2890,  3671,  3904, -4795,  4199, -4795, -4795,  3450,
   -4795, -4795, -4795,  3573, 60278,  3757,   261,  1497,  1497,  3848,
   -4795,  4853,  2123, 76358, 76358, 76358, 76358, 76358, -4795, 21509,
   -4795,  3417,  3259,  2061,  3259,  3259,  3259,  2562, 18197, 18197,
    4073,  6853,   866, -4795, 64298, -4795, -4795, -4795, 64298,  6853,
    1986,  3259,  3419, -4795,  3984,  3985, -4795, -4795, -4795, 18197,
   18197, -4795, 18197,   -22, -4795, 18197, 18197, 18197, 18197, 18197,
   -4795, -4795, 23993, -4795,  3416,  3433,  3259, -4795, -4795,  3443,
    3259, 18197, -4795, -4795, -4795, -4795, 18197, -4795, 18197, -4795,
   18197, 18197, -4795, 18197, 18197, -4795,  3259,  3259, 22337, 18197,
   18197,  3448,  3259, -4795, 18197, 18197, 18197, -4795, 18197,  2618,
   18197,  2683, 18197,  2724, 18197, -4795, 18197, -4795,  3259,  3259,
   -4795, 18197,   495, -4795,  3042, -4795,  3574,  3259, -4795, 45001,
   -4795, -4795,   395, 30515,  3451,   395,  3453, 23993, -4795,  3259,
   -4795, -4795, -4795,  1721,  3460,  3259, -4795, 18197,  1996, -4795,
   -4795, -4795,  3432, -4795,  2061, -4795, -4795, -4795, -4795, -4795,
   -4795, 23993,   333, 23993,  3480, 23993,  6379,  6379,  2327,  9917,
   -4795,  1579,  3480, -4795, -4795, 18197, 18197, 48217, 76358,   445,
   -4795,  3246,    79, -4795,   208, -4795, -4795, 60278, -4795, -4795,
   -4795, -4795, -4795,   158, 65906,  3438, -4795, -4795, -4795, -4795,
   -4795,  3515, -4795,  3720,  3220, -4795,  3687,  3703,  3715, 32930,
   -4795, 37760, -4795, -4795, -4795, -4795, 37760,   136,  1211, -4795,
   76358, 60278,  3462,  3473,  3474,  3697,  3626, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,  3406,  3464,
    3170, -4795,  3444, -4795, -4795, -4795, 79574, -4795,  3461, -4795,
    3485, -4795,  2217, -4795,   225,    20, 76358, -4795, 18197,    -9,
   -4795,  3726, -4795, 76358, 76358, -4795, -4795, -4795, -4795,  1039,
   -4795,  3033, 76358, 76358,  3507, -4795,  3515, -4795,  4626, 29710,
    4105,  3944,  4125,   100, 47413, -4795, -4795,  3501,   967, 26477,
    3595, -4795,  3498,  3088, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795,  3444,  3511,  4117,  3406, 83594, 83594, 83594, -4795,
   -4795, -4795,  3599,  3094,  3027,  3027,   327,  3901, -4795, -4795,
   -4795, -4795,  2853, -4795, -4795,  1959, -4795, -4795, -4795, -4795,
   -4795,   261,  2061, -4795, 34540, -4795, -4795,  1127,  3170,   432,
   -4795, 57866, 57866, 60278, -4795,  3960, -4795, -4795,  3170, -4795,
      -9, -4795,   334,   334, -4795, -4795, -4795,  3099,  3736, -4795,
   -4795, 20681, -4795, 76358, -4795,  3510, -4795,  4006, 76358,  4186,
    3522, 23993,  3525, 23993,  1959,  3789,  3526,  4338,  3042,  3191,
   -4795,  3950, -4795, -4795, -4795, -4795,  3857, -4795,  4352, -4795,
   -4795, -4795,  2853, -4795,  3375,  2259,  4017,  3027,  3958,  3027,
    3027, -4795, -4795, -4795, -4795,   312,  3042,  3042,  3042,  3042,
    2662, -4795,   144,  1060,  1907,  1959,   206,   246, -4795,  3536,
   -4795, -4795, 64298,  4292, -4795, -4795, -4795, -4795, -4795, -4795,
   18197,  1105,   266,   999, 28097, 76358, 49021, -4795,   773, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
     261, -4795,   261,    -9,  3835, 50629,  3836,  3837,  3838,  3880,
   -4795, -4795, 76358,  3998, -4795,    -9,  1596,    -9,    -9,    -9,
      -9,  3042,    -9,    -9,  2008, -4795, -4795, -4795,   203, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, 65906, -4795, -4795, -4795, 76358,
      10, 76358,  3555,  4116,  4120,  2070,    49, 76358,  3562,  3772,
    3796, 56258,  9180, -4795, -4795, -4795,  4024,  4024,  2129,   268,
   73946, -4795, -4795, -4795, -4795, -4795, -4795, -4795, 76358, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,  3057,  3563, -4795,
    1959, -4795, -4795, -4795, -4795, 58670,    -9, -4795,  3829, -4795,
   -4795, 76358,  3563, -4795, -4795,   648, -4795,  3760,  3847,    -9,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    9180, 73946,  3586, -4795,   463, -4795, -4795, -4795, -4795, 73946,
    3818,  3833, -4795, 76358, 73946, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, 76358,
   -4795, -4795, 76358, -4795, -4795, 62690, 64298, -4795,  4288,  3946,
    7473, -4795, -4795, -4795,  3012, -4795, -4795, -4795,   256,  4045,
     261,  1052,   643, -4795,  3968, -4795, -4795,  2652,  4042,  4050,
    3605, -4795,  3609, -4795,  3593, -4795, 72338,  2061,  3612,  3612,
    3614,  3614,  3615,  3615,  3617,  3776, -4795,  4268,  4282,  4283,
    4284,  4285,  4286,  4287,  4289,  4291,  4296,  4297,  4298,  4299,
    4300,  4301,  4302,  4305,  4306,  4307,  4308,  4309,  4310,  4311,
    4313,  4314,  4315,  4316,  4317,  4318,  4324,  4325,  4326,  4329,
    4330,  4331,  4332,  4333,   102, -4795, -4795, -4795,   199, -4795,
    3625,  2833,  3246, 65906,  3629, -4795,  4290,   261,   261,   261,
     261, -4795,   217, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,   256,  4475, -4795,  3717, -4795,
   83594, -4795,  3124,   611, -4795, -4795, -4795, -4795, -4795, 76358,
    3276, -4795, 76358, -4795, 41785, -4795, -4795, -4795, -4795,  1694,
    1616, -4795, -4795,   661, 76358, -4795,  3674,   -59, -4795,  2352,
   19025,  1799,  3259, -4795, -4795, -4795, -4795, -4795, 18197,  2061,
    2737, -4795,  3677,  3677,  3680, -4795,  3683,  4092,  3677, -4795,
   -4795, -4795, -4795, -4795, -4795,  4445, -4795, -4795, -4795, -4795,
    4261,  3680,  4262, -4795,  3677, -4795,  3791,  4491,  3766,  3693,
    3694,  3695,  3259, -4795,  3259, 18197, 18197,  1806,   342,  1825,
    4467,  4027,  1292,  1343,   356, -4795,  1831,  3711,  3259, -4795,
    3259, -4795,  1867,  1869,  1876,  1880,  1356,  1922,  2054, -4795,
   -4795, 19025,  1936,   262,   383,  3259, -4795,  1950,  1403,  1469,
    1987, 18197,  1993, 18197,  2027, 18197,  2037,  2122, -4795, -4795,
    2175,  3699,  3699,  3704,  3723, -4795, 76358, -4795, -4795, -4795,
   -4795,  3853,  3854,  3259,  3707,   395,  3259,   395,   147, -4795,
    3972,  1098,  3259, -4795,  2181, -4795, 76358, -4795, -4795, 18197,
    1207,   148, -4795, -4795, 23993,   399, 23993, -4795,  3728, -4795,
   -4795, -4795, -4795,  4259,  4537, -4795, -4795,  4004, -4795, -4795,
   -4795,  3186, -4795, -4795,   453, -4795,  4393,  3733, -4795, -4795,
   -4795, -4795, -4795, 47413, -4795,  1359,  3737, 49825, 60278,  4171,
    3170, 20681, -4795,  3691,   261,   397, 76358,  2070,  4327, -4795,
   -4795, -4795,  3191,  4277, -4795, -4795, -4795,  2061, -4795, 60278,
   -4795, -4795, -4795, 76358,  1203, -4795, 39370, -4795, -4795, -4795,
   -4795,  3739, -4795, -4795, -4795, -4795,  4403, -4795,  4182,  1211,
   60278,  3963, -4795,  4371, 18197,  3511,  3742,  3747,  3748,  3749,
    3750,  3751, 28097, 28097,  4321,  4334, -4795,  4192,  1503,  4192,
   -4795, 42589, 28097, 28097,  3093,  2652,  4528,  4367,  4117,  2853,
    2853,  2853,  3289,  3289, -4795, -4795, -4795, -4795, -4795, -4795,
     222, -4795, 11573, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    3184, -4795,  3515, -4795,  3406,   161,  4435, -4795,  4436, -4795,
    3769,  4441,  4201, -4795, -4795,  3042, -4795, -4795, 76358,  3056,
   76358,  3209, -4795,  4557,  3792, 23993,  4449,  3795,  4391, -4795,
   -4795,  3831,  3375, -4795,   957,  1083,  3375, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,   300,
    4517,  3104,  4378, -4795, -4795, -4795,  2053,  2053, -4795, -4795,
   -4795,  1774,  4355, -4795, 28097,  3444, 49021,  -172, -4795, -4795,
    3814, 76358,  2747,    -9, -4795, -4795, -4795, -4795, -4795,  4538,
   -4795,  4539,  1980,  4293,  4489, -4795, -4795,   228, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    1767, -4795,  3832,  1959,  4254,  3840, 18197, 76358, -4795, -4795,
   -4795,  3930, -4795, -4795,  3841, 45805,  1497,  1497,  2062, -4795,
   -4795, -4795,  9180, -4795,  3677,  3677,  3677, -4795, -4795,   610,
    3680, -4795, -4795,  3842, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795,   515,  1938, -4795, -4795,   515, -4795, -4795, -4795,
     286,  1997, -4795, -4795, -4795, -4795, -4795,  3843, -4795,  3677,
    3680,  3680, -4795, -4795,   515,  3677, -4795,  3677,  3677,  4227,
    4753, -4795,   165,  3677,  3677,  3677,  3845,  3683, -4795, -4795,
   -4795, -4795, -4795,  4547,   343, -4795,  9180, -4795, 76358, -4795,
    3583,  3583, -4795, -4795, -4795, -4795,  4110, -4795, -4795,   524,
   -4795, 76358, -4795, -4795, 76358, 76358,   153,  1039,  3852,  3859,
    3563, -4795, -4795, -4795,  3869,   280, -4795,    38, -4795, -4795,
    3804,  1582,   472,  4103,  1539, -4795, 76358, 76358, -4795, -4795,
   75554, -4795, 40175, -4795, -4795, 40980, -4795, -4795,  -140, -4795,
   -4795,  2029, -4795, -4795,  3873,    -9,  3042,    -9, 65102,  3042,
    1193,  1959,    86,  3042,  3042,    -9,    -9,  3042,  3042,  1460,
      -9,    -9,  1127,    -9,  3042,    -9,  3042,  3042,    -9,    -9,
      -9,    -9,    -9,    -9,    -9,  3042,   800,    -9,    -9,  3042,
    1959,  7683, -4795, -4795, 45805,   261,   261, -4795,   247, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,  4312, 45805,
    1404, 76358,    -9,  2509,  2509,  1959,  3189, -4795,  3904,  4469,
    2853,   246, -4795, -4795,  3138,  3877, -4795, -4795, 76358,  2065,
   -4795, -4795,  8087, -4795,  4229,  4335, -4795,  1455,  3881, -4795,
   -4795,   550,  6379, -4795, -4795,  2061, 18197,  1173, -4795, -4795,
     515,  4339, -4795,  1217, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,  3879,  6853,  4462,
   -4795, -4795, -4795, -4795, -4795,  6379,  6379, -4795, -4795, 18197,
   -4795, 18197,   516,  3886, 18197, 18197, -4795, 18197, -4795,  1192,
    3890,  4083, -4795, -4795, -4795, -4795, -4795, -4795, 18197, -4795,
   -4795,  6379, -4795, 18197, -4795, -4795, 18197, -4795, -4795, 18197,
   18197, -4795,  2186, -4795,  2227, -4795,  2232, -4795, -4795, -4795,
    1959,  3902,  3907,  3042,  3259, -4795,  3918,  4323, -4795, -4795,
   -4795, 18197, -4795,  3259, -4795,  3259,  4546,  6853,  1542, -4795,
   -4795, -4795,  2100, -4795, -4795, -4795, 18197,  1207, -4795, -4795,
   -4795, -4795, -4795, -4795,  4319, -4795,  3172, 37760,  4163,  4536,
   -4795, -4795, -4795, -4795,  1405, -4795, -4795,  2105, 76358,  4726,
    4373, 16541, -4795, -4795,  2070,  4327,  4479, -4795,   319, -4795,
   -4795,  3924, -4795,   261,  3559,  2137, -4795, -4795, 20681,  3925,
   -4795,  4172, 29710,  4558, 47413,   100,  4146, 60278,  1476,  2652,
   28097, -4795, -4795, -4795, -4795, -4795,  3088,  3923,  3926,  3928,
    3088, -4795, -4795, -4795,  4500, -4795,  4192,  4192,  4504,  4505,
   -4795,  2880,  3235,   566, -4795, 17369, 18197,  4069,  4367,  3027,
    3027,  1959, -4795, -4795, -4795, -4795,    -9,    -9,  1532,    -9,
    4607,  4642, -4795,  2166, -4795, -4795,  2174, -4795,  4492,  4254,
   -4795,  3263,  1959, 76358,  4722,  4750,  3904, -4795, -4795, -4795,
    4369, -4795,  3904, -4795,  1959, -4795,   232, -4795, -4795,  3182,
   -4795, -4795,  4727,  4730,  4628,  4731,  1774, -4795,  1504, -4795,
    -172,  3406,  1049, -4795,  3965, -4795,  -155, -4795, -4795, -4795,
   -4795, -4795, -4795,  4320, -4795,  1440, -4795, 45805, -4795, 76358,
    2193, -4795, 45805,  2264,  3961, -4795, 45805, 18197, -4795,  2198,
   -4795,   192, -4795, -4795, -4795, 56258,  4227, -4795, -4795, -4795,
    4748,   412, -4795,  4751, -4795,   515, 64298, -4795, -4795, -4795,
   -4795,   516, -4795,    13, -4795,   515, -4795, -4795,  4160, -4795,
   -4795, -4795,   516,   515, -4795, -4795, -4795, -4795,  2033, -4795,
   76358,   524, -4795, -4795, 62690,  2306,    -9,  3349,  4058, -4795,
    4180, -4795,  4664,  2097,  4530,  3246,   261,   261,  4734, -4795,
   -4795,  6335, -4795,  4588,  4531, -4795,   919, -4795,  4765, -4795,
     515,  4765,  2033,  4432, -4795,  2033,  2033, -4795,  3558, -4795,
     524, -4795, -4795, -4795, 76358, 76358, -4795, -4795, -4795, -4795,
   -4795,  3982, -4795, -4795, -4795,  4438,  4045, -4795,  4439, -4795,
   -4795,  4392, -4795, 18197, 18197,  4431, 76358,  4442, -4795,  4735,
    4794,  3563,  1260, -4795, -4795,  2201, -4795, -4795, -4795,  2204,
   -4795, -4795,  3987, -4795,  2207, -4795, -4795, -4795, 76358, -4795,
    2221,  3042, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    2240,  2509,  2509,  3305,  1404,  3995,  2247,    -9,    -9,    -9,
      -9, -4795, -4795, -4795, -4795, -4795, -4795, -4795,   340, -4795,
   -4795, -4795,   206,  3478, 45805,  3996,  6053, -4795,  1455,  4340,
   76358, -4795, -4795, -4795, -4795,  4336, -4795, -4795, -4795, -4795,
    4444,  1565,  2061,  4001,  4002,  4005,  4008, -4795,  4009,  2272,
   -4795,  3791, -4795,  2053,  4010,  4011,  2296,  3994, -4795, -4795,
    3259,  2310,  1478,  2283,  4495,  4574, -4795,  4414, -4795,  2330,
    1649,  2332,  2338,  2346,  2403, -4795, -4795, -4795, -4795, -4795,
   -4795,  4018, -4795, -4795,  4799,  4466,  2061, -4795, -4795,   351,
     395, -4795,  3386, -4795, -4795,  4030,  1542, -4795,  4478, -4795,
    2293,  4681,  4572, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, 60278,  4474,
    4649,  4839,  3406,   166, 76358,  4373,  4714, -4795, -4795,  2061,
   -4795, -4795, -4795,  4613,  4493, 76358, 20681, -4795, -4795,  3559,
   76358,  4047,  3739,  3246, -4795, -4795, 60278,  4666, -4795, -4795,
     100,  1721, -4795,  1659, -4795, -4795,  4608,  4609, -4795, -4795,
   18197,  4052, 18197,  4053, -4795, -4795,  2070,  2070, -4795,   566,
   -4795,  4062,  4054,  4059,  2061,   504, -4795,  2061, 76358,  4067,
    4069, -4795, -4795, -4795, -4795, -4795, -4795, -4795,    -9,  4713,
    4481, -4795, 76358, -4795,  1036,  2309, -4795, -4795,  4060,  4061,
      -9,   957, -4795, -4795, -4795,  4767, -4795, -4795, -4795,  4768,
     516,   516,  4844,   516, -4795,  4845,  4846,  1504, -4795, -4795,
    4508,  4508,  4519, -4795,  2324,  4278, -4795,  4254,  2325, -4795,
   76358,  2345,  2430,  1156, 45805,  4533, -4795, -4795, -4795, -4795,
   -4795, -4795, 64298, -4795, -4795,  4765,  2347, -4795, -4795, -4795,
    2370, -4795, -4795, -4795, -4795, -4795,  2033, -4795,  4077, -4795,
    1443, -4795, -4795, -4795, -4795, -4795,  3687,  3703,  3715,  1460,
    1460, 18197, -4795, -4795, -4795, -4795, -4795, -4795,  4541,  4295,
   -4795, -4795, -4795, -4795, -4795, -4795,    -9,    -9, -4795, 62690,
   -4795,  4888,  4885, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    4082, -4795, -4795, 18197, -4795, -4795,  2034, -4795,  4254, -4795,
   -4795, -4795, -4795,  2061,  6379,  4830, -4795, -4795,   -84,    -9,
    4769,  3276,  4802,  4548,  2050, -4795, -4795, 76358, -4795, 76358,
   76358, -4795,    -9,  4090, -4795,  4096,  2379, -4795, -4795,   443,
   -4795, -4795, -4795,  1767,   490, -4795, -4795, -4795,  4693, 65906,
   -4795,  1052,  2389, -4795, -4795,  4408,   472,  4100,  4097, -4795,
    9180,    -9,    83, 76358, -4795, -4795, -4795, -4795, -4795, -4795,
    4554,  4104,  4906, -4795, -4795, -4795, 18197, -4795, -4795, 18197,
   -4795, -4795,  4592,  4756, -4795, -4795, -4795, -4795, -4795, -4795,
    4111,  3042, 18197,  4886,  1164, -4795, -4795,  3259, -4795, -4795,
   -4795,  4561,   159, -4795, -4795, -4795,  1405, -4795,  4559, 60278,
   -4795,  3170,  4373,  2652, -4795,  4679,  4527,   219, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,   100, 60278, -4795,
     306, -4795, -4795, -4795,  2061, 76358,  2061, 76358,  4752,  4752,
   -4795,  -207, -4795, 18197, 18197, -4795, 18197, -4795,  4926,  4121,
   -4795, 18197, -4795,  4067, -4795,    -9,  4788, -4795, -4795,  4128,
    4338, -4795, -4795,   309, -4795, -4795, -4795, -4795, -4795,   516,
   -4795,   516,   516, -4795,  4677,  4677,  4792,   443,  2184,  3746,
   -4795,   490,  2408, -4795,  1156,   463,    -9,   261,   261,   261,
   -4795,  1156, -4795, -4795, -4795, -4795, -4795,  4131, -4795, -4795,
     515,   516,   515, -4795, 76358,  4640, -4795, -4795,  2452, -4795,
   -4795, -4795, -4795, -4795, -4795,  4137,  2456, -4795, -4795,  2411,
   -4795, -4795, -4795, -4795, -4795, -4795,  4341, -4795,  2053,  4294,
    4353,  4354, -4795, -4795, -4795, -4795, -4795, 76358, 76358, -4795,
    3042,  4566,   445,   443, -4795, -4795,  2419,   445,   490, -4795,
   -4795,  4918,  4947, -4795,  1156,    -9,  4431, -4795, 76358,  3583,
   -4795, -4795, -4795, -4795,  4147,  4141, -4795, 76358,  4778,  4150,
   -4795,  4868, -4795,  2510, -4795, -4795, -4795,  4157,  4155, 18197,
   -4795, -4795, -4795, -4795,  2535, -4795,  4823, -4795, -4795,  4839,
   -4795,  4350, -4795, -4795, -4795,  4380,  4724,  4743, -4795, -4795,
     100,  4167,  4168,  4169,  4173,  1873,  4175,  4177, -4795, -4795,
    4178,  2428,  2451, -4795,  4179, 76358,  2061, -4795, -4795,    -9,
    3515, 23993,  4181,  4855,   112, -4795, -4795, -4795, -4795, -4795,
   57866, -4795, -4795, -4795, -4795,  4183,  4422,   261,  4860,  4867,
     261,   261,   261,   261,  4184,  3746, -4795,  4847, -4795,  4227,
   76358, -4795, -4795, -4795,  3042,    -9,    -9, -4795,   463, -4795,
   -4795, -4795,  2458, -4795,  1692,  4631, -4795, 18197, -4795, -4795,
    4473, -4795, 91634,  1611, -4795, -4795, -4795, -4795, -4795,  4188,
    4185, -4795,   319, -4795, -4795, -4795, -4795, -4795,  3246,   445,
   -4795,  1539, -4795,  4543, -4795, -4795, -4795,  2121,  9180,  4869,
   -4795,  3680, -4795, -4795,  3320,  3082,  4534, 18197,  4328,  4342,
   -4795, -4795,  4337,  4343, -4795,  4368, -4795, 76358,  4635,  4459,
   -4795, 77966,  3608, -4795, -4795,  4977, -4795,  4978, 75554, 75554,
     118, -4795, -4795, -4795, -4795, -4795, -4795,  3435, 76358,   261,
    4496, -4795, -4795,  4204, -4795, -4795,    71,    -9,   261,   261,
    3246,  3246,  1959, 76358,  4477, -4795, -4795,   261, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, 76358, -4795, -4795, -4795,   475,
   -4795,  2512, 18197,  4874,  4399, 76358,   330, -4795, 93242, 93242,
   76358, -4795, -4795, -4795, -4795,  7277, -4795, -4795,   180, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
    5001, -4795,  4205, -4795, -4795, -4795, -4795,  4972,  4653,  4974,
   -4795, 76358, -4795, -4795, -4795,  4735,  9180, -4795, -4795,  3583,
    4556,  4216, 18197,  1392, -4795,  5022,  1824,  1845, -4795,  6379,
   -4795,   251, -4795, -4795, -4795, 81182,  3924, -4795, 76358,  4344,
    2469, -4795,  8739, -4795, -4795, -4795,  4219,  2484, 65906,  4220,
   -4795, -4795,  4494,  2493,  3191, -4795, -4795,  2519, -4795, 23165,
   -4795, -4795, -4795, -4795,    -9,    -9, -4795, -4795, -4795, -4795,
   65906,  2534, -4795, 65906, -4795,  1288,  1288,  1151,  2061, 18197,
   -4795, 18197,  4412, -4795, -4795,  4851, 76358, -4795, -4795, -4795,
   -4795, 18197, -4795, 91634, 91634, -4795, -4795, -4795, -4795,  5017,
    4667, -4795,  4668,  4226,  4911,  3583,  4130, -4795,   935, -4795,
    6379, -4795,  3082, -4795, -4795,  4364,  4573, -4795,  4370, -4795,
    3021, -4795, -4795,  2853,  3444,  1721, -4795, 77966,  4356,  3583,
   -4795, -4795, -4795, -4795,  1959, -4795,  4494,  4595, -4795,  4204,
   -4795,  2539, -4795,  3480, -4795, -4795,  3746, -4795,  4477, -4795,
   -4795,  5054, -4795,  1430,  4684,  4685, -4795, -4795,  6335,  2061,
    2061, -4795,   221, -4795, -4795,  4817,  4910, 18197,  2061, 86810,
    4239, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, 92438, 18197, -4795,   180,  5001, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,  4932, 87614, -4795,
   -4795, 65906, -4795,  1913, -4795, -4795, -4795, -4795, -4795,  2524,
     306, -4795, -4795,  4896, -4795, -4795, -4795, -4795, -4795, 23165,
   -4795, -4795, -4795, -4795, -4795,  4460,  4939, -4795,  4437, 18197,
   91634, -4795,  4917, -4795,  4842,  2061,  4781,  4248, -4795,  4245,
    2061,  4952, 93242, 93242, -4795, -4795, -4795,   -68, -4795, -4795,
   -4795, 91634, -4795,  4994, -4795, -4795,  4376, -4795,  1288,  1288,
   -4795,   389, -4795,  2061, 88418,  5025, 76358, -4795,  4506, -4795,
   -4795, 18197,  4944, 66710, 89222,  4256, -4795, -4795, -4795,  4130,
   -4795, -4795, -4795, -4795,  4929,  4610,  1721, -4795, -4795, 18197,
   -4795,  4936,  4520, -4795,  4269, -4795, 91634,  2061, 91634, -4795,
   -4795,  4881,  8626,  2189, -4795,  4273, -4795, 87614,    -9,  4872,
    4292,  1351,  2061,  5047, 91634, 76358, 84398,  4949, 90026,  4912,
   76358,  3583,  4913,  4914, -4795, -4795, -4795,  5056,  4355, -4795,
   -4795,  1542,  4535, -4795, 85202, -4795,  2725,  4651,  4476, -4795,
   -4795,  4985,  1717, -4795,   516,  4889, -4795,  4739, 91634, 91634,
   -4795, -4795, -4795, -4795, 53846, 18197, -4795, -4795, -4795, -4795,
    2496, -4795,  4754,  4304,  4424, 86006, 90830, -4795, -4795, -4795,
   28906, -4795, -4795, -4795,  4927, -4795,  2061, -4795,   263, 36955,
    4625, 53846, -4795, -4795, -4795, -4795, -4795, -4795, 65906,  2553,
   -4795, -4795, 76358,  4345, -4795, -4795, -4795, 38565,  4303, -4795,
     261,  4973,  4801, -4795, 76358, 20681,  4762,  4975,  5124, -4795,
   -4795, -4795,  2509,  4980, -4795, -4795,  4347, -4795
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_int16 yydefact[] =
{
    1983,  3093,  1266,  3045,     0,     0,     0,     0,     0,     0,
    3047,  3093,   153,  2096,  2097,     0,  1927,     8,     0,  1266,
     416,     0,     0,   165,     0,  1941,     0,  2157,     0,     0,
    1266,     0,  2151,     0,     0,  1266,  1988,  2133,   393,  1923,
    3047,     0,  1324,     0,  2073,  2878,     0,     0,     0,     0,
    2001,     0,  2875,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2879,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   142,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1187,
     145,   144,   143,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1296,  1294,  1847,  1304,  1303,  1310,  1311,
    1312,  1984,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   149,     0,    44,   146,   112,   137,   138,   118,   136,
     123,   125,   113,   114,   115,   101,    97,   134,    98,   132,
     122,   116,   103,   102,   140,   117,   131,   130,   135,   129,
     139,    99,   100,   126,   121,   104,   108,   111,    96,   133,
     107,   106,   109,   128,   120,   127,   119,   105,   110,   124,
      45,    64,  2098,    65,    86,    81,    74,   150,    75,    93,
      95,    94,    76,   148,   141,    88,    19,    69,    89,    68,
      15,    36,    90,    91,    82,   151,    73,   147,    71,    35,
       0,  1084,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1923,     0,  1020,  3091,  3092,  3093,  1268,  1267,     0,
    3047,  2277,  1253,     0,  2361,  2360,  2363,  2365,  2366,  2367,
    2368,  2369,  2370,  2313,  2372,  2375,  2377,  2378,  2379,  2380,
    2314,  2382,  2383,  2384,  2385,  2386,  2387,  2315,  2316,  2390,
    2391,  2392,  2394,  2395,  2317,  2318,  2396,  2397,  2398,  2399,
    2400,  2401,  2402,  2403,  2404,  2405,  2320,  2406,  2321,  2407,
    2408,  2410,  2411,  2441,  2412,  2413,  2414,  2415,  2416,  2417,
    2322,  2418,  2419,  2420,  2421,  2422,  2423,  2424,  2425,  2426,
    2323,  2427,  2428,  2430,  2432,  2433,  2434,  2435,  2436,  2324,
    2437,  2438,  2439,  2440,  2325,  2442,  2444,  2445,  2447,  2449,
    2448,  2450,  2451,  2351,  2452,  2453,  2310,  2455,  2456,  2457,
    2458,  2459,  2462,  2463,  2352,  2464,  2465,  2467,  2468,  2326,
    2327,  2470,  2471,  2472,  2473,  2480,  2475,  2476,  2477,  2776,
    2479,  2328,  2483,  2329,  2487,  2486,  2488,  2273,  2489,  2274,
    2490,  2330,  2492,  2493,  2496,  2497,  2331,  2499,  2500,  2501,
    2502,  2503,  2504,  2506,  2332,  2508,  2509,  2510,  2511,  2512,
    2513,  2777,  2515,  2516,  2517,  2520,  2521,  2522,  2523,  2524,
    2525,  2526,  2527,  2529,  2530,  2531,  2532,  2533,  2534,  2535,
    2536,  2537,  2538,  2539,  2540,  2541,  2542,  2543,  2544,  2545,
    2546,  2547,  2548,  2550,  2551,  2552,  2553,  2353,  2333,  2555,
    2557,  2558,  2560,  2563,  2564,  2565,  2567,  2571,  2572,  2573,
    2574,  2576,  2578,  2577,  2579,  2582,  2584,  2585,  2583,  2586,
    2587,  2588,  2334,  2335,  2590,  2591,  2592,  2354,  2594,  2596,
    2595,  2355,  2597,  2598,  2599,  2601,  2602,  2603,  2604,  2605,
    2608,  2609,  2610,  2611,  2612,  2356,  2613,  2615,  2336,  2616,
    2357,  2618,  2620,  2619,  2621,  2623,  2624,  2622,  2337,  2628,
    2630,  2631,  2633,  2635,  2637,  2338,  2639,  2640,  2641,  2643,
    2642,  2644,  2339,  2646,  2647,  2653,  2654,  2655,  2656,  2780,
    2657,  2658,  2312,  2340,  2659,  2341,  2661,  2662,  2663,  2664,
    2665,  2689,  2694,  2695,  2696,  2697,  2698,  2699,  2701,  2702,
    2342,  2703,  2704,  2705,  2706,  2343,  2707,  2709,  2711,  2712,
    2713,  2714,  2715,  2359,  2716,  2717,  2718,  2719,  2720,  2721,
    2722,  2723,  2724,  2725,  2726,  2731,  2729,  2730,  2732,  2734,
    2735,  2344,  2736,  2737,  2739,  2740,  2741,  2742,  2345,  2346,
    2743,  2745,  2746,  2748,  2749,  2750,  2751,  2752,  2754,  2756,
    2757,  2758,  2759,  2760,  2761,  2762,  2763,  2347,  2764,  2765,
    2766,  2778,  2638,  2364,  2498,  2755,  2409,  2660,  2514,  2554,
    2779,  2484,  2388,  2319,  2454,  2469,  2556,  2570,  2589,  2629,
    2728,  2738,  2549,  2568,  2581,  2485,  2636,  2700,  2727,  2358,
    2753,  2311,  2429,  2431,  2569,  2606,  2362,  2491,  2371,  2528,
    2566,  2651,  2648,  2650,  2652,  2632,  2562,  2443,  2561,  2519,
    2600,  2593,  2626,  2580,  2461,  2627,  2708,  2559,  2634,  2505,
    2733,  2373,  2446,  2649,  2669,  2767,  2625,  2617,  2614,  2478,
    2666,  2667,  2668,  2670,  2671,  2672,  2673,  2674,  2675,  2676,
    2677,  2678,  2679,  2687,  2681,  2680,  2682,  2683,  2685,  2684,
    2686,  2688,  2690,  2691,  2692,  2693,  2710,  2507,  2374,  2460,
    2466,  2495,  2607,  2744,  2494,  2393,  2482,  2389,  2747,  2474,
    2575,  2518,  2481,  2645,  2376,  2381,  2768,   347,  2284,   327,
    2285,  2306,  2307,  2308,  2305,  2309,     0,  2868,  2867,     0,
       0,  3048,  3049,   682,     0,     0,     0,     0,     0,     0,
    1928,     0,   963,   682,   682,     0,     0,     0,   264,  3076,
    3076,  3093,  3095,  3097,  2363,  2313,  2379,     0,  2242,     0,
       0,     0,  1694,     0,  2317,     0,  2400,  2402,     0,     0,
    1352,  1352,   847,     0,     0,     0,  2425,  2426,  2248,     0,
       0,     0,  2239,  2249,  2470,  2475,  2477,     0,  2241,  2488,
       0,     0,     0,     0,  2512,  2251,     0,     0,  2532,  2534,
       0,     0,  2538,  2539,  2540,  2541,  2223,  1411,     0,   847,
    2235,  2250,  2229,  2586,  2587,     0,  2597,     0,     0,  2637,
       0,     0,  2642,  2653,     0,     0,  2712,     0,     0,   847,
    2222,  2731,  2729,  2730,  2732,     0,  2240,  2344,  2252,     0,
    2748,  1352,   847,   847,     0,     0,     0,  2758,  2759,  2766,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2505,  2710,  2518,     0,     0,  1344,
       0,     0,     0,  1410,     0,  1497,  3067,  1901,  1343,  1347,
    1364,  1369,  1386,     0,  1403,  1422,  1423,  1425,  1535,  1424,
    1431,  1556,  1432,  1557,  1430,  1429,  2236,  1428,  2246,  2245,
    1427,  2237,  2247,  2238,  1345,  1421,  2264,  2284,  2263,  1438,
    3065,  1923,  1923,  1923,     0,     0,  1923,  1923,     0,     0,
    1923,     0,  1923,  1923,  1923,     0,     0,   158,  2109,   417,
     418,     0,  2920,  2933,  2934,  2930,  2935,  2953,  2936,  2940,
       0,  2932,  3025,  2297,     0,  2939,     0,  3025,  2937,     0,
    3025,     0,  2938,  2943,  2954,  3025,  2931,  2286,  2296,  2295,
    3025,  2770,  2769,  2287,  2771,     0,  2922,     0,  2269,     0,
       0,  1943,  1944,  1942,  1172,     0,     0,  2158,  2159,     0,
    2162,     0,  2163,  2168,     0,  2864,     0,     0,     0,     0,
       0,  1269,     0,  1946,  1989,  1947,  1945,  1923,     0,   383,
     392,   394,   395,   391,     0,     0,  3049,  3060,  3075,  3070,
    3069,  3072,  3073,  3074,  1329,  3071,  3068,     0,  1325,  1327,
    1328,   900,     0,     0,  2811,  2814,  2544,  2579,  2815,  2734,
    2812,  2638,  2813,  2358,     0,     0,  2290,  2838,  2773,  2774,
    2775,  2772,  2291,  2781,     0,  2805,     0,     0,     0,   900,
    2085,     0,     0,  2085,     0,  1856,  2069,  2074,  2072,     0,
    2817,  2047,  2818,     0,  2024,  2046,     0,  2003,  2039,     0,
    2819,  2068,     0,  1856,     0,  2030,  1983,  2085,     0,     0,
       0,     0,     0,   395,  1186,  1202,  1217,  1185,  1217,  1323,
    2269,  2002,     0,     0,     0,  2877,     0,  2160,     0,  1322,
    1965,     0,  1822,  1825,  1827,  3145,     0,     0,     0,  3140,
       0,  3146,     0,     0,  2263,     0,     0,     0,     0,     0,
    3066,     0,     0,     0,     0,  1958,  1304,     0,     0,     1,
      11,     0,     0,  1352,  2294,  2748,     0,  2293,  2292,  2298,
    2300,  2978,  3023,  3029,     0,     0,     0,  1184,  1188,  1189,
    1191,  1192,  1193,     0,     0,     0,  1295,  1331,  1298,     0,
    3062,  3062,  3062,  1856,  1848,  1847,  1995,  1988,  2098,  2470,
    2102,  2104,  2106,     0,  1012,  1085,     0,  1016,     0,     0,
       0,     0,  2880,     0,  1014,     0,  2067,  1092,     0,  1043,
       0,     0,  3102,  1018,     0,  3046,     0,  1279,  1290,  1686,
     346,     0,   169,     0,  1231,  1919,  1255,     0,  3052,     0,
       0,     0,     0,  3098,     0,     0,     0,   529,     0,     0,
       0,     0,     0,   682,  3102,  3102,  3076,  3096,     0,     0,
    1813,  1445,  1813,  1813,  1813,  1695,     0,     0,     0,     0,
       0,     0,     0,  1813,     0,  1489,  1461,     0,  1490,     0,
       0,     0,  2253,     0,     0,     0,  1442,     0,     0,  1686,
       0,  1655,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1690,  1692,  2263,  1813,     0,     0,  1813,     0,     0,
       0,     0,     0,  1357,   896,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1813,  1813,     0,     0,
    1813,  1505,  2255,     0,     0,     0,  2254,     0,     0,     0,
    2244,  2243,  2224,     0,  1508,  1510,  1509,     0,  1813,  1813,
       0,     0,     0,  1813,  1813,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1813,     0,
    1435,  1434,  1436,     0,  1958,  3067,     0,  2820,  1653,     0,
       0,  1407,  1406,     0,  1405,  1404,  2283,     0,  1346,     0,
       0,  1351,  1350,  1412,  1413,  1414,  1415,     0,  1416,  1417,
    1418,     0,     0,     0,     0,     0,     0,  1409,  1408,     0,
       0,     0,     0,  1388,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1437,     0,     0,  2278,  2225,     0,     0,
    1551,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1929,     0,     0,     0,     0,     0,     0,  1923,   160,     0,
       0,  2921,  2913,  2951,  2950,  2955,     0,  2952,  2948,  2956,
    2957,  2941,     0,  2927,  2945,     0,  2929,  2947,  2946,  2926,
    2942,  2949,  2928,     0,  2924,  2916,     0,     0,  1809,  2890,
       0,     0,   166,     0,  1173,  1947,     0,  3169,  3163,  2156,
       0,  2169,  2170,  2166,     0,     0,     0,     0,     0,  2152,
    3061,  1271,     0,     0,     0,  1948,     0,     0,  2135,     0,
    2143,  2134,  2137,   384,     0,     0,   414,  1924,  2920,     0,
       0,  3055,  3052,  1315,  1326,   899,     0,     0,   902,  2837,
    1966,  1967,   911,     0,   901,     0,     0,     0,     0,     0,
    2783,  2849,  2846,  2845,  2796,  2791,  2790,  2302,  2974,  2789,
       0,  2824,     0,   906,   908,   907,  2834,   905,     0,     0,
    2734,  2784,  2805,     0,     0,  2782,     0,  2029,     0,  2081,
       0,     0,  2087,  2045,     0,   682,     0,     0,     0,     0,
       0,     0,     0,  2018,  2066,     0,  2065,     0,  2038,  1857,
    2079,  2080,  2085,     0,  2078,     0,  2085,     0,  2069,     0,
    2085,  2015,     0,     0,  2007,  2012,  2008,     0,  2014,  2013,
    2016,  2004,  2005,  2081,  2069,  2037,   254,  2064,  2044,  2034,
    2042,  2069,   961,   960,   959,     0,     0,  2069,  2085,  2085,
     390,     0,     0,  1201,  1203,  1204,  1222,  1221,  1198,  1218,
    1219,   254,  2000,  3167,  3168,  2876,  1972,     0,  1823,     0,
       0,     0,  2228,  2227,  3142,  2226,  3150,  3152,  3136,     0,
    3139,  3138,  3147,     3,     0,     0,   619,     4,     6,     0,
       0,     7,  1297,  1959,  1308,  1309,    12,   152,  2301,     0,
       0,     0,     0,  1039,  1040,  1040,     0,     0,     0,     0,
       0,     0,     0,     0,  3013,  1038,  2976,  2976,  3009,  2976,
    2976,  2976,     0,     0,  1067,     0,     0,     0,     0,  1336,
    1335,  1338,  2437,     0,     0,  1900,  1894,  1897,  1896,     0,
    1330,  1300,  1299,     0,  3064,  3063,     0,     0,     0,  1301,
    1856,  1999,  1998,  1997,     0,  1995,  1172,     0,  2100,     0,
       0,  2101,     0,  2089,  1983,  2088,  2107,  2108,  3100,  3101,
    3099,   913,  3094,   328,     0,     0,  2882,  2888,     0,     0,
     328,     0,     0,  1968,  1968,     0,  1968,  1968,   598,     0,
     597,  1968,   688,   550,   552,   553,   587,   554,   555,   556,
     557,   558,     0,  1170,  1968,  1170,     0,  1968,  1968,  1170,
    1968,     0,     0,  1968,  1968,  1968,  1968,     0,     0,   914,
    1968,     0,     0,  1170,     0,  1968,     0,  1154,     0,     0,
    1968,  1968,  1968,  1968,  1968,  1170,     0,     0,  1968,  1968,
       0,  1180,     0,     0,  1968,     0,  1968,  1968,  1968,     0,
    1968,  1968,     0,  1968,     0,     0,  1968,  1724,  1724,  1968,
    1968,   724,  1125,   684,   711,   712,     0,  1010,  1011,  1086,
    1088,  1158,  1094,  1093,  1122,  1127,  1156,  1157,     0,  3181,
    1022,     0,     0,  1021,  3102,  1250,     0,     0,   956,   955,
       0,     0,  1290,  1281,  1688,     0,  1687,   326,     0,   167,
    1233,  1232,     0,  1230,  1263,  1262,  1260,     0,  1261,  1259,
    1254,  1256,  1257,  3051,     0,     0,  3053,  3057,     0,   262,
       0,     0,     0,     0,     0,   682,     0,   531,     0,  2986,
    3021,   277,   260,     0,   989,     0,     0,   682,   682,   682,
     682,  3090,  3078,  3085,  3086,  3089,  3088,  3087,   682,  3084,
    3077,  3080,  3081,  3083,  3082,  3102,     0,     0,  1814,  1813,
       0,     0,     0,     0,     0,     0,  1696,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1353,     0,   848,  1517,
       0,     0,     0,     0,     0,  1785,  1786,  1787,  1788,  1796,
    1789,  1790,  1791,  1798,  1803,  1792,  1793,  1799,  1800,  1801,
    1794,  1802,  1797,  1795,  1804,     0,  1784,     0,     0,  1808,
    1805,  1807,  1806,     0,  1656,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1813,     0,     0,
       0,  1813,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1527,     0,     0,
       0,     0,     0,  1813,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1485,     0,  2266,  2265,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1599,
       0,  1599,     0,     0,     0,  1602,  1603,  1601,  1604,     0,
       0,     0,     0,  1813,     0,     0,  1959,  1439,     0,     0,
       0,     0,     0,     0,     0,  1342,  1349,  1348,  1355,  1354,
    1356,  1360,  1365,  1358,  1362,     0,  1419,  2370,  1367,     0,
       0,  1400,     0,  1370,  1380,  1401,  1384,  1391,  1392,     0,
    1387,     0,  1389,  1390,     0,  1394,     0,  1393,  1397,  1398,
    1399,  1402,     0,     0,     0,     0,  1426,  1433,  1455,  1456,
    1347,     0,  1552,  1553,  2259,  2267,  1904,  1911,  1906,     0,
    1929,  1908,  1916,  1923,  1933,  1934,  1913,   688,  1931,  1912,
     559,  2972,  1909,  1174,  1918,  3194,     0,     0,   159,     0,
       0,     0,     0,  2127,  2130,  2126,     0,  2129,     0,  2128,
    2110,  2113,  2119,  2131,     0,     0,   415,   419,   421,     0,
     424,     0,  2944,  3027,     0,     0,  2925,  2918,  2919,  2917,
       0,  2958,  2923,  1810,     0,  2889,  2467,  2552,     0,  1815,
    2270,  3171,     0,     0,  3155,     0,  3166,     0,  2167,  2164,
    2866,  1809,  2865,  2869,  1265,     0,   155,   156,     0,     0,
       0,  1270,  1274,     0,  1235,  1724,     0,  2139,  2140,     0,
    2147,     0,   382,   407,   402,   410,   404,   406,   405,   411,
     412,   413,   408,   403,   409,   396,     0,  2907,     0,     0,
    2916,  3056,     0,  3058,     0,  1815,  1316,  1315,     0,     0,
       0,  2840,     0,  2836,  2835,     0,  1040,  2280,  1040,     0,
    2851,  2852,     0,  2843,     0,  2844,     0,  2795,     0,     0,
    2798,     0,     0,     0,     0,     0,     0,     0,  2839,  2804,
    2803,     0,  2806,  2807,     0,  2810,  2860,  2861,  2858,  2859,
    2862,  2863,  2857,  2831,  2053,     0,  2083,  2086,  1817,     0,
       0,  2062,  2056,  2055,  2051,  2057,  2063,  2052,  2025,  2026,
    2027,  1865,  1866,  1864,  1858,  1859,  1863,  1862,  2021,  2070,
    2061,  2059,  2048,  2085,  2060,  2058,  2009,  2010,  2011,     0,
    1856,     0,  2083,  2085,     0,  2054,  2085,     0,     0,  2085,
    2041,  2043,  1207,  1208,     0,     0,  1223,     0,  1197,  1977,
    1976,     0,  1973,  1975,  1964,  1824,     0,  1829,     0,     0,
       0,  3137,  3153,  3135,  3141,  3148,  3149,  3134,  2267,     0,
     620,     0,     0,   623,     0,     0,  1968,    13,    10,  1075,
       0,     0,  3020,     0,  2976,  2976,     0,     0,  2981,  2299,
       0,     0,     0,  3018,     0,     0,     0,     0,  3006,     0,
    3007,  3010,     0,  3011,  3012,     0,     0,  3033,  3031,     0,
    3032,  3030,  2963,  2978,  3024,     0,  1047,  1196,  2275,  1195,
    1194,  1190,     0,     0,  1341,  1338,  1332,  1339,  2279,  1899,
     903,  1895,     0,     0,  1852,  1849,  1851,  1305,  1306,  1307,
    1302,     0,     0,  1921,  1993,  1996,     0,  2099,     0,     0,
       0,  2090,  2091,  2092,  2093,  2094,     0,   913,   671,   673,
     680,   679,   681,     0,  1017,  2887,  2886,     0,     0,     0,
       0,  1015,     0,     0,   548,  1969,     0,     0,   548,     0,
       0,     0,     0,   689,  2067,  1968,  1171,  1006,   957,  1266,
     957,  1131,     0,  1006,     0,     0,     0,     0,     0,     0,
    1266,     0,     0,     0,     0,     0,  1266,     0,     0,     0,
       0,     0,  1968,     0,  1140,     0,  1096,     0,     0,     0,
       0,     0,     0,     0,  1141,     0,     0,     0,  1097,  1968,
       0,     0,     0,     0,     0,     0,  1266,     0,     0,     0,
    1266,  1183,     0,  1182,  1181,     0,     0,  1266,  1266,     0,
     721,     0,     0,     0,   717,   718,     0,     0,     0,     0,
    1118,  1119,     0,     0,  1114,  1725,  1115,     0,     0,   685,
    1968,  1968,     0,  1090,  1087,   913,   913,     0,  1968,  3189,
    1076,     0,     0,  1019,     0,     0,  1242,  1283,  1277,  1282,
    1280,  1290,     0,  1775,     0,   348,     0,     0,     0,     0,
       0,     0,     0,     0,   254,   171,     0,  1920,  1264,  1258,
    3050,  3054,   683,   913,     0,     0,     0,     0,     0,     0,
     530,     0,   533,     0,     0,  2985,  2986,  2989,  2990,  2991,
    2992,  2993,  2994,     0,     0,  3029,  1968,     0,     0,     0,
     990,   913,   682,     0,     0,     0,     0,     0,  3079,     0,
    1513,     0,  1614,  1663,  1614,  1614,  1614,     0,     0,     0,
       0,     0,     0,  1514,     0,  1459,  1515,  1516,     0,     0,
       0,  1614,     0,   849,     0,     0,  1462,  1463,  1452,     0,
       0,  1536,     0,  1659,  1464,     0,     0,     0,     0,     0,
    1537,  1691,     0,  1693,  2267,     0,  1614,  1521,  1470,     0,
    1614,     0,  1471,  1538,  1539,  1540,     0,  1542,     0,  1523,
       0,     0,  1526,     0,     0,  1473,  1614,  1614,     0,     0,
       0,     0,  1614,  1475,     0,     0,     0,  1474,     0,     0,
       0,     0,     0,     0,     0,  1477,     0,  1453,  1614,  1614,
    1529,     0,     0,  1531,     0,  1486,  1813,  1614,  1651,     0,
    1591,  1590,  1608,     0,     0,  1608,     0,     0,  1605,     0,
    1592,  1589,  1588,     0,     0,  1614,  1495,     0,     0,  2821,
    2822,  2823,  2841,  1654,  1652,  1443,  1361,  1366,  1359,  1363,
    1368,     0,     0,     0,  1379,     0,     0,     0,     0,     0,
    1371,  1382,  1385,  1555,  1543,     0,  1686,     0,     0,  1159,
    1915,     0,  2067,  1914,   560,   561,   563,     0,  1176,  1175,
    1910,  3195,  1907,  1174,     0,   161,   163,  2124,  2121,  2120,
    2122,   254,  2123,     0,  2132,  2111,  2425,  2731,  2732,     0,
     428,     0,   400,   399,   401,   425,     0,     0,  2916,  3026,
       0,     0,  2967,  2970,     0,     0,     0,  2911,  1812,  2900,
    2896,  2901,  2903,  2899,  2902,  2904,  2897,  2898,  1815,     0,
    1856,  1816,  1724,  3165,  3156,  3157,     0,  3161,  3164,  3170,
    1285,  1286,  1290,  2165,     0,     0,     0,   157,     0,     0,
    2153,     0,  1272,     0,     0,  1240,  1239,  1241,  1234,  1236,
    1237,     0,     0,     0,     0,  2148,   254,  2136,     0,     0,
       0,     0,     0,  1925,     0,  3059,  1318,     0,     0,     0,
       0,  1317,  1319,  1320,  1701,  1700,  1731,  1728,  1727,  1730,
    1729,  1732,  1724,  1809,  1836,  1815,     0,     0,     0,   910,
     912,   909,     0,     0,  2976,  2976,     0,     0,  2856,  2848,
    2850,  2847,  2797,  2303,  2975,     0,  2827,  2828,  2829,  2825,
    2826,     0,  2832,  2830,     0,  2809,  2082,     0,  1856,     0,
    2050,     0,     0,     0,  2023,     0,  2040,  2006,  1856,  2022,
       0,  2020,  2069,  2069,  2019,  1206,  1205,     0,  1209,  1220,
    1971,     0,  1828,     0,  1826,  3143,  3151,     0,     0,     0,
       0,     0,     0,     0,     0,   625,     0,   621,     0,     0,
    1034,     0,  2995,  1041,  1033,  1032,     0,  2980,  3014,  2991,
    1035,  1036,  1037,  2979,     0,  2997,  3016,  2976,     0,  2976,
    2976,  2966,  2965,  2964,  2961,     0,     0,     0,     0,     0,
    1068,  1070,     0,     0,     0,     0,  1044,  1048,  1049,  1337,
    1340,  1333,     0,  2182,  1893,  1334,  1854,  1855,  2261,  1853,
       0,     0,  1809,  2269,     0,     0,     0,  2271,     0,  2103,
    1891,  1892,  1876,  1877,  1875,  1878,  2095,  1879,  1890,  2105,
    1968,   672,  1968,     0,     0,     0,     0,     0,     0,     0,
     329,   340,     0,     0,  2881,     0,   575,     0,     0,     0,
       0,     0,     0,     0,     0,   282,   582,  1025,   688,  1886,
    1888,  1885,  1887,   588,   601,  1889,   602,   599,  1026,   586,
     589,  1027,  3196,   600,   551,     0,   758,  1007,   958,  1006,
    1098,  1006,     0,     0,     0,   957,   761,  1006,     0,   986,
    1007,   757,     0,  1165,  1164,  1166,   759,   759,     0,     0,
       0,  1883,  1884,  1882,  1880,  1881,   700,   695,     0,  1873,
    1874,  1870,  1871,  1869,  1872,   706,  1120,  1255,  1121,  1782,
       0,   697,   698,   699,   719,     0,     0,   708,     0,  1138,
    1139,     0,  1101,  1136,  1137,  1174,   690,     0,     0,     0,
     737,   738,   736,   713,   720,  1168,  1167,  1169,   693,   694,
       0,     0,  1155,  1845,  1852,   726,   701,   725,   696,     0,
       0,     0,  1149,  1109,     0,   735,   733,   730,   732,   731,
     734,   709,   702,   703,   705,   704,   716,   707,  1108,  2131,
     691,   692,     0,   722,   723,     0,     0,  1091,  1170,  1170,
    1126,  1123,  1124,  1089,  1095,  1128,   583,   584,   559,     0,
    1968,  3191,     0,  1078,  1080,  3103,  3104,  1827,     0,     0,
       0,  1778,     0,  1779,  1776,  1777,     0,  1689,     0,     0,
       0,     0,     0,     0,     0,     0,   170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   254,   199,   234,   263,   913,   677,
       0,   564,     0,     0,     0,   272,     0,  1968,  1968,  1968,
    1968,   267,   688,   535,   537,   538,   539,   540,   541,   544,
     542,   545,   543,   546,   547,   559,  2987,  2983,     0,  2984,
       0,  3022,  1067,     0,   995,   997,   996,   992,   991,     0,
       0,  2181,     0,  2180,   757,   257,   604,   606,   609,   607,
     688,   686,   611,     0,     0,   291,     0,   327,  3129,     0,
       0,     0,  1614,  1558,  1615,  1560,  1561,  1566,     0,  1697,
       0,  1449,   861,   861,   845,  1671,   841,   833,   839,  1685,
    1676,  1680,  1683,  1682,  1684,     0,   817,  1679,  1681,   831,
    1667,   845,  1669,  1672,   861,  1677,  1457,     0,     0,     0,
       0,     0,  1614,  1568,  1614,     0,     0,     0,     0,     0,
       0,  1657,     0,     0,     0,  1454,     0,  1547,  1614,  1572,
    1614,  1570,     0,     0,     0,     0,     0,     0,     0,  1576,
    1574,     0,     0,     0,     0,  1614,  1578,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1575,  1577,
       0,     0,     0,     0,     0,  1562,  1622,  1616,  1617,  1618,
    1619,     0,     0,     0,  1606,  1608,     0,  1608,     0,  1593,
       0,  1511,  1614,  1564,     0,  1440,     0,  1377,  1372,     0,
    1381,     0,  1396,  1395,     0,     0,     0,  1554,     0,  2260,
    2268,  1905,  1903,  1161,  1160,  1917,  1932,  2067,  2973,  1902,
     164,     0,  2125,  2118,  2114,  1653,     0,   420,   429,   422,
     426,   427,   423,     0,  3028,  3036,     0,     0,     0,     0,
    1856,     0,  2891,     0,     0,  3155,     0,  1290,  1292,  2171,
    2172,  2173,     0,  2872,  2873,  2871,  2870,  2155,  2154,     0,
    1275,  1276,  1238,     0,  1961,  1960,     0,  1938,  1940,  1949,
    1952,     0,  2142,  2141,  2145,  2144,     0,   397,     0,  2916,
       0,     0,  2905,     0,     0,  1809,     0,  1701,  1731,  1728,
    1727,  1730,     0,     0,     0,     0,  1714,  1722,  1720,  1722,
    1717,     0,     0,     0,  1809,  1827,     0,  1818,  1836,  2794,
    2793,  2792,  1040,  1040,  2786,  2785,  2854,  2853,  2855,  2800,
     688,  2799,     0,  2808,  2084,  2031,  2036,  2035,  1861,  1860,
    2049,  2017,   254,   255,  1815,  2085,     0,  1229,     0,  1225,
    1224,     0,  1211,  1974,  1830,     0,  3154,     5,     0,     0,
       0,     0,   624,     0,   634,     0,     0,     0,     0,  3172,
    2996,     0,     0,  3019,     0,     0,     0,  3004,  2977,  3008,
    3005,  2962,  1073,  1071,  1072,  1074,  1069,  1052,  1051,  1053,
       0,     0,     0,  1066,  1065,  1064,     0,     0,  1031,  1050,
     904,     0,  2190,  1850,     0,  1724,     0,  1815,  1922,  1994,
    1993,     0,     0,     0,   332,   337,   333,   334,   335,     0,
     336,     0,     0,  2884,     0,   585,  1024,   688,   577,   579,
     580,   581,   286,   285,   287,   288,   290,   289,   284,  1030,
       0,   595,     0,     0,     0,     0,     0,  1006,   953,   954,
     760,     0,   755,   762,     0,     0,     0,     0,     0,   743,
     745,   746,     0,   830,   783,   774,   861,   777,   776,   921,
     845,   789,   836,     0,   838,   835,   810,   809,   826,   808,
     813,   797,   921,   921,   796,   829,   921,   814,   812,   816,
       0,   817,   837,   822,   811,   815,   807,     0,   828,   861,
     845,   845,   793,   827,   921,     0,   820,   861,   861,   748,
     865,   795,   928,     0,     0,   861,   863,   841,  1147,  1148,
     994,   993,  1146,     0,     0,  1104,     0,  1105,     0,  1107,
     911,   911,   714,  1112,  1135,  1134,     0,  1113,   715,  1177,
    1103,     0,  1846,  1102,     0,     0,     0,  1235,     0,     0,
    1781,   728,   727,  1029,  3185,  3182,  3183,     0,  3193,  3192,
    3194,     0,     0,     0,   296,  3105,     0,     0,  1289,  1291,
       0,  1278,     0,   173,   174,     0,   175,   176,     0,   177,
     178,     0,   179,   172,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   168,   678,     0,  1968,  1968,   266,   688,   566,
     568,   569,   570,   571,   574,   572,   573,   272,     0,     0,
     271,     0,     0,     0,     0,     0,  2067,   268,     0,     0,
     278,  1047,  3179,  3180,  3181,     0,   610,   258,     0,     0,
     605,   603,   913,   608,     0,     0,  3120,     0,     0,   525,
     524,     0,     0,  1487,  1559,  1698,     0,     0,   862,  1664,
     921,     0,  1674,     0,  1675,   843,   842,   834,   832,  1678,
     840,   818,  1668,  1673,  1670,  1666,  1458,     0,     0,  2256,
    1460,  1451,  1450,  1569,  1567,     0,     0,  1493,  1519,     0,
    1494,     0,     0,     0,     0,     0,  1466,     0,  1469,     0,
       0,  1549,  1573,  1571,  1522,  1541,  1498,  1524,     0,  1472,
    1441,     0,  1499,     0,  1504,  1502,     0,  1579,  1476,     0,
       0,  1483,     0,  1481,     0,  1482,     0,  1484,  1528,  1530,
       0,     0,     0,     0,  1614,  1623,     0,  1624,  1610,  1609,
    1596,     0,  1600,     0,  1597,     0,  1611,     0,  1751,  1565,
    1496,  2842,     0,  1376,  1378,  1374,     0,  1383,  1544,  1163,
    1162,   562,   162,  2116,     0,  2112,     0,     0,     0,     0,
    2915,  2969,  2968,  2971,  3034,  2959,  2892,     0,     0,  1978,
    1980,     0,  3162,  1287,  1290,  1292,     0,  1288,  2174,  2874,
    1273,  1939,  1986,     0,     0,     0,  1956,  2258,  1972,  1957,
    1963,  2149,     0,     0,     0,  1925,     0,     0,     0,  1827,
       0,  1739,  1733,  1735,  1736,  1738,     0,     0,  1701,  1700,
    1321,  1716,  1715,  1723,     0,  1721,  1722,  1722,     0,     0,
    1710,  1709,     0,  1772,  1740,     0,     0,  1831,  1818,  2976,
    2976,     0,  2833,  2032,  2033,  2028,     0,     0,     0,     0,
       0,  1213,  3144,     0,   630,   617,     0,   615,   619,     0,
     612,     0,     0,   628,     0,     0,     0,  2282,  2281,  2998,
       0,  2999,     0,  1056,     0,  1055,  1061,  1058,  1057,     0,
    1046,  1045,     0,     0,     0,     0,  2183,  2185,     0,  1898,
    1815,  1815,  2270,  1991,     0,  2272,  1815,   674,   729,   339,
     338,   344,   345,     0,  2883,  2067,   283,     0,  1100,     0,
       0,   636,     0,     0,     0,   763,     0,     0,  1004,     0,
    1003,  1852,   987,   988,  1130,   757,   748,   782,   775,   794,
     915,   926,   924,   918,   819,   921,     0,   922,   923,   779,
     792,     0,   803,     0,   798,   921,   806,   802,   818,   821,
     823,   825,     0,   921,   791,   790,   800,   786,   850,   787,
       0,  1177,   749,   875,     0,     0,     0,     0,  1408,   869,
       0,   933,     0,     0,   878,     0,  1968,  1968,     0,   886,
     764,   866,   868,   766,     0,   889,     0,   929,   928,   781,
     921,   928,   850,     0,   864,   850,   850,  1144,     0,  1145,
    1177,  1783,  1153,  1152,     0,     0,  1179,  1133,  1844,  1151,
    1150,     0,  1106,   710,  1726,     0,     0,  3187,     0,  3190,
    1042,     0,   307,     0,     0,  1077,     0,   300,   297,   309,
       0,  1252,  1246,  1780,   180,     0,   182,   184,   189,     0,
     191,  2304,     0,   194,     0,   196,  2276,   198,     0,   185,
       0,   235,   252,   253,   202,   240,   228,   239,   229,   242,
     241,   243,   244,   230,   231,   246,   247,   245,   232,   222,
     227,   203,   225,   207,   209,   223,   201,   250,   251,   205,
     206,   221,   208,   210,   211,   212,   215,   216,   219,   220,
     217,   218,   249,   214,   248,   213,   204,   226,   233,   200,
       0,     0,     0,  2067,   270,     0,     0,     0,     0,     0,
       0,   532,   594,   590,   596,   593,   536,  2988,     0,  3003,
    3001,  3002,  1044,  3189,     0,     0,   913,   687,     0,     0,
     349,   741,   742,   740,   739,     0,  3130,   528,   526,   527,
       0,     0,  1699,     0,     0,     0,     0,  1665,     0,     0,
    1446,  1457,  2257,     0,     0,     0,     0,  1660,  1662,  1658,
    1614,     0,     0,     0,     0,     0,  1444,     0,  1545,     0,
       0,     0,     0,     0,     0,  1480,  1478,  1479,   930,  1533,
    1532,     0,  1563,  1620,     0,  1626,  1607,  1595,  1594,     0,
    1608,  1512,     0,  1759,  1760,     0,  1752,  1753,     0,  1373,
       0,     0,     0,   437,   432,   440,   434,   436,   435,   441,
     442,   443,   444,   438,   433,   439,   431,   430,     0,     0,
       0,  3043,  1815,  1978,     0,  1980,     0,  1937,  3159,  3158,
    3160,  1284,  1293,  2176,     0,     0,     0,  1950,  1953,     0,
       0,     0,     0,     0,  2146,   398,     0,     0,  2910,  1926,
    1925,     0,  1741,  1321,  1702,  1718,     0,     0,  1711,  1719,
       0,     0,     0,     0,  1766,  1767,     0,     0,  1770,  1773,
    1774,  1586,     0,  2639,  2262,  1842,  1841,  1819,     0,  1820,
    1831,  2788,  2787,  2801,  1228,  1227,  1226,  1210,     0,     0,
    1215,   618,     0,   616,     0,     0,   614,   622,     0,   629,
       0,     0,  3015,  3000,  3017,     0,  1062,  1063,  1060,     0,
       0,     0,     0,     0,  2184,     0,     0,  2191,  2193,  1992,
    1847,  1847,     0,   578,     0,   639,  1099,     0,     0,   756,
       0,     0,     0,   975,     0,     0,  1000,   744,   747,   917,
     916,   920,     0,   919,   778,   928,     0,  1008,   799,   824,
       0,   801,   854,   855,   856,   788,   851,   853,   935,  1129,
     881,   890,   892,   891,   882,   880,     0,     0,     0,     0,
       0,     0,   897,   872,  2233,   898,  2234,  2230,     0,     0,
     893,   894,   895,   883,   879,   884,     0,     0,   885,     0,
     867,     0,     0,   877,   870,   871,   780,   784,   785,   771,
       0,   772,   773,     0,  1142,  1132,  1116,  1178,     0,  3186,
    3184,  3188,   308,   295,     0,     0,  1079,  1081,     0,     0,
    1082,     0,     0,     0,  1243,  1251,   181,     0,   190,     0,
       0,   195,     0,     0,   186,     0,     0,   236,   238,   964,
     592,   591,   567,     0,   970,   273,   274,   276,     0,     0,
     265,  3191,     0,   259,   256,     0,     0,     0,   350,   352,
       0,     0,   359,     0,  1488,   859,   857,   860,   858,   846,
       0,     0,     0,  1491,  1492,  1520,     0,  1580,  1518,     0,
    1467,  1546,     0,     0,  1525,  1500,  1503,  1501,  1506,  1507,
       0,     0,     0,     0,  1628,  1612,  1613,     0,  1761,  1468,
    1754,     0,     0,  1375,  2117,  2115,  3034,  3037,     0,     0,
    2912,  1856,  1980,  1827,  1935,     0,     0,  2178,  2175,  1985,
    1987,  1951,  1954,  1955,  1970,  1962,  2150,  1925,     0,  2906,
       0,  1734,  1713,  1712,  1705,     0,  1707,     0,  1762,  1762,
    1771,     0,  1737,     0,     0,  1843,     0,  1837,     0,  1832,
    1833,     0,  1314,  1820,  1212,     0,     0,  1199,   631,     0,
     621,   635,   613,  3176,  2982,  1054,  1059,  2188,  2189,     0,
    2186,     0,     0,  2192,  1867,  1867,     0,   964,     0,   659,
     637,   970,     0,   999,   975,  1852,     0,  1968,  1968,  1968,
     750,   976,   977,   979,   980,   983,  1002,     0,   927,   925,
     921,     0,   921,   852,     0,   939,  2232,  2231,     0,   874,
     876,   887,   888,   881,   767,     0,     0,  1111,  1117,     0,
     293,   298,   299,   310,   311,  1023,  3108,  3106,     0,     0,
       0,     0,  1248,   183,   192,   193,   197,     0,     0,   224,
       0,     0,  1159,   965,   966,   968,     0,  1159,   971,   972,
     974,     0,     0,   261,   975,     0,   305,  3121,     0,   911,
    3119,   362,   360,   361,     0,   355,   357,     0,     0,     0,
    1447,     0,  1661,     0,  1548,  1550,   931,     0,  1625,     0,
    1649,  1648,  1650,  1621,     0,  1598,     0,  1758,  1757,  3043,
    3035,  3038,  2893,  1936,  1979,     0,     0,     0,  2179,  2909,
    1925,     0,     0,     0,     0,     0,     0,     0,  1581,  1582,
       0,     0,     0,  1840,     0,     0,  1821,  1313,  1214,     0,
     254,     0,     0,     0,     0,  3173,  3174,  2187,  2195,  2194,
       0,  1990,  1982,  2885,   751,     0,     0,  1968,     0,     0,
    1968,  1968,  1968,  1968,   654,   660,   662,     0,   752,     0,
       0,   753,  1005,   982,     0,     0,     0,   978,  1852,   804,
    1009,   805,     0,   938,     0,   943,   873,     0,  1143,  1110,
     301,  1083,   464,     0,  3107,  1249,  1247,  1245,  1244,     0,
       0,   237,     0,   280,   967,   269,   281,   973,     0,  1159,
    3118,   296,   306,     0,   351,   353,  3131,   359,     0,     0,
     844,   845,  1465,  1534,  1627,     0,     0,     0,     0,  1643,
    1630,  1631,     0,     0,  2914,     0,  3044,     0,     0,     0,
    2908,     0,  1809,  1706,  1708,     0,  1763,     0,  1775,     0,
       0,  1839,  1838,  1835,  1834,  1216,  1200,     0,     0,  1968,
       0,  3177,  1868,   648,   641,   644,     0,     0,  1968,  1968,
       0,     0,     0,     0,     0,   638,   661,  1968,   754,   998,
     981,   984,   985,  1001,   936,     0,   940,   941,   942,     0,
     934,     0,     0,   303,   490,  2399,   476,   462,     0,     0,
    2565,   466,   312,   315,   313,  1983,   314,   320,     0,   321,
     322,   323,   324,   325,   316,   488,   489,   319,   317,   318,
       0,  2288,     0,  2289,  2349,  2348,  2350,     0,     0,     0,
     187,     0,   969,   275,   279,   309,     0,   330,   356,   911,
       0,     0,     0,     0,  1638,     0,     0,     0,  1636,     0,
    1632,     0,  1629,  1634,  1633,     0,  1981,  2177,     0,  2549,
       0,  1744,     0,  1742,  1765,  1764,     0,     0,     0,     0,
    1585,  1583,   632,     0,     0,  3178,   648,     0,   646,     0,
     642,   640,   643,   670,     0,     0,   666,   667,   665,   663,
       0,     0,   656,     0,   937,     0,     0,   768,   302,     0,
     294,     0,     0,   475,   478,     0,     0,   481,   471,   470,
     472,     0,   465,   464,   464,   518,   469,   515,   514,   507,
       0,  3109,     0,     0,     0,   911,  3132,   358,  3114,  1448,
       0,  1639,     0,  1641,  1640,     0,     0,  1645,     0,  1646,
    2796,  3042,  3041,  3039,  1724,     0,  1743,     0,     0,   911,
    1769,  1768,  1584,  1587,     0,   626,   632,  3176,   645,     0,
     652,     0,   650,   653,   668,   669,   659,   655,     0,   664,
     949,     0,   948,     0,   945,   944,   770,   769,   865,   304,
     491,   502,   505,   497,   477,     0,     0,     0,   467,   464,
       0,   451,   449,   450,   456,   457,   458,   459,   460,   461,
     452,   455,   453,   454,   464,     0,   367,     0,     0,  3110,
    3111,   188,   311,  3122,   342,   341,   331,     0,   464,  3112,
    3113,     0,  3116,     0,  1637,  1635,  1644,  1647,  3040,   903,
       0,  1745,  1746,  1749,   633,   627,  3175,   647,   649,     0,
     658,   657,   951,   952,   950,     0,     0,   765,     0,     0,
     464,   498,     0,   473,     0,   482,     0,     0,   365,   521,
     519,   363,   509,   509,   292,   330,   343,     0,  3128,  3133,
    3115,   464,  1642,  2216,  1748,  1750,     0,   651,     0,     0,
     499,   505,   495,   503,   464,     0,     0,   463,     0,   517,
     366,     0,     0,     0,   464,     0,   508,   510,   512,  3123,
    3126,  3125,  3127,  3117,     0,  2196,     0,   947,   946,     0,
     496,     0,     0,   494,   474,   479,   464,   522,   464,   376,
     375,     0,     0,   445,   516,     0,   368,   464,     0,     0,
    2182,  1751,   500,     0,   464,     0,   464,     0,   464,     0,
       0,   911,     0,     0,   364,  3124,  2217,     0,  2190,  1755,
    1747,  1753,     0,   492,   464,   480,   485,     0,     0,   371,
     446,   447,     0,   373,     0,  2198,  1756,     0,   464,   464,
     481,   484,   523,   520,     0,     0,   369,   370,   381,   380,
       0,  2197,     0,  2202,     0,   464,   464,   486,   389,   387,
     464,   377,   385,   379,     0,   386,   448,   374,     0,     0,
    2209,     0,   372,   388,  2200,  2201,  2199,  2204,     0,     0,
    2206,  2207,     0,  2218,   378,  2208,  2203,     0,  2210,  2212,
       0,     0,  2220,  2205,     0,     0,     0,     0,  2214,  2211,
    2213,  2219,     0,     0,  2161,  2221,     0,  2215
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4795, -4795, -4795, -4795, -4795, -4795, -1061, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,  1656, -4795, -4795, -4795, -4795,
   -4795, -4795,  1908,  1918, -4795, -4109, -4795, -4795,  1919, -4795,
     450,  1909, -4795,   449, -4795,  1274, -4795,   242, -4795, -4795,
   -4795, -4795, -2795, -1578, -4795, -4795, -4795, -4795, -4795, -4795,
    1266, -4795, -4795,   442,  1464,  3942, -4795,   447, -4795,    97,
   -4795, -4795, -4795, -3988,   -24,  -196, -4795, -4795,    50,  3447,
    -244, -4794, -4795, -4795, -4795, -4795, -4795, -4795,   244, -4795,
   -4795,   113, -4795, -4795, -1272, -4795, -4795, -4795, -4795, -4795,
   -4795,  -374,  -331,  2504, -4795, -4795, -4795,  5136, -4795,  4112,
   -4795, -2706,  2315, -4795, -4795, -4795, -4795, -4795,  2380, -2644,
   -4795, -4795, -4795,  1150, -4795, -4795, -4795,  -256,   149, -4795,
     154, -4795,   162, -4795,   163, -4795,   164,   167,   168,   169,
   -4795,   171, -4795, -4795,  -330, -4795, -4795, -4795, -4795,   173,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,  -242, -4795, -4795,
    -138, -4795, -4795,  -236,   174, -4795,  -216,   175, -4795,   176,
   -4795,  -159, -4795,  -157, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795,  1305,  2755,  4031,  2766, -1446, -4795,
    1742, -4795, -4795,   849, -4795, -4795,  1048, -1528, -4795,  2639,
   -2472, -2455, -1124, -2451, -4795, -4795, -4795, -3125, -3112, -1362,
   -4795, -1349, -2450, -2441, -2408,   829,  1896,  1898,  1895,    31,
   -4795,  1101,   401, -4795, -4795, -4795, -3501,   -73, -4795, -3789,
     638, -4795, -4795, -4795, -4795, -3171, -4795, -4795,  -153, -4795,
   -4795,   -79,   -76, -4795,   226, -4795,  2816, -4795, -4795, -2329,
    -611,  2697, -4795, -1922, -1769, -2346, -1586, -1583, -4795, -4795,
   -4795,   846,  1927,  1050, -4795,  1056, -1617,   998, -3662, -4795,
   -4795,  -772, -2872, -4795, -4795, -4446, -4795, -2496,  1522, -4795,
   -4795, -2440, -4795, -4795, -4795,  1487,  1491, -3274,  1893, -1559,
   -4795,   632,    37,  -416, -4795,   -67, -4795,  1011, -4795, -4795,
   -3480, -4795,   -41, -2553,  -116, -4795, -4795, -3080, -3620, -1581,
   -4795, -4795, -3309, -2996,  1827, -4795, -4795,   248, -4795, -4795,
   -4795, -4795, -4122, -4795, -1642, -2190, -4795, -4795,   418, -4795,
     353,   417, -4795,   352, -4320, -4795,   408, -1875,  2176, -4795,
    3401, -3042, -2431, -4795, -3898, -2677,   667, -2269,  1059, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -1549, -4795, -4795,   890,
    1384, -4795,  2279,  1976, -4795,  2289, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795,  2744, -4795,   616, -1199,  2748,
   -4795,  2750,   346, -2830, -1131, -4795, -1106, -4795, -1601,  3600,
   -2349, -3684, -4795, -4795, -4795, -4795, -4795,  3630, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,  2978, -4795,
   -4795, -4795, -4795,  4222, -4795,  2980, -4795, -4795, -4795, -4795,
   -4795,  1505, -4795,  2445, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795,  2178,  3449, -4795, -4795,    48, -4795, -4795, -4795, -4795,
    2454, -4795, -4795,  3484,  2083, -4795, -4795,  1804,  2470, -1764,
    1258, -1687,  5251,     1,    -3,    24, -4795, -4795,  3103, -4795,
   -4795, -2188, -4795, -4795, -4795, -4795,  4322,   803,  -966, -4795,
   -4795,  2922, -4795,  4348,  3976,  3231,   483,  4416, -4795, -1282,
   -4795,   -21, -4795, -4795,  -864, -4795, -4795, -4795,  -690,   898,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795,  2557, -4795, -4795, -4795, -4795, -4795, -4795,  3302,  2601,
   -4795, -4795, -2622, -4795, -2392, -1917, -4795, -2459,   341, -4795,
   -4795, -4795, -4795, -4795, -4795,   373, -4795,    46, -4795, -4795,
   -4795, -4795, -2064, -4795, -4795, -4795, -4795, -1051, -2506, -1130,
   -1166, -4795,  4070, -4795, -4795, -4795, -2962, -4795, -2641, -4795,
   -4795, -4795, -4795, -3222, -1779, -4795, -1291,  2453,  2455,  2457,
    2460, -4795, -4795,   -49, -4795,    36, -4795,  -144, -4795,  -161,
   -4288, -4287,   532, -4795,   804, -4795, -4795, -4795,   249,  1524,
     243, -2378, -2436, -1241,  1618, -4795, -4795, -2132,  4113, -2140,
   -2057,  1240,   526,    14,  4260,  3741, -3110, -4795,   802, -4795,
     369,  1785, -2394, -4795, -4795,  1566, -1135, -4795,   413, -3082,
   -4795, -1036, -4795, -4795, -2855,   518, -2222, -2760, -2277, -2515,
   -2391, -4795, -4795,  2959,  -266, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795,  -554,   -69,  -120, -3879,  5350,  3269, -4795,
    2595,  3666,  3668, -4795, -4795,  3929,  1870,  1872, -4795, -3648,
   -2516, -4795, -4795, -4795, -1006,  4145,   864,  3770,  1310,  1878,
   -2914,   887, -4057,  3678, -4795, -3527,   876,  4230,  3679, -3153,
    3700, -4795, -4795, -4795, -4795, -4795,  3085, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795,   -40, -1315, -4795, -4795, -4795,  1520,
    3815,  3096,  -981, -4795, -4795, -4795, -4795,  4231, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,  2603,
    2211, -4795, -4795, -4795, -4795, -4795,  3210, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795,   617,   -77, -4795,
    1249,   -92, -4795,   820, -4795, -4795, -4795, -4795, -4795,  -156,
   -4795, -4795,  -164, -4795, -4795, -4795, -4795, -2699, -1156, -1316,
     950,  1146, -3021, -2241, -2062, -3699, -1185, -4795, -4795,   905,
   -4795, -2927,   601,  -757, -1286, -1289,   110,  2395,  3359, -1460,
   -4795,  4418,  -860, -1651, -2054,   851,  4081,    -6, -4795, -3335,
   -4795,  3439,   106,  1588,    11,  3188, -3644, -4795,    30,    73,
   -4795,   808,   348, -4795, -4795,   805, -4795, -4795, -4795,   139,
   -4795, -4795, -4795, -4795,  3903, -4795,  2507,  5389, -4795, -4795,
   -4795,  3192,  5391,  -954, -4795,  3920,  3208, -4795,  3213, -4795,
   -4795, -4795, -2120, -4795, -4795,   155, -4795,  2602, -4795, -4795,
   -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795, -4795,
   -4795, -4795, -4795, -2074,  3969,  4443,  3999, -4795, -4795,  2462,
   -4795, -2728, -1408, -1197, -1467, -4795,  4349,  2845,  2854, -2236,
   -1081, -1078,  -977, -1087,  -984,  -978, -4795,  3790, -1564, -4795,
   -4795,  1999, -4795,  2846,   676, -4795, -4795,   500, -4795, -4795,
    1589,  4458,  3974, -4795, -4795, -4795, -4795, -4795,  1946, -4795,
     -29,     9, -4795,  -345, -4795, -4795, -4795,   264,  5449,  5450,
   -4795, -4795,   201, -4795,  -829, -4795, -4795, -4795, -4795, -4795,
    4249, -4795, -4795,  4250, -4795, -4795, -4795, -4795, -4795,   -14,
    4251, -4795, -4795, -4795, -4795, -4795, -4795,  1578, -4795, -4795,
   -4795, -4795, -4795, -4795,  1962, -4795, -4795, -4795, -4795,  -633,
   -4795, -4795, -4795,   170, -4795,  1564, -4795,  1183, -4795,  1077,
     750,  1663, -2477
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    65,    66,  1121,  2348,    67,    68,    69,    70,    71,
    2176,    72,  1408,  2118,  2785,  2786,    73,   959,    74,  2576,
    1838,  2574,  2575,  3823,  4305,  4306,  3832,  4320,  3826,  4309,
    4310,  3829,  4314,  4315,  3274,  3275,  4706,  4707,  4326,  4333,
    4338,  4363,  3276,  2305,    75,    76,    77,    78,  2583,    79,
    3890,  2605,    80,  3064,  3065,  1881,  3915,  4295,  5040,  4299,
    5143,  5250,  5061,  3213,  4690,  5041,  5042,  5152,  3336,  2434,
    5276,  3050,  5366,  3051,    81,  1190,  4727,  4728,  4729,  4934,
    4935,  4936,  4937,  5444,  5339,  5411,  5445,  5524,  5530,  5471,
    5540,  5541,  5542,  5528,  1474,  5543,    82,   991,   992,  1476,
    2205,  2800,  2206,    83,    84,   921,  2136,  2137,  2138,  2139,
    3492,  2801,  3487,  3488,  4486,  5472,  5526,  5340,  5341,  5257,
    5342,  5155,  5343,  5261,  5344,  5158,  5345,  5346,  5347,  5348,
    5436,  5349,  5256,  5464,  5336,  5337,  5438,  5506,  5521,  5350,
    5165,  5251,  5398,  5166,  5252,  5431,  5332,  5432,  5459,  5502,
    5333,  5399,  5462,  5402,  5351,  5357,  5446,  5352,  5358,  5353,
    5170,  5268,  5356,  5266,  5355,  5442,  5441,  5487,  3921,  4410,
    1867,  2592,  3291,  3292,  3293,  3067,  3068,  1733,  2773,  2774,
    2775,  3877,  3878,  3879,  3676,  3677,  3678,  2444,  3208,  3056,
    1734,  1735,  1801,  1737,  3297,  3881,  3882,  3298,  3299,  1738,
    3301,  1739,  1740,  1741,  3073,  3325,  3326,  3327,  3328,  3329,
    2343,  2344,  3617,  2965,  3614,  4568,  4123,  5305,  4130,  4180,
    4181,  4849,  5231,  5114,  5227,  5115,  5229,  5311,  5312,  5125,
    5241,  5242,  5014,  5015,  5016,  2427,  2428,  3277,  3278,  2429,
    1200,  1802,  3330,  2454,  1803,  3166,  1804,  1805,  2432,  3181,
    3153,  4405,  3708,  3709,  3710,  4231,  3711,  3096,  2462,  3701,
    3702,  4249,  3759,  4662,  5328,  3760,  3761,  3762,  3763,  3764,
    3765,  3766,  3938,  3767,  3939,  3934,  3935,  3932,  1238,  4625,
    4626,  4627,  3928,  3929,  4265,  4250,  4251,  4252,  4634,  4653,
     865,  4643,  4206,  1492,  3013,  1515,  1516,  2900,  2223,  1806,
    4207,  4208,  4209,  4259,  4001,  4760,  4254,  4232,  4875,  5032,
    5035,  5140,  5324,  3097,  1831,  3089,  1585,   736,  4912,  4913,
    4914,  4917,  4918,  4919,  4860,  4861,  4862,  4863,  3098,  2609,
    4864,  4865,  3317,  4852,  4188,  4189,  4190,  3099,  4616,    85,
      86,  1711,    87,  1720,    88,  1713,    89,  1824,  1182,    90,
    2550,    91,    92,    93,    94,    95,  2354,    96,    97,  3648,
    3006,  3007,  3008,  2386,  3000,  3001,  1126,  3214,  3814,  4895,
    1164,  1807,  1808,  2544,  1809,  1810,  4887,  1811,  3127,  1812,
    1813,  1814,  1815,  3472,  3473,  3104,  3474,  3156,  2464,  1445,
    2780,  4277,  2516,    98,    99,  1137,  1138,  1139,  1140,  1141,
    1142,   100,   101,  2316,  4990,   102,  1593,  1594,  1595,  3602,
    4121,  4560,  4827,  1598,  1599,  1600,  2948,  3600,   103,  1843,
     104,  2858,  2859,  2860,   105,  4902,  4694,  4695,  2556,   106,
     107,  1850,  1851,  1852,   108,   239,   109,  1463,  1461,  2181,
    2182,   110,  1186,  1187,  2558,   111,  2840,  2841,  1832,  1833,
    4057,   112,   113,  1334,   115,   866,   117,   118,  2215,  2216,
    2881,  2882,   119,   120,  1007,  1008,  1009,  1146,  1147,  1671,
    2395,  2396,  2397,   867,   868,  1348,  1235,  1834,   870,   871,
    2071,   872,  1349,  1350,  4256,   873,  1361,  2059,   874,  3947,
     875,   876,  4018,   877,   878,   879,  3970,  3971,  4438,  2091,
    2092,  2093,   880,   881,  4980,  5219,  4812,   882,  2724,  2024,
    2025,  4012,  3443,  4460,  3343,  3344,  3437,  4818,  3439,  4006,
    4007,  4455,  4764,  4953,  5079,  5194,  5081,  5195,  5202,  4954,
     883,   884,   885,  1955,  3963,  3391,  4427,  1900,  3376,  1835,
    1836,  1260,  1261,  1226,  2630,  1906,  2883,  4087,  2884,  3561,
    3562,  3563,  4098,  4094,  2534,  2535,  2885,  2886,  2887,  2888,
    2889,  2890,  2891,  4972,  5210,  5211,  5426,  4465,  5500,  4466,
    4467,  4468,  4976,  4537,  4538,  4539,  4540,  4541,  3222,  3223,
    3224,  3799,  3128,  1945,  1946,  1953,  2154,  2155,  1901,  2830,
    1532,  4107,  4822,  1117,  1092,  1093,  1611,  2326,  4549,  4819,
    4820,  3567,  4545,  4817,  3162,  3163,  1153,  1154,  2405,  3018,
    3019,  1548,  1549,  2284,  2285,  5001,  3167,  3036,  3116,  3074,
    3037,  3038,  1675,  1676,  1148,  1677,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,  2794,  2412,   995,  3542,   737,  2106,  2107,
    2108,   139,   140,   964,   985,  1466,  3527,  3528,  4065,  3529,
    1118,  3531,  4069,  1089,  2445,  2446,  4070,  1090,  2321,  2322,
    2323,  4495,  4497,   141,   142,  4061,  4062,   986,   143,  3027,
    1694,  1695,   144,  1082,  1570,  1571,  1572,  2300,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,  1545,  1742,  1552,  1069,  1070,  1071,  1553,
    2266,  2928,  1533,   190,   191,  1703,   192,  1160,  1161,  1701,
    1704,  1705,   193,  1409,  2130,  3484,  4035,  4471,  2131,  2132,
    2795,   194,   988,  1471,  1468,  2187,  1472,  2190,  4071,  2866,
    4514,   195,   978,  1459,  2850,   196,   969,   197,   198,   973,
    2844,  2169,  1453,  3512,  4503,  4787,  4967,  3333,  3652,  4156,
    4157,  4159,  4587,  4588,  5480,  5533,  5556,  5550,  5559,  5560,
    5563,  5568,  5569,  5584,  5455,  5572,  5578,   886,  1614,   887,
    4644,  4645,   888,   889,   890,   891,   892,   893,  4423,  4066,
     894,  2406,  4546,   895,  4063,   896,  2892,  2413,   708,  4316,
    4317,  1127,  1615,  2399,  2228,  4139,  1351,  1104,   949,  5172,
    1027,  1129,  1507,  1130,  2111,  1508,  2814,   710,   711,   712,
    5173,   713,   714,   953,  1032,   715,   199,  1033,   200,  2237,
     201,  3580,  3581,  1521,  1525,  2252,  2253,  2254,  1072,  2042,
    2246,  1522,  2255,  1036,  2743,  1500,  1501,  2235,  1502,  2233,
    1503,  2909,  2263,   202,  1455,   719,  2172,  2173,  3515,   203,
    1086,   204,   205,   206,  1172,   207,  2159,  2828,  2829,   208,
    2871,   209,  2141,  2150,  1412,   955,   956,  2817,  2995,  2381,
    2382,  2815,  2112,  1509,  2368,  1654,  1643,  1870,  2595,  2596,
    2597,  2598,  2979,  2600,  2601,  2602,  3309,  1132,  1646,  1871,
    1133,  1423,  2144,  1664,  4491,  4040,  5086,  4780,   210,   240,
     722,  1198,  1857,  2212,   211,   212,   213,   214,  1686,   899,
    2893,   900,  1010,  1214,   738,  1890,  1882,   233,   234,   235,
     741,   742,   236,  1822,  1823,  4300,  4897,  5044,  5371,  5372,
    1884,  5421,  1885,  1886,  4400,  5063,  5415,  5477,  5452,  5419,
    1887,  3918,  4732,  5187,  5368,   215,  1620,  1616,  1102,  2337,
    2331,  2333,  2836,  4500,  2837,  2838,  2166,   216,   217,  1448,
     218,   219,  4995,  4996,  3904,  2549,  3805,  3806,  4289,  3211,
    3810,  2782,  3083
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     709,   114,  1025,  1067,  1068,  1577,  1706,  2026,  1382,   898,
    1493,  1497,   917,  1872,   121,  1960,   958,  2421,  2006,  2536,
    1690,  2005,  2400,  2318,   116,   977,  1387,  1575,  2151,  1262,
    1526,  1109,   993,  2539,  3451,   997,  1103,  3603,  2104,  2845,
     993,  3079,  3080,  1080,  1659,  1644,  1816,  1087,  1645,  1094,
    1656,  2105,  1736,  1657,  3142,  3075,   707,  1221,  3075,  3075,
    3193,  3194,  1543,  1909,  1910,  1115,  3772,   918,  2564,  1110,
    2802,  1817,  2803,  1028,  3285,  2894,  3588,  3589,   976,  2058,
    1523,  3379,  3792,   982,  2360,  3380,  1578,  2363,  1116,  2365,
    1107,  1128,  1962,  3653,   951,  3332,  2355,  3943,  4248,  2720,
    2721,  2463,  2831,  3446,  1975,  1976,  1977,  3815,  1131,  4126,
    1979,  1179,  2730,  2731,  2732,  3801,  1029,  1689,  1155,  1948,
    3294,  2492,  1209,  1210,  2978,  2430,  2461,   950,  2431,  2986,
    2433,  2923,   957,  3381,  4166,  3374,  2874,  3295,  2027,  2515,
    4253,  3296,  3303,  3374,  2469,   116,  3543,  1660,  2473,  2015,
    4345,  3304,  3599,  1661,  1658,  3579,  3883,  3486,  2831,  1079,
    4272,  4273,  2493,  3537,   720,  1194,  1196,  1330,  1331,  3884,
    1332,  1902,  1903,  1904,  2505,  3182,  3183,  3318,  4770,  4771,
    1680,  4312,  1914,  1383,   975,  2772,  1080,  4494,  3086,   981,
    2370,  3375,  2371,  2373,  2374,  3117,  4518,  2448,  3075,  3375,
    4257,  1384,  1341,  1342,  3612,  2387,  2389,  2390,  2114,  4703,
    2778,  2153,   743,  1968,  3016,  1165,  1972,   709,  1384,  1384,
     709,  1128,  1176,  1080,  3154,  2960,  3158,  3159,  3028,  2962,
    1469,  2286,  3345,  3346,  3347,  1989,  1990,  1080,  3547,  1994,
     768,  1341,  1342,  2293,  3644,  3645,  1439,  1341,  1342,  3383,
    2304,  3002,  3125,  2603,  3279,  1844,  3475,  2008,  2009,  2303,
    3438,  3137,  2013,  2014, -1028, -1930,  2306,  1759,  1341,  1342,
    3091,  2855,  2309,  1167,  3399, -2317,  1174,  2034,  3401,  2554,
    1341,  1342,  1759,  3646,  4929,  2351,  3024,  2153,  3789,  2220,
    1341,  1342,  2153,  2712,  3409,  3410,  2304,  2972, -1013,  2973,
    3416,  3185,  1162,  1341,  1342,  3187,   773,  4686,  1840,  2848,
    1341,  1342,  2987,  -675,  1826,  2989,  3428,  3429,  2990,  1341,
    1342,  4957,  4931,  3017,  1759,  3435,  1341,  1342,  1341,  1342,
    2209,  3541,  4932,  1341,  1342,  1858,  1197,  4099,  2590,  1177,
    4565,  1341,  1342,  3453,  2628,  3530, -1811,  1074,  4218,  1341,
    1342,  1341,  1342,  1188,  5286,  -676,  1527,  4576,  3306,  -549,
    1341,  1342,  3092, -2138,  1077,  3390,  -688, -2894,  4335,   952,
    3779,  5400,  1845,  -534,  1341,  1342,  1846,  2375, -2802,  4971,
    3075,  1300,  1341,  1342,  -576,  1883,  1891,   919,  2351, -2076,
    1847,  1031,  1341,  1342,  1184,  1215,  1088,  5230,  2994,  4281,
    1662,  1341,  1342,  -565,  1427,  3576,  2861,  1917,   785,  2214,
    4287,  3693,  3773,  3917, -2067,  3700,  4507,  1341,  1342,   967,
    4993,  1490, -1811,  4212,  4216,  4143,  4891,  4217,  1853,  3637,
    2230,   241,  1341,  1342,  3479,  4610,  1530,   994,  4784,  2898,
    1341,  1342,  1640,  2312, -2960,  4226,  4210,  2704,  1728, -2895,
    3321,  1604,  3513,  1341,  1342,  4104,  3983,  1744,  1144,  3650,
    2594,  3509,  1531,  5287,  1341,  1342,  1341,  1342,  4268,   970,
     241,  2335,  5263,  1039,  1012,  4933,  4224,  4225,  2278,  1531,
    5110,  3150,  5365,  2227,  1684,  3016,  1898, -2894,  1924,  2689,
     801,  3093,  3433,  2055,  1341,  1342,  1430,  4293,  1341,  1342,
    1183,  4978,  1262,  1386, -2077,  1596,  2247,  4165,  1855,  3490,
    2210,  1341,  1342,  1485,   802,  1341,  1342,  2251,  1385,  3016,
    4856,  4493,  2906,  2856,  1586,  1669,  1848,  5254,  2088,  2089,
    3431,  1550,  1641,  4275,  5021,  1385,  1385,  4765,  4200,  5400,
    2279,  5554, -1811,  2907,  2419,  4144,   367,  4629,   369,   717,
    4201,  1143,   718,  1612,  1341,  1342,  1555,  3432,  1341,  1342,
    1841,  3151,   241,  1301,  4202,  2420,  1156,  4856,  2376, -2895,
    1344,  2288,   716,  1345,  2426,  2291,  1039,  1012,  1134,  2295,
    1559,  1363,  3781,  1551,  3679,  2908,  4675,  1856,  4903,  4248,
    4086,  4090,  1597,   971,  3017,  3586,  1341,  1342,   980,  4979,
    4101,  4102,  1875,  1205,  5059,  5245,  2834,  2310,  2311,  1344,
    1440,  1685,  1345,  1899,  2192,  1344, -2317,  4766,  1345,  5288,
    3491,  4417,  5189,   243,  1849,  1061,  3441,  2779,  3017,  1554,
    1825,  1670,  4569,  4200,  5264, -2960,  1344,  2032,  4204,  1345,
    4294,  4799,  1145,  3802,  2971,  4201,  5111,  4033,  1344,  3003,
    3584,  1345,  -688, -1811,  2410,  5365,  3553,  4336,  1344,  4202,
    4145,  1345,  3514,  3152,  1341,  1342, -1811,  1680,  4892,  1652,
    2267,  1039,  1012,  4505,  3323,  2064,  1642,  2904,  1344,  2905,
    4407,  1345,  3320,  2336,  4313,  2239,  1949,  1344,  3500,  1950,
    1345,  3546,  5255,  2231,  1344,  2087,  1344,  1345,  2931,  1345,
    2778,  1344,  4853, -1811,  1345,  4857,  2313,  2857,  1730,  1344,
    4276,   828,  1345,  1080,  1080,  3094,  1680,  1344,  4255,  1344,
    1345,  1128,  1345,  1207,  3811,  4963,  2175,  1075,  1344,  5450,
    1772,  1345,  4269,  2280,  3493,  1613,  1307,  3796,  2104,  1854,
    5275,  1246,  1344,  2555,  5555,  1345,  3618,  2640,  2776,  3638,
    1344,  2105,  4857,  1345,  -688,  3568,  3800,  4642,  4534,   968,
    1344,  3565,  1491,  1345,  1663,  4038,  5299,  3887,  3774,  1344,
    1191,  2831,  1345,  4994,  3632,  3633,  3634,  3635,  -759,  1110,
    1263,  1392,  1393,  1394,  1366,  1344,  1397,  1398,  1345,  2653,
    1401,  4408,  1403,  1404,  1405,  1531,  3785,  4535,  5049,  5050,
    1344,  2873,  1061,  1345,  3906,  2802,  2566,  2803,  1344,  3880,
    2161,  1345,  3449,  3332,  3332,  5265,  3088,  3332,  3088,   920,
    3692,  1344,  3695,  4013,  1345,  4015,   954,  2629,  4337,  1195,
    1195,  1347,  1344,  3694,  1344,  1345,  3657,  1345,  2831,  3686,
    4196,  2430,  3331,  2638,  2431, -2894,  2433,  1428,  2621,  3573,
    2113,  1030,  3477,  4288,  5331,  1135,  1128,  4958,  1339,  1918,
    2849,  4791,  1344,  1352,  2379,  1345,  1344,  1467,  1528,  1345,
    1347,  1895,  2738,  2364,  4526,  4527,  1347,  1386, -2076,  1344,
    1681,  4148,  1345,  1344,  3235,  1335,  1345,  2974,  2975,  4889,
    3655,  3075,  2599,  1827,  5226,  1076,  4614,  1347,  1395,  1481,
   -1811,  3095,  2174,  1400,  4270,  3699,  4618,  -354,  4219,  1347,
    2184,  4088,  1078, -1811,  4621,  1302,  2665,  3025,  4969,  1347,
    2669,  3577,  1344,  1842,  2270,  1345,  1344, -2895,  2777,  1345,
    3871, -2960,  1347,  4178, -1028, -1930,  2453,  2453,  5062,  1347,
    4876,  4877,  2691,  1217, -2317,  5218,  5289,  1470,  1347,  3873,
    3924,  4667,  3647,  1128,  4577,  1347,  2604,  1347,  2733,  1446,
    1842,  1437,  1347,  1842,  1344,  1341,  1342,  1345, -1013,  4522,
    1347,  4016,  4023,  1460,  1128,  2961,  4719,  4005,  1347,  2963,
    1347,  3778,  2734,  -675,  3004,  3005,  1842,  3530,  3927,  1347,
    3953,  1462,  3954, -2077,  4505,  2553,  3236,  2430,  3770,  3771,
    2431,   898,  2433,  1347,   972,  1216,  3972,  1441,  3973,  4165,
    1128,  1347,  4611,  1587,  1431,  4605, -1811,  2745,  1128,  1128,
    3510,  1347,  5430,  3987,  1842,  -676,  5491,  3511,  1556,  -549,
    1347,  2453,  1344, -2138,  4428,  1345,  2453, -2894,  1128,  2912,
    1340,  1341,  1342,  -534,  1157,  2453,  1347,  2037, -2802,  2835,
    2453,  2038,  1560,  3503,  -576,  4312,  2453,  2639,  1341,  1342,
    4019,  1347,  3587,  1136,  1028,  3305,  2618,   114,   951,  1347,
    1680,  1407,  5273,  -565,  2705,  2453,  1080,  1603,  3508,  4911,
     121,  4334,  1347,  5246,  1206,  1094,  3984,  1386,  3442,  4034,
     116,  5090, -1811,  1347,   951,  1347,  2713,  2164,  3770,  3771,
    2714,   950,  1341,  1342,  1341,  1342,  1388,  1029,  2453,  4606,
    4368,  1341,  1342,  3564,  1155,  4203,  1637,  2779,  4523, -2895,
    2690,  1435,  5129,  1347,  5325,  2037,  5369,  1347,  1363,  2657,
    3812,  1456,  1116,   960,  2620,  4385,  2619,  1464,  1128,  2693,
    1347,   116,  4815,  2694,  1347,  3770,  3771,  2710,  3377,  1951,
    2932,  2711,  1952,    42,  4630,  2736,  1707,  3458,  4409,  2737,
    1128,  3459,  1714,  1715,  2982,  1128,  3958,  1719,  4879,  1192,
    3959,  4362,  1818,  2955,  1819,   709,  4137,  1712,  1080,  4536,
    3966,  2485,   237,  1347,  3967,  1837,   721,  1347,  2633,  3808,
    4858,  4859,  1602,  5501,  1859,  1860,  1861,  4370,  2637,  1864,
     983,   979,  1868,  1128,  3809,  1873,  1874,  3985,  2663,  4255,
    4203,  3986,  4376,  3482,  5517,  2855,  4646,  2217,  2006,  2903,
    1869,  3164,  3902,  4025,  2966,  1347,    49,  4026,  1341,  1342,
    3300,  1820,  1106,  4856,  3639,  4204,  4434,  4858,  4859,  1263,
    4448,  1605,  2644,  3302,  1236, -2067,   987,  4646,  3883,  3111,
    2645,  1691,  4829,  1263,  2589,  5083,  1980,  1378,  1379,  1380,
    1381,  3884,  4666,  2650,  2936,  4668,  2613,  2614,  2615,  2616,
     238,  2967,  2646,  3661,  2655,  4192,  4193,  2617,  1384,  1335,
      54,  2542,  1451,   951,  1759,  1384,  3138,  2116,  3535,   974,
    4664,   994,  2921,  1347,  1195,  4413,  1659,    55,  3148,  4830,
    1523,  2007,  1656,  1490,  2656,  1657,  5457,  5458,  2659,  5065,
    1341,  1342,  2934,  1692,  1304,  3112,  4167,  2028,  3619,  3903,
    1736,  2671,  2939,  4556,  1736,  2941,  1436,  2746,  2944,  3188,
    1736,  1366,  4816,  1344,   898,  2063,  1345,  2047,  2366,  4413,
    5320,  2060,  2061,   952,  2486,  2065,  4517,  5370,  2066,  2067,
    2068,  4553,  2369,  2072,  2073,  2075,  2077,  2078,  2079,  2080,
    2081,  1341,  1342,  3220,  2676,   984,  4515,  1681,  2680,   952,
    3896,   241,  4567,  1110,  1341,  1342,  5197,  2804,  1128,  2753,
    4301,  4302,  1031,  4122,  4575,  2095,  2096,   709,  2098,  4579,
    2100,   709,  1128,  3486,  2761,   709,  2110,  1128,  1080,  1660,
    2115,  5221,  2647,  3495,  2140,  1661,  1658,  2026,  3912,  1344,
    2104,  2147,  1345,  4079,  1816,  1816,  2143,  3113,  4857,  1128,
    3623,  1341,  1342,  2105,  3294,  2165,  1344,  1128,  4184,  1345,
    1128,  2539,  4103,  3927,  2158,  2160,  2145,  3574,  3575,  1817,
    1817,  3295,  4421,  2097,  3378,  3296,  3303,  2101,  1693,  1080,
    1080,  2109,  3374,  3088,  4114,  3304,  1728,  1080,  1080,  2463,
    1080,  2188,  4112,  4414,  -912,  4074,  4160,  2856,  1736,  3457,
    1344,   965,  1344,  1345,  2681,  1345,  4462,  2372,   951,  1344,
    3593,  2221,  1345,  1025,  1108,  4383,  4384,  1341,  1342,  1128,
    1452,  2738,  1341,  1342,  1341,  1342,  1341,  1342,  1389,  3114,
    4594,  1193,  3075,  3075,  2240,  4598,  2225,  4414,  3375,  4601,
     951,  4461,  2248,  4463,  1195,  3462,  3463,  4163,  3408,  2747,
    3627,  3374,  3629,  3630,  3640,  3590,  4010,  1723,   241,  4014,
     709,   709,   709,  1080,   709,  1128,  1080,  2831,  2027,  1341,
    1342,  2287,  2082,   950,  3314,  4415,  4435,  2289,  4508,   709,
    1490,  1128,  2276,   709,  1028,  5393,  2463,  2492,   952,   951,
    5206,  5029,  2783,  5031,  2133,  2171,  1195,  1221,  2292,  5277,
    4329,  4141,  1437,  2183,  1195,  4348,  2185,  3375,  4401,  4883,
    2375,  2461,   768,  5197,  1495,  1724,  2271,  2272,  2273,  4419,
    2275,  2426,  4790,  4950,  1347,  1385,  1344,  1029,  2493,  1345,
    2831,  3553,  1385,  1094,  2327,  2290,  1638,  5223,   717,  2294,
    2367,   718,  4452, -1993,  4323,  2286,  2286,  4328,  2338,  4869,
    1081,  4339,  4340,  1128,  2367,  4343,  4344,  3594,  3595,   996,
    2148,  1591,  4350,  1061,  4352,  4353,  3468,  3320,  1149,  2524,
    2345,  1128,  4665,  4361,  1491,  4951,  -912,  4367,   773,  2274,
    1384,  2857,  2277,  4615,  2227,  5363,  5321,  1128,  4111, -2067,
    1341,  1342,  4387, -1993,  5177,  3434,  4248,  4462,  1128,  1386,
    1347,  1341,  1342,  4964,  2383,  5178,  4297,  1726,  1344,  5383,
    1486,  1345,  2463,  2407,  2408,  2409,  1088,  1347,  2414,  1341,
    1342,  4298,  2430,  1128,  3680,  2431,  3872,  2433,  5326,  3569,
    3570,  3571,  4402,  3679,  4463,   114,  1085,  3681,  2435,  2436,
     116,   116,   116,  3315,  1083,  3320,  1730,  4722,   121,  3654,
    3115,  1708,  4464,   966,  1168,  2902,  1341,  1342,   116,  1344,
    4655,  1347,  1345,  1347,  1341,  1342,  2748,  2051,  1726,  1169,
    1347,  4095,  1344,  4055,  3466,  1345,  2393,  2607,  2394,  2367,
     785,  1095,  2749,   952, -2067,  4175,  4377,  5322,  2083,  3554,
    1367,  1368,  3803,  3641,  3642,  2541,  4416,  1498,  1341,  1342,
    2608,  2376,  -607,  5022,  4096,  2683,  2149,  2511,  1716,  5327,
    1242,  4451,  1341,  1342,  2084,   952,  1341,  1342,  5323,  1344,
    1108,  1292,  1345,    42,  3502,  1341,  1342,  5191,  1096,  1296,
     954,  5394,  1376,  1377,  1378,  1379,  1380,  1381,  2634,  1728,
    4416,  3770,  3771,  5258,  5259,  4140,  1717,  1341,  1342,  4942,
    2559,  1080,  4800,  1727,  1341,  1342,   954, -1993,  3656,  1185,
    2512,  2525,   801,  1726,   952,  1592,  1080,  1106,  4767,  3119,
    2543,  4017,  1030,  1341,  1342,  4952,  2776,  3321,  1877,  1341,
    1342,  2684,  1119,  1150,  3075,  1344,  1487,  1347,  1345,  3897,
    1344,  4058,  1344,  1345,  1344,  1345,    49,  1345,  2688,  1080,
    1728,  5511,  1031,  1097,  4692,  3057,  4161, -1993,  4164,  2377,
    3332,  1888,  3504,  4286,  2039,  1341,  1342,  1341,  1342,  4403,
    5136,  1491,  3585,  5179,  1341,  1342,  4693,  3555,  1341,  1342,
    4572,  3880,  3592,  4858,  4859,  3120,  4574,  1344,  1151,  2816,
    1345,  3775,  2706,  4464,  2723,  3582,  2513,  3556,  1633,  3885,
      54,  2727,  1386,  1367,  1368,  3321,  3175,  4152,  3176,  2052,
    3557,  1120,  3886,  3025,  4330,  4331,  3121,  2561,  4153,  1347,
    1341,  1342,  5228,  2776,  1499,  5232,  5133,  1580,  4291,  3215,
    2085,  1682,  2577,  2751,  1341,  1342,  4373,  2040,  1709,  1263,
    2664,  4200,  3790,  4710,  4711,  1728,  1084,  1385,  1341,  1342,
    3793,  3177,  1496,  4201,  1122,  3797,  3238,  3239,  2437,  4097,
    3075,  3075,  3316,  2771,  1710,  2611,  1061,  4202,  3058,  4332,
    1347,  1828,  1588,  4792,  3178,  4039,  4647,  4292,  4796,  1039,
    4213,  3334,  2497,  1347,  4404,  1341,  1342,  3122,  2802,  1163,
    2803,  1341,  1342,  3558,  4113,   954,  1106,  1128,  2635,  1829,
    4589,  4590,  2566,  4109,  4110,  1166,  4591,  4647,  1344,  3030,
    2750,  1345,  1243,  3179,  2654,  1170,  1128,  3448,  4747,  1344,
    4585,  4490,  1345,  1293,  1152,  1341,  1342,  1061,  2754,  2378,
    1347,  1297,  1648,   828,  2760,  1341,  1342,  1344,  4136,  4868,
    1345,  2758,  4142,  3460,  2762,  3461,  1171,  2379,  1110,  1730,
    3216,  3323,  5281,  1589,  4586,  1363,   796,  5447,  5447,  1341,
    1342,  3030,  5053,  5200,  1352,  5095,  1335,  5056,  3778,  3123,
    4044,  5137,  1110,  1080,  1344,  3031,  4457,  1345,  4458,  4708,
    1879,  2777,  1344,  2831,  2831,  1345,   961,  4171,    42,  2831,
    1080,  1581,  2804,  3900,  1898,  2776,  1347,  4378,  4379,  4380,
    3964,  1347,  3075,  1347,  1108,  1347,  3032,  1080,  1263,  1128,
    1730,  5096,  4075,  1098,  1178,  3559,  1344,  2036,  5387,  1345,
    1341,  1342,  1061,  4397,  2813,  5112,  2053,  3031,  2818,  3323,
    1344,  1173,  2438,  1345,  1344,  1099,  1080,  1345,  2380,  4154,
    3059,  1080,  2054,  1344,  2340,  2498,  1345,  2341,  1347,  1128,
    3060,  3965,  2041,  1128,  1128,  4896,  1898,  3061,  3032,  4881,
    4882,    49,  4024,  1650,  3978,  1344,    42,  2777,  1345,  1651,
    2851,  2852,  1344,  1341,  1342,  1345,  1100,  3033,   962,  1341,
    1342,  5138,  1128,  1128,  1341,  1342,  2875,  3560,  1080,  2769,
     954,  1344,  1180,  1821,  1345,  2241,  1128,  1344,  1181,  2872,
    1345,  4647,  4650,  1110,  1111,  1730,  1195,  1898,  4172,  5184,
     222,  3989,  1128,  2777,  2006,    54,  4651,  2006,   989,  1898,
    4067,  1913,   954,  1195,  1189,  1341,  1342,  1898,  1731,  3033,
    1341,  1342,    55,  1344,  1191,  1344,  1345,  1101,  1345,    49,
    5097,  4089,  1344,  1112,  2930,  1345,  1344,  1880,  2766,  1345,
    4100,   963,  2832,  1652,  2767,  5492,  1028,  2842,  1366,  3034,
    3624,  3062,  1341,  1342,  1028,  3180,  4255,  1876,  2242,  1347,
    3508,   954,   820,  4022,  5493,  3254,  3255,  3990,  2667,  2954,
    1347,  1080,  1080,  1967,  4521,  1828,  4749,  3625,  1344,   951,
    3124,  1345,   951,    54,  1341,  1342,  2342,  3450,  1347,  1029,
    1582,  1583,  1344,  3009,  3703,  1345,  1197,  1029,  1341,  1342,
      55,  3034,  1030,  1829,  3768,  3769,  1344,  1110,  2514,  1345,
    1341,  1342,  3021,  4030,  4155,  2668,  3464,  1584,  1341,  1342,
    1341,  1342,  4781,  1199,  1971,  1347,  1341,  1342,  1128,  3012,
    4931,  3919,  5238,  1347,  1341,  1342,  1993,  4029,  4948,  3800,
    4932,  3800,  2006,  1344,  2033,  4322,  1345,  4324,  3063,  1344,
    1201,  2658,  1345,  3920,  2466,  4341,  2414,  1212,  1653,  4734,
    4346,  4347,  2541,  4349,  2456,  4351,  1128,  1347,  4354,  4355,
    4356,  4357,  4358,  4359,  4360,  3023,  4364,  4365,  4366,  2467,
    1080,  1347,  1128,  1344,  1128,  1347,  1345,  2942,  2943,  4981,
    4982,  1341,  1342,  1344,  1347,  1110,  1345,  4973,  4652,  4974,
    2766,  4631,  2607,  5005,   951,  2831,  2958,  1370,  1371,  1108,
    3135,  1202,  -607,  1877,  2453,  3081,  1347,  1344,  1341,  1342,
    1345,  3087,  1828,  1347,  4632,  2608,  5006,  3100,  3102,  3105,
    3106,  3107,  3108,  3109,  4046,  2658,  2672,  3118,  1363,  3129,
    1341,  1342,  1347,  4755,  1341,  1342,  1878,  2679,  1347,  3129,
    1829,  3139,  3140,  4801,  3129,  1143,  3144,  3145,  1422,  1128,
    3147,  3129,  1433,  4633,   717,  2682,  3157,   718,  4051,  3160,
    3035,  2007,  2006,  2243,  5283,  3164,  3170,  3090,  1344,  3171,
    1080,  1345,  1203,  4933,  1347,  5203,  1347,  1108,  3110,    25,
    3186,  3022,  3129,  1347,  3130,  5284,  1128,  1347,  1341,  1342,
    1341,  1342,  2685,  1208,  3300,  1211,  5204,  1144,  4203,  4947,
    2697,  4622,   990,  5183,  5384,   220,  1080,  3302,  5131,  5132,
     990,  1218,  3035,  2463,  3161,  2468,  3129,  3225,  3169,  4214,
    3756,  1344,  1723,  1213,  1345,  3173,  3174,  1344,  5075,  1347,
    1345,  1219,  1344,  2636,  2715,  1345,  1145,  2566,  1080,  3043,
    1341,  1342,  1080,  1347,   952,  1039,  1012,   952,  2722,  1039,
    1012,  1387,  2725,  5422,  1031,  3044,  5380,  1347,  1128,  2540,
    1340,  2959,  1031,  3643,  5375,  5236,  5237,   709,  3337,   709,
     709,   709,  3042,  1344,  4115,  1869,  1345,  1830,  1344,  4220,
    1724,  1345,  4221,  3923,  1386,  2660,  3172,  3331,  1128,  2566,
    3957,  3030,  1128,  1220,  1347,   116,  1341,  1342,  5076,  4623,
    1347,  3397,  4551,  4552,  1222,  1341,  1342,  2661,  2631,  3960,
    1344,  1965,  2632,  1345,  1396,  3968,  1223,   768,  2244,  1341,
    1342,  5580,  3217,  3335,   998,  3338,  3339,  3075,  2673,  4520,
    1794,  1366,  2566,  1795,  1347,  1617,  1618,  2245,  1621,  1224,
    1622,  4411,  1344,  4624,  1347,  1345,  2356,  2357,  4708,  2358,
    1929,  3974,  1274,  3975,  3280,  1879,  1344,  3031,  3284,  1345,
    3976,  1341,  1342,  4669,  3977,  1227,  4671,  4672,  1347,   952,
    1039,  1012,  1291,  3440,  4424,  4425,  1344,  2028,  1344,  1345,
    2540,  1345,  1228,   773,  1344,  1305,  1306,  1345,  3069,  3075,
    3075,  1363,  1344,    36,  1229,  1345,   367,  1230,   369,  1231,
    4440,  2674,  1341,  1342,  1232,  2566,  3979,  1374,  1375,  1376,
    1377,  1378,  1379,  1380,  1381,  1341,  1342,  5481,  1233,  2006,
    3982,  3470,  3471,  1399,  2675,  3206,  3207,  3045,  2566,  1347,
      42,  1128,  1736,  1726,  3988,  2677,  4027,  2718,  1128,  2566,
    5077,  2566,  1410,  1335,  3770,  3771,  4150,  4151,  3478,  1344,
    2809,   999,  1345,  1128,  2810,  2140,  1933,  1631,  1362,  3070,
    2140,  4433,  5130,  2952,  3494,  1128,  4429,  2953,  1821,  1402,
    3382,  3991,  4391,  3680,  2566,  3421,  1344,  3993,  4389,  1345,
    3455,  4390,  1347,  1391,  2566,   785,  3681,  1234,  1347,  1406,
    1370,  1371,  3689,  1347,  4915,  1237,  3690,  1239,  1344,  4920,
    1080,  1345,  1344,    49,  3046,  1345,  1722,  1080,  1080,  3545,
    4955,  3995,  4318,  4319,  4900,  4901,  3532,  3533,  1727, -1304,
    4470,  3997,  1880,  1263,  1240,  1723,  1028,  1241,  2813,  3119,
    3047,  1000,  3165,  1080,  1347,  5519,  5520,  1411,  3980,  1347,
    3423,  3071,  2566,  1025,  1413,   116,  4194,  1110,  1110,  4396,
    4195,  3202,  3205,  4195,  4808,  4809,  1344,    54,  1344,  1345,
    1244,  1345,  1245,  1335,  1934,  1728,  1363,   801,  1937,  1029,
    3287,  1347,  1996,  1997,    55,  1938,  1723,  4715,  4716,  4717,
    4718,  3425,  1247,  1724,  4469,  2287,  2287,  1128,  2566,  4492,
    1248,   802,  3048,  2951,  1366,  3120,  1426,  3930,  1249,  1429,
    3609, -1304,  3611,  1347,  1432,  1420,  3998,  3604,  1344,  1434,
   -1304,  1345,  3470,  1250,  1028,  1648,  2171,  1347,  3945,  1251,
    5213,  4509,  1252,  2183,  3521,  4510,  3121,  3287,  1421,   951,
     951,   951,  4915,  1253,  1724,  1424,  4920,  1347,  1561,  1347,
    3554,  2996,  2997,  1725,  1254,  1347,  2998,  2999,    42,  1425,
    4561, -2067,  3119,  1347,  4562,  3184,  1939,  1029,  4563,  3999,
    2392,  2393,  4562,  2394,  1344,  4020,  1128,  1345,  1562,  1438,
    4445,  3885,  1443,  1344,  1364,  1257,  1345,  4596,  1080,  2414,
    3660,  4597,  4603,  1258,  3886,  4696,  4604,  1344,  4698,  4697,
    1345,  4701,  4699,  1110,  3049,  4702,  1264,  3122,  4915,  3668,
    1365,   954,  1265,  4920,   954,  4704,  3673,  1266, -2067,  4705,
    1347,  4446, -1304,  1267,  1030,  4617,  4447,  4506,  3120,  1563,
    1941,    49,  1030,  1564,  4709,  1268,  4617,  3288,  4604,  1344,
    1726,  4714,  1345,  1649,  3289,  4604,  1726,  1347,  1269,  1128,
    4776,  1270,  1061,  3087,  1271,  3087,  1650,  1444,  4599,  3121,
    1272,  3100,  1651,  1370,  1371,  3712,  4737,  1687,  1688,  1347,
    4740,    64,  3072,  1347,  3129,  2307,  2308,  4750,  4797,  1366,
    1344,  2566,  3776,  1345,  2153,    54,  1844,  4773,  3555,  3123,
    4745,  2566,  1275,  1344,  1276,  1277,  1345,  1726,   828,  1128,
    1367,  1368,    55,  4831,  4748,  3784,  3348,  4597,  3556,  1278,
    1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  4847,  4851,
    1450,  3557,  4604,  4604,  4754,  3129,  4756,  1347,  1279,  1347,
    3122,  1727,  4757,  3129,  3119,  1730,   954,  3129,  3129,  4854,
    4758,  4870,  1280,  4604,  5585,  4871,  1652,  1001,  1002,  1281,
    1003,  1004,  1005,  1080,  1031,  5076,  3129,  1282,  3554,  1128,
    1128,  3075,  1283, -1811,  4872,  1284,  3290,  1363,  4871,  1006,
    1285,  1942,  1728,  4909,   768,  1286,  1369,  4910,  1728,  1347,
     220,  1287,  1727,  4924,  1288,  1723,  2006,  4604,  1565,  1944,
    2559,  2006,  1289,  1290,  4067,  1294,  3030,  4759,  4473,  4147,
    3120,  5078,  5019,  1845,  3558,  5039,  5020,  1846,  4474,  4597,
    1295,  1298,  3123,  5055,   952,   952,   952,  3690,  4475, -1811,
    1299,  1847,  5101,  3290,  4855,  1303,  4816,  4530,  1307,  1728,
    1308,  3121,  4476,  4477,  4478,  1347,  3287, -1304,  1370,  1371,
     773,  3875,  1031,  1724,  1347,  5102,  5036,  1128,  4479,  4816,
    5038,  1372,  5134,  1731,  1309, -1811,  5135, -1811,  1347,  1729,
    5529,  1653,  3031,  5296,  1363,  1310,  1566,  5297,  1311,  1195,
    4199,  1312,  5529,  1313,  3030, -1811,   221,  4578,  5301,  1314,
   -1811,  3926,  3820,  1080,  1315,  2804,  1080,  5306,  3712,    64,
    1642,  4562, -1304,  3032, -1811,   222,  3555,  5192,  3914,  5529,
    1347, -1811,  3122,  4223,  5072,  3554,  5247,  1316,  1317, -1811,
    3124,  4228,  4229,  5308,   116,  1318,  3556,  5309,  1116,  4262,
    1363, -1811,  1319,   116,   116,  1320,  3559,   116,  5317,  3557,
    1567,  1321,  5318,  5388, -1811,  1414,  3288,  5389,  3030, -1811,
    3031,  1347,   785,  3289,   897,  1322,  1457,  5566, -1811,  1061,
     947,  5567,  3287,   951,  1347,  1061,   748,  1848,  1323,  1324,
    4970,  1325,  1326,  3936,  3033,  3940,  1327,  1328,   223,  1329,
    1366,  3032,  1026,   220,  1363,  1376,  1377,  1378,  1379,  1380,
    1381,  1390,  5106,  1454,  3123,  1422,   897,  1105,  1458,  1465,
    1473,  1475,   897,   748,  4837,  4838,  1726,  4840,  3560,  3905,
    3440,  3876,  3907,  1477,  3031,  1485,  1061,  1510,  1518,  1524,
    1529,   224,  3558,  4890,  1363,  1534,  1547, -1811,  1415,  1557,
    4021,  1558,  1573,  1416,   801,  4844,  4845,  1574, -1304,  1623,
    1576,  1579,  1730,  3124,  4636,  3069,  1441,  1606,  1730,  1619,
   -1811,   768,  3033,  3555,  1607,  1610,  3034,  1624,   802,  1625,
   -1811,  1609,  1568,  1627,   225,  1849,  1373,  2813,  1626,  1634,
    1628,  4043,  1128,  3556,  4531,  1629,  1417,  1366,  1630,   723,
    1080,  4636,  1632,  1634,  1635,  4480,  3557,  1636,   768,  1639,
    1665,  1727,  1418,  1128,  1647,  5379,  1666,  2007,   222,  1730,
    2007,  1667,  4481,  1668,  1569,    42,  1679,   116,   772,  1683,
    4060,   984,  2153,  3523,  1128,  1697,  3070,   773,  1419,  1699,
    1700,  1702,  1726,  3238,  3239,  1721,  1080,  1080,  1821,  1839,
    1116,  1863,  3290,  1366,  3034,  1080,  1080,  1080,  1728,  1370,
    1371,  1110,  1110,  4742,  3559,   772,  1862,  1865,   778, -1811,
    1110,  1110,  1110,  5307,   773,  1866,  1363,  1384,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,  1381,  1731,  1898,  1905,  3558,
     724,  1916,  1919, -1811,  4131,   748,  1954,  1964,    49,  1965,
    1987,  1966,  4124,  2004,  4124,   778,  2016,  1366,  2017,  2029,
    2030, -1811,  4532,  2031,  2043,  2062,  4054,   226,  3071,  2069,
    2070,  1363,  3596,  3597,  3598,  2099,  -962,  2103,  2117,  2153,
    2142,  2163,  2167,  2168,  2170,  3124,  3560,  1731,  5082,   785,
    2178, -1811,  2179,  4482,  1030,  2180,  2191,  1366,  1080,  2189,
    4162,  2211,  3524,  3525,  2222,  2007,  1370,  1371,   952,  2208,
    4483,  2226,  2487,  1110,  2232,  2227,  1175, -1811,  3290,    55,
    2229,  2234,  2456,  4636,  1728,   828,   785,   725,  2236,  2238,
     768,  2239,  2264,  4997,  2286,  4998,  4999,  2488,  2269,  1487,
    2265,  3087,  2297,  2298,  2296, -1811,   227,  3035,  2299,  4191,
    2301,   954,   954,   954,   796, -1811, -1811, -1811, -1811,  2304,
    2314,  3559,  1370,  1371,  2315,  5030,   799,  2328,  2332,  2317,
     800,   801,  4484, -1811,  2165,  2329,  2330, -1811, -1811, -1811,
    1363,  2334,  1030,  2346,  2347,  1061,  2349,   772,  2350,  4485,
    2351,   796,  2352,  3875,  2353,  4962,   773,  1642,  2361, -1811,
   -1811,  4197,  4198,  2362,  2367,  2119,  4205, -1811,   801,  5196,
    2385,   228,  2398,   229, -1811,  2402,  1370,  1371,    42, -1811,
    2403,  2418,  4271,  2439,  2440,  3035,  2442,   778,  5193,  1366,
     726,  2443, -1811,  3560,  5220,  2007,  2451, -1811,  4279,  4280,
   -1811,  2489,  4227,  2455,  2470,  2456, -1811,   230,  2006,  4258,
    4260,  4261, -1811,  2475,  3936,  2476,  1370,  1371,  2481,   231,
    3129,  3129,  2482,  2484,  3225,  2494,  4307,  -757,  1730,  4311,
   -1811,  2496,  2499,  5007,  1366, -1811,  2506,  2456,  2507,  2510,
    2517,  2518,  1128,  1828,  2520,  2530,  2531,  2528,  2678,  3072,
    2545,    49,  2457,  5547,  2533,  2546, -1811,  2548,   785,  4533,
    2552,  1061,  1363,  2562, -1811,  2547,  3526,  5008,  2551,  2563,
    2566,  1829,  3254,  3255,  2565, -1811, -1811,  2578,  4191,  1374,
    1375,  1376,  1377,  1378,  1379,  1380,  1381,  2580,  2120, -1811,
    4125,  2581,  2121,  4191, -1811,  4381, -1811,  2582, -1811,   727,
    2584,  2585,  2586, -1811,  1535,    54, -1811,  2588, -1811,  2587,
   -1811,  2591,  1080,  3876, -2067,   232,  2593,  2606,  2612,   728,
    2649,  2622,    55,   796,  2624,  2625,  2626, -1811,  2658, -1811,
     820, -1811,  2122,  2119,  4637,  2641, -1811,  4638,  2652,   800,
     801,  2643,  2648,  1366,  1730,  2651,  1731,   826,  1370,  1371,
    1387,  2662,   828,  2666,  2670,   829,  -757,  2686,  2719,  2687,
    2692,  2739,  2458,  1536,   729,  2695, -1927,   820,  5285,   730,
    3969,  4637, -1811,  2696,  4638,  2707,  5196,  1375,  1376,  1377,
    1378,  1379,  1380,  1381,   826,  2708,  2709,  2716,  2717,   828,
    2729,  5009,   829,  1370,  1371, -1811,  1537, -1811,  1828, -1420,
     731,  2735,  5354,  2740,   732, -1811,  2781,  2741,  2490,  2764,
    1381,  2755,   733,  2768,  2759,  2765,  2787,  2123,  5293,  2788,
    2487, -1811,  2777,  2784,  2789,  2491,  1829,  2790,  4395,  2791,
    2456,  2792,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,
    2793,  2140,  2807,  4127,  2806,  2488,  2808,  2811,  5045,  5373,
    1531,  2843,  2007,  2846,   734,  2854,  2120,  2864,  1842,  2853,
    2121,    42,  2865,  2862,  2869,  1366,  2863,  2868,  2870, -1811,
    2214,  2896,  1498,  1499,  2897,  2915,  1263,  5010,  2813,  2916,
    2917,  1128,  2918,  2919,  1080,  2924,  1374,  1375,  1376,  1377,
    1378,  1379,  1380,  1381, -1811,  5011,  2920,  4566,   116,  1110,
    2122,  2929,  1370,  1371,  5262,  2927,  2935,  2933,   735,  1108,
    2940,  2945,  2124,  2947,  2950,  2956,   897,  2951, -1811,  5012,
    2957,   897,  2970, -1811,  2968,   954,  1374,  1375,  1376,  1377,
    1378,  1379,  1380,  1381,    49, -1811,  2964,  4124,  5434,   820,
    2976,  2977,  1652,  4637,  2983,  2984,  4638,  2988,  2125,  2489,
    2991,   897,  2992,  2993,  3010, -1811,   826, -1811,  3020,  3015,
    1152,   828,  3026,  2459,   829,  3052, -1811,   897,  3040,  3053,
    4612,  3055,  2126,  3054,  4639,  4640,  1204,  3197, -1811,  3141,
    -757,  4191,  4641,  4595,  3143,  2123,  4191,  3189,  3524,  3525,
    4191,  1828,  3212,    42,  3210,  3226,  3192,  2127,  3218,  3712,
    3219,  4048,  3228,  3229,  5486,    55,  5488,  3230,  3231,  3282,
    1128,  4639,  4640,  3232,  3233,  1538,  3234,  3043, -1811,  1829,
   -1811,  3283,  5504,  3286,  1370,  1371,   897,   897,  2594,   897,
     897,  1662, -1811,  3044,  1080,  3319,  3310,  3351,  1128,  3385,
    3386,  2128,   897,  2567,  2568,  2569,  2570,  2571,  2572,  2573,
    3308,  3342, -1811,  3384, -1811,  2958,  5535,  5536,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,  1381,    49,  3398,  1242,  5222,
    2006,  3456,  2129,  5561,  5364, -1811,  3481,  3400,  1080,  4677,
    2124,  2460,  3415,  2006,  1292,  3445,  5570,  3447,  2006,  3498,
    3499,  5561,  1353,  1354,  3452,  2006,  1296,  3501,  5570,  3505,
     709,  3496,  1061,  1374,  1375,  1376,  1377,  1378,  1379,  1380,
    1381,  1338, -2304,  3497, -1811, -1811,  2125,  3534,  3519,  5013,
    3524,  3525,  4307,  3506, -1811,  3538,  1925,  1926,  1927,  1928,
    1929,  3539,  3540,  1355,  3544,  3552,  3553,    55,   897,  3566,
    2126,  3572,  3591,  3578, -1811, -1811,  1356, -1811,  3605, -1811,
    4628,  3606,  3607,  3613, -1811,  3608,  4687,  3601,  3610,  3615,
    3616,  1539,  -757,  3620,   947,  2127,  -757,  3621,  5531,  3622,
    3626,  3628,  2456,  2491,  3025,  3651,   897,  3665,  3669,  3670,
    3671,  3672,  1540,  4639,  4640,  3674,  1357,  2457,  3696,  3697,
     947,  4673,  1108,  3698,  4676,  3705,  3706,  3707,  4191,  1358,
    3700,  3778,  3783,  1026,  4730,  3045,  3786,  1541,  1442,  2128,
    3794, -1811,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,
    3787, -1811,  5367,  1542,  3791,  3795,  1359,  3804,  3813,  3816,
     116,  3820,   242,  1930,  1931,  1932,  1933,  3817,  3834,  3818,
    2129,   869, -1811,  3819, -1811,  3822, -1811,  3825,  3828,   948,
    3831, -1811,  3835,  3836,  3837,  3838,  3839,  3840,  3874,  3841,
     717,  3842,  3889,   718,   901,  1494,  3843,  3844,  3845,  3846,
    3847,  3848,  3849,  1512,  1517,  3850,  3851,  3852,  3853,  3854,
    3855,  3856,  3046,  3857,  3858,  3859,  3860,  3861,  3862,  1113,
    1360,  -757,  1128,  1546,  3863,  3864,  3865,  2458,  4783,  3866,
    3867,  3868,  3869,  3870,  3898,  1367,  1368,  3916,  3047,  2007,
    3927,  3899,  3891,  3931,  2007,  3937,  3933,  3941,  3942,  3944,
    1128,  3946,  3948,   902,  3526,  3961,  3949,  3950,  3951,  3952,
    1387,  3962,  4000,  1828,  1374,  1375,  1376,  1377,  1378,  1379,
    1380,  1381,  4003,   116,  1934,  4011,  1935,  1936,  1937,  2819,
    4008,  4009,  3440,  1302,  1772,  1938,   903,  4004,   897,  1744,
    1061,  1829,  4028,  4036,  4041,  4045,  4828,  5451,  4056,  4059,
    3048,  4037,  4068,  4072,  5575,  2820,  4073,  4076,  4077,   947,
    4080,  4081,  4082,  4083,  4084,  4085,  4105,   897,   897,  4091,
    2821,   904,  4093,  1678,  4106,  5367,   897,   897,   897,   897,
     897,   897,  4092,  2822,  4191,  4116,  4117,  4118,  4191,   897,
     897,  4119,   897,   897,  4120,  4128,  1128,   897,   897,  4132,
    1718,   897,   897,   897,   897,  4129,   897,   897,  4133,  4134,
    4146,  1387,  4135,  4149,   897,   897,  1939,   897,   897,   897,
     897,   897,   905,  4158,   897,   897,   897,   897,   897,   897,
     897,   897,   897,  4164,   897,  2823,  2824,   897,   897,  4169,
    4170,  4174,   897,  1128,  4179,  4177,   897,   897,   897,  4185,
    5544,  4173,  3049,  4182,  4186,  4211,  4222,  4230,  4263,   897,
     897,   897,  4267,  2825,   897,  4274,  4283,   897,   897,   897,
     897,   897,  2193,  4284,  4285,  4296,   897,  5544,   897,  1940,
    1941,  4307,  2194,  4311,  4905,  4375,  4321,  4388,   897,   897,
    4394,  4398,  2195,  4420,  4406,  -757,   897,  4422,   897,   897,
    4430,  4418,  4399,  1128,  4436,   116,  2196,  2197,  2198,  4437,
     897,   897,   897,  4454,   897,   897,  4449,  1080,   897,   897,
     897,  4450,  2199,   897,   897,   897,   897,   897,   897,   897,
     897,  2826,  4453,  4459,   897,  4488,  4489,  4494,  4502,   897,
    4496,  4472,  4505,  4512,  4513,  4516,  4524,  4519,  4525, -1704,
    -154, -1703,  4528,  4529,   947,   906,  4548,  4558,  4559,  2340,
    4570,  4571,  4573,  1128,  -911,  4580,  1037,  1038,  4581,  4583,
    4233,  4582,  3659,  4609,  4600,  4619,  4613,  -760,  4648,  4649,
    4961,  4661,  1128,  4654,  4663,  2827,   947,  4592,  3092,  3129,
    4257,  3129,  1039,  1012,  4670,  4678,  2460,  4682,  4685,  5017,
    4679,  4681,  4689,  1040, -2075,  4691,  4700,  -757,  4713,  4688,
    4723,  4733,  4746,  2086,  4234,  4735,  4736,  4726,  4235,  4737,
    4236,  1942,  4738,  4739,  4743,  4744,  4751,  2102,  1041,  4752,
    1042,  4753,  2457,  4938,   907,   947,  4761,  4762,  1943,  1944,
    1043,  4731,   897,  4763,  4769,  4772,  4774,  4775,  4777,  4778,
    4779,  4785,  4786,  4798,   908,  4788,  4802,  4803,  5033,  4811,
    4821,  4794,  2146,  4825,  3320,  4805,  4807,  4813,  4237,  1723,
    1747,  1748,  4814,  1026,  4832,   897,  4826,  4835,  4836,  4562,
     897,  -757,  4839,  4841,  4842,  1149,  4846,  4848, -2067,  1044,
    4874,  4307,  4307,  4884,  1045,  4867,  4885,  1046,   799,   909,
    4740,  3811,  4894,  4898,   730,  4880,  1750,  1047,  4907,  4908,
    4899,  4921,  4730,  4925,  4927,  4928,  4939,  4941,  4940,  4945,
    1753,  5068,   910,  4944,  4949,  4946,  1754,  1755,  4956,  1048,
    1756,  1049,  4965,  4960,  4966,   911,  4975,  4984,  4989,  4985,
    1050,  4991,  1051,  5000,  5003,  5028,  -911,   912,  5034,  2200,
    5037,  5047,  5048,  5052,  1758,   897,  5058,  5046,  3624,  5067,
    5107,  5066,  5069,   913,  5070,  5017,  2201,  5043,  1759,  3440,
    5071,  5073,  1760,  4816,   897,  4957,  5085,  5088,  5087,  5089,
    5091,  5109,  5092,  5093,  2287,  5116,  5118,  5094,  5098,   914,
    5099,  5100,  3436,  5119,  5108,  5127,  5113,  5124,  5139,  -607,
    5142,  1765,  5180,  5181,  4191,  5186,  -932,  5198,  5190,  5200,
    5201,  5205,  5207,  1052,  5208,  5214,  5215,  5226,  5203,  5249,
    5225,  5240,  -493,  5267,  5204,  5269,  5270,  5271,  5272,  5278,
    5279,  5282,   897,  5300,  5303,  5331,  5295,  5304,  5334,  -511,
    5361,  5359,  5360,   915,  5362,  5375,  5376,  5382,  5377,  4994,
    5392,  5395,  5396,  5403,  5404,  5408,  5416,  5425,  5428,  5429,
    5430,  5435,  5437,  5439,  5440, -2745,  5443,  5454,  5456,  5463,
    5466,  2007,  5476,  5407,  3321,  5212,  2359,  5468,  1769,  5478,
    5483,  5479,  3225,  3225,  5484,  1770,  5489,  5485,  5407,  5494,
    5497,  5503,  4124,  5507,  5514,  5522,  5509,  5512,  5513,  5518,
    5525,  5523,  5418,  2401,  2202,  1771,  5534,  5239,  1367,  4238,
    5532,  1053,  4958,  5553,  4239,  5562,  5548,  5549,  3322,  5244,
    4240,  5574,  5577,  5576,  5581,  5582,  5583,  4032,  2417,  5253,
    5586,  5587,  3830,  3833,  5260,  4369,  5571,  3824,  1054,  4904,
    3827,  4906,  5051,  4374,  4176,  4916,   114,  1889,  5185,  1055,
    1056,  5274, -2071,  1057,  1058,  5453,  5414,  2441,  1225,   121,
    4241,  5449,  5064,  4926,  1773,  4307,  2203,  5564,  5407,   116,
    5188,  5527,  1073,  3536,  1059,  1590,  3489,  4487,  5475,  5460,
    5537,  5153,  1774,  2204,  5401,  5461,  5154,  5448,  1256,  5413,
    5412,  4386,  1080,  3078,  5156,  5157,  5159,  1732,  5313,  5160,
    5161,  5162,  1128,  5163,  1273,  5164,  5167,  5168,  5169,  4031,
    3084,  5418,  4712,  4593,  3281,  4724,  3911,  3910,  3913,  4564,
    5407,  4992,  5407,  5385,  1128,  4850,  5427,  1128,  1060,  5391,
    5390,  5126,  3200,  3041,  4725,  4607,  4658,  1778,  5407,  4242,
    5335,  3909,  4608,  1106,  4266,  4215,  1779,  4264,  4873,  4002,
     897,  5397,  4660,  5423,   897,  5004,  5054,  5128,  5018,  5027,
    5057,  4866,   897,  3704,   897,  2610,  5017,  1336,   951,  5407,
    5407,  4620,  4720, -2816,  5552,  4392,  3649,  1061,  3901,  3636,
    3203,  5212,  4888,  2946,  3204,  3201,  2416,  2949,  2391,  4243,
    1601,  2579,  4282, -2075,  3522,  3777,  1062,  3520,  3323,  3821,
    4053,  2560,  3507,  4501,   897,  1114,  2045,  3011,  5294,  4741,
    2895,  2763,  3467,  2726,  3444,  5103, -2071,  5080,  5374,  1963,
    1484,  5424,  3548,  5381,  3549,  1784,  3550,  5499,  3012,  3551,
    5516,  4977,  5217,  4810,  4303,    42,  1915,  5216,  4550,  4987,
    2325,  1608,  4823,  4108,  5104,  1483,  4244,  4278,   897,   897,
     897,  3014,  5074,  5002, -2816,  1128,   916,  3476,  5313,  2770,
    2422,  1063,  2423,  4049,  2162,  4050,  4795,  2324,  4511,  4047,
    4782,  4789,  2424,  2425,  1447,  1449,  2937,  1696,  2302,  1698,
    5175,  1785,  1786,  1787,  1788,  2415,  3483,   897,  2938,  1789,
    3798,  2867,   897,  5498,  4968,  4584,  5515,  4843,  3770,  3771,
    5579,  5573,  4768,   948,  4674,  4793,  1790,  4983,    49,  1791,
    3658,   897,  4834,   869,  2046,  2250,  4327,  2914,   897,  5378,
    5465,  3583,  1034,   897,  1035,   897,  2152,  5473,  1480,   948,
    2249,   897,  2911,   897,   897,  2910,  2925,  2207,  3516,  3311,
    3307,  3312,  4959,  2384,  1482,  1793,  2213,  3631,  4245,  5084,
     739,   740,  2728,  5495,  1892,  1893,  1894,  4052,  4393,  4680,
    4721,  4923,    54,  4290,     0,     0,     0,  5386,     0,  5505,
    1655,  2742,  -759,     0,  5510,     0,     0,     0,     0,    55,
       0,     0,     0,  1064,  1065,     0,  5175,  5175,     0,     0,
    4246,  4247,  1447,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5545,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   114,     0,     0,     0,     0,     0,     0,     0,  1066,
       0,     0,     0,  2007,     0,  5545,     0,     0,     0,     0,
       0,     0,  1128,   952,   116,     0,  2007,     0,     0,     0,
       0,  2007,     0,     0,     0,     0,     0,     0,  2007,     0,
       0,     0,     0,     0,  2805,     0,     0,  1796,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   947,     0,     0,   947,     0,
    1799,  1800,     0,     0,     0,  1026,   897,     0,     0,     0,
     897,  5175,  5175,  1026,  2847,     0,   897,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   948,     0,
       0,     0,     0,     0,  1896,  1897,     0,     0,     0,     0,
       0,     0,     0,  1907,  1908,     0,     0,  1911,  1912,     0,
       0,     0,     0,     0,     0,     0,  1920,  1921,     0,  1922,
    1923,  2901,     0,     0,  1947,     0,     0,     0,  1956,  1957,
    1958,  1959,     0,  1961,     0,     0,  3324,  2913,     0,  -607,
       0,  1969,  1970,     0,  1973,  1974,     0,  5175,     0,     0,
       0,  1978,     0,     0,  1981,  1982,  1983,  1984,  1985,  1986,
       0,  1988,  5175,     0,  1991,  1992,     0,     0,     0,  1995,
       0,     0,     0,  1998,  2002,  2003,  5175,     0,     0,     0,
     947,     0,     0,     0,     0,     0,  2010,  2011,  2012,     0,
       0,     0,     0,     0,  2018,  2019,  2020,  2021,  2022,     0,
       0,     0,     0,     0,     0,  2035,     0,     0,  5175,     0,
       0,     0,     0,     0,     0,  2044,   869,     0,     0,     0,
    5175,  5175,     0,  2048,     0,  2049,  2050,     0,     0,  5175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2985,     0,  3076,  2090,     0,  3076,  3076,
       0,     0,     0,     0,  5175,     0,  5175,     0,     0,     0,
       0,     0,     0,   948,     0,  5175,     0,     0,     0,     0,
       0,     0,  5175,     0,  5175,     0,  5175,     0,     0,     0,
       0,  1678,     0,     0,     0,     0,     0,  5176,     0,     0,
    5174,     0,  5175,     0,     0,   948,     0,  3029,     0,  3039,
       0,  1447,     0,     0,     0,     0,  5175,  5175,     0,  2447,
       0,  2449,  2450,     0,     0,  2177,  2452,     0,     0,     0,
       0,     0,     0,  5175,  5175,     0,     0,     0,  5175,  2465,
       0,     0,  2471,  2472,     0,  2474,     0,     0,  2477,  2478,
    2479,  2480,     0,     0,   948,  2483,     0,     0,     0,  2224,
    2495,     0,     0,     0,     0,  2500,  2501,  2502,  2503,  2504,
       0,     0,     0,  2508,  2509,   897,     0,     0,     0,  2519,
       0,  2521,  2522,  2523,  3146,  2526,  2527,     0,  2529,     0,
       0,  2532,  2262,     0,  2537,  2538,     0,  2268,     0,     0,
       0,     0,     0,  5176,  5176,     0,  5174,  5174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3191,     0,     0,     0,     0,     0,     0,   897,     0,
       0,     0,     0,     0,     0,     0,     0,   897,   897,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   897,   897,
     954,   897,     0,     0,   897,   897,   897,   897,   897,     0,
       0,   897,  2320,     0,     0,     0,     0,     0,     0,     0,
     897,     0,     0,     0,     0,   897,     0,   897,     0,   897,
     897,  2339,   897,   897,     0,     0,     0,   897,   897,   897,
       0,     0,     0,   897,   897,   897,     0,   897,     0,   897,
       0,   897,     0,   897,     0,   897,     0,     0,  5176,  5176,
     897,  5174,  5174,  1494,  3320,     0,     0,  1494,     0,  1723,
    1747,  1748,     0,  2388,  2388,  2388,   897,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   897,     0,     0,  2404,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     897,     0,   897,     0,   897,     0,  1750,     0,   897,     0,
       0,     0,     0,     0,   897,   897,     0,     0,     0,     0,
    1753,     0,     0,     0,     0,     0,  1754,  1755,     0,     0,
    1756,     0,     0,     0,  5176,     0,     0,  5174,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5176,
       0,     0,  5174,     0,  1758,     0,     0,     0,     0,     0,
       0,     0,     0,  5176,     0,     0,  5174,     0,  1759,     0,
       0,     0,  1760,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1026,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5176,     0,   897,  5174,  -607,
       0,  1765,     0,     0,     0,     0,     0,  5176,  5176,     0,
    5174,  5174,     0,  3480,     0,     0,  5176,     0,     0,  5174,
       0,     0,     0,     0,     0,     0,     0,     0,  3485,  5176,
       0,     0,  5174,     0,     0,     0,     0,     0,     0,  5176,
       0,     0,  5174,     0,     0,   947,   947,   947,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5176,     0,  5176,  5174,     0,  5174,     0,     0,     0,
       0,     0,  5176,  1026,  3321,  5174,     0,     0,  1769,  5176,
       0,  5176,  5174,  5176,  5174,  1770,  5174,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5176,
     897,     0,  5174,     0,     0,  1771,     0,  2623,     0,     0,
     897,  2627,   897,  5176,  5176,     0,  5174,  5174,     0,     0,
       0,  2623,     0,     0,     0,     0,     0,     0,     0,     0,
    5176,  5176,     0,  5174,  5174,  5176,     0,     0,  5174,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     1,     0,
       0,     2,  4233,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1773,     0,     3,     0,     0,   897,
       4,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1774,     0,     5,     6,     0,  1341,  1342,  -757,
       0,     0,     7,     0,     0,     0,  4659,     8,     9,     0,
    4235,     0,  4236,     0,     0,  2699,  2701,  2703,     0,     0,
       0,     0,     0,    10,  2457,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,     0,     0,     0,  1778,     0,     0,
       0,  1494,     0,  1106,     0,     0,  1779,     0,     0,  2744,
    4237,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,    14,     0,  2752,     0,
       0,     0,     0,     0,     0,     0,     0,    15,    16,     0,
    2756,  2969,  2757,     0,     0,  1925,  1926,  1927,  1928,  1929,
      17,     0,     0,     0,     0,     0,     0,     0,  3323,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3691,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,  1784,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,    20,     0,    21,     0,     0,     0,     0,    22,
       0,     0,    23,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1494,     0,     0,    24,     0,     0,
       0,  2833,     0,  2839,     0,    25,     0,     0,    26,     0,
       0,  1785,  1786,  1787,  1788,     0,     0,     0,  -932,  1789,
    3085,     0,  1930,  1931,  1932,  1933,     0,     0,    27,     0,
       0,     0,     0,     0,     0,     0,  1790,     0,    49,  1791,
       0,     0,     0,     0,     0,    28,     0,  3136,     0,    29,
       0,     0,     0,     0,  2901,  1494,     0,     0,     0,     0,
       0,     0,     0,     0,  3149,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   948,  1793,     0,   948,     0,     0,
       0,     0,     0,  2922,     0,     0,     0,  2262,     0,   947,
       0,     0,    54,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2926,     0,  3195,  3196,     0,     0,    55,
       0,     0,     0,  3209,     0,     0,     0,     0,     0,   897,
    1367,  4238,     0,     0,     0,     0,  4239,   897,     0,     0,
       0,     0,  4240,  1934,     0,  1935,  1936,  1937,     0,     0,
       0,     0,  3888,     0,  1938,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   897,   897,     0,     0,     0,     0,
       0,  3313,  4241,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,  1344,     0,     0,  1345,    32,
     897,     0,     0,     0,     0,     0,     0,  1796,     0,   948,
     897,     0,   897,     0,   897,     0,     0,     0,     0,     0,
       0,    33,     0,     0,    34,     0,    35,     0,     0,    36,
    1799,  1800,     0,     0,     0,  1939,     0,     0,     0,    37,
      38,     0,     0,     0,     0,     0,     0,     0,   897,    39,
       0,    40,     0,   897,     0,   897,     0,     0,     0,     0,
      41,  4242,     0,     0,     0,     0,    42,     0,     0,     0,
       0,     0,     0,     0,    43,     0,     0,     0,     0,    44,
      45,    46,     0,     0,     0,     0,     0,     0,     0,     0,
     897,  3066,     0,     0,     0,  3077,     0,     0,  1940,  1941,
    3082,     0,     0,     0,     0,     0,  1108,     0,     0,  -607,
       0,  4243,    47,     0,     0,     0,     0,     0,  3352,    48,
       0,     0,     0,     0,     0,  3131,  3132,  3133,  3134,     0,
       0,     0,     0,   897,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,  3353,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3168,     0,     0,
       0,     0,     0,    50,     0,     0,     0,     0,  4244,     0,
       0,   897,     0,     0,     0,    51,     0,     0,     0,    52,
       0,     0,     0,     0,     0,  3082,  3082,    53,     0,     0,
       0,     0,     0,    54,     0,  3354,     0,     0,  3355,     0,
       0,     0,     0,     0,   897,     0,  3356,     0,     0,     0,
      55,     0,  3227,     0,     0,     0,     0,     0,    56,     0,
    3770,  3771,     0,     0,     0,  3357,     0,     0,     0,     0,
       0,     0,     0,     0,    57,    58,    59,    60,     0,     0,
    1942,     0,     0,     0,     0,     0,     0,     0,     0,    61,
       0,     0,     0,     0,     0,     0,  1347,  1943,  1944,     0,
       0,     0,     0,     0,     0,  3341,     0,     0,     0,     0,
    4245,     0,  3358,     0,  3349,  3350,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   897,    62,     0,  3359,     0,
       0,     0,     0,     0,  -759,  3387,  3388,     0,  3389,     0,
       0,  3392,  3393,  3394,  3395,  3396,     0,     0,     0,     0,
       0,     0,  4246,  4247,     0,     0,     0,  3402,     0,     0,
       0,     0,  3403,     0,  3404,    63,  3405,  3406,     0,  3407,
       0,     0,     0,     0,  3412,  3413,  3414,     0,     0,     0,
    3417,  3418,  3419,  3360,  3420,     0,  3422,     0,  3424,     0,
    3426,     0,  3427,     0,     0,     0,     0,  3430,     0,     0,
       0,     0,  3361,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3454,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    64,     0,     0,
       0,     0,     0,     0,     0,  3465,     0,     0,     0,     0,
       0,  2090,     0,     0,     0,  3662,     0,  3663,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3362,
    3363,  3364,     0,     0,     0,     0,  3365,     0,     0,  3366,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3076,  3076,     0,     0,     0,     0,     0,     0,
       0,  3367,  3368,     0,  3517,     0,     0,  3518,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   897,     0,  3369,     0,     0,
       0,     1,     0,     0,     2,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,   948,   948,   948,     0,   897,     0,
     897,     0,     0,   897,   897,     0,   897,     5,     6,     0,
       0,     0,     0,     0,     0,     7,     0,   897,     0,     0,
       8,     9,   897,     0,     0,   897,     0,     0,   897,   897,
       0,     0,     0,     0,     0,  3807,    10,     0,  2388,     0,
       0,  3370,     0,     0,     0,     0,     0,  2320,     0,     0,
     897,     0,     0,     0,     0,     0,    11,     0,     0,     0,
       0,     0,     0,     0,     0,   897,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,    14,
     897,     0,     0,     0,     0,     0,     0,  4504,     0,     0,
      15,    16,     0,     0,     0,     0,     0,   897,     0,     0,
       0,  3371,  3892,  3893,  3894,  3895,  2404,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    18,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3372,
       0,  3664,     0,     0,   897,   897,     0,    19,     0,     0,
       0,     0,     0,  3675,     0,  3682,  3683,  3684,  3685,     0,
    3687,  3688,     0,     0,     0,    20,     0,    21,     0,     0,
       0,     0,    22,     0,     0,    23,     0,     0,     0,  1723,
    1747,  1748,  3373,     0,     0,     0,     0,     0,     0,     0,
      24,     0,     0,     0,     0,     0,     0,     0,    25,     0,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  -913,  -913,  1750,     0,     0,     0,
       0,    27,     0,     0,  -913,     0,   897,     0,     0,     0,
    1753,     0,     0,     0,  3782,     0,  1754,  1755,    28,     0,
    1756,     0,    29,     0,     0,     0,     0,  3788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1758,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1759,     0,
       0,     0,  1760,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3198,
       0,  1765,     0,     0,  1744,     0,  1745,     0,     0,     0,
       0,     0,     0,     0,     0,  1494,     0,     0,  1723,  1747,
    1748,     0,   897,   897,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2901,     0,     0,     0,     0,     0,     0,
    1749,     0,     0,     0,     0,  1750,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,  1753,
       0,     0,    32,     0,     0,  1754,  1755,     0,  1769,  1756,
       0,     0,     0,     0,     0,  1770,     0,     0,  1757,     0,
       0,     0,     0,     0,    33,     0,     0,    34,   948,    35,
    3076,  3076,    36,  1758,     0,  1771,     0,     0,     0,     0,
       0,     0,    37,    38,     0,     0,     0,  1759,     0,     0,
       0,  1760,    39,     0,    40,     0,  3922,     0,     0,  1761,
       0,     0,     0,    41,  3925,     0,  3199,     0,     0,    42,
       0,     0,     0,     0,  1764,     0,     0,    43,     0,     0,
    1765,     0,    44,    45,    46,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1773,     0,     0,     0,     0,     0,
       0,  3955,  3956,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1774,     0,  1767,    47,     0,     0,     0,     0,
       0,     0,    48,     0,     0,     0,     0,  3981,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3992,     0,  3994,
       0,  3996,    49,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1769,     0,     0,
       0,     0,     0,     0,  1770,   897,    50,  1778,     0,     0,
       0,     0,     0,     0,     0,     0,  1779,     0,    51,     0,
       0,     0,    52,     0,  1771,     0,     0,     0,     0,   897,
      53,   897,     0,     0,     0,     0,    54,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1772,     0,     0,
       0,     0,     0,    55,     0,  3237,     0,  2320,     0,     0,
       0,    56,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1773,     0,     0,     0,     0,     0,     0,
       0,     0,    61,     0,     0,  1784,     0,     0,     0,     0,
    4078,  1774,     0,     0,     0,  1775,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    62,
       0,     0,     0,     0,     0,     0,     0,     0,  2262,     0,
     897,     0,     0,     0,     0,     0,     0,     0,     0,  1777,
       0,  1785,  1786,  1787,  1788,     0,  1778,     0,     0,  1789,
    4371,  4372,     0,     0,     0,  1779,     0,     0,     0,     0,
       0,     0,   897,     0,     0,     0,  1790,     0,     0,  1791,
       0,     0,  4138,     0,     0,     0,     0,     0,     0,     0,
       0,  1494,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1781,     0,     0,  1793,     0,     0,     0,     0,
       0,  4168,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2901,     0,
      64,     0,     0,     0,  1784,   897,     0,     0,   897,     0,
       0,     0,  4183,  1723,  1747,  1748,     0,     0,     0,     0,
       0,   897,     0,     0,     0,     0,     0,  3238,  3239,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1750,     0,     0,     0,     0,     0,     0,     0,  4922,     0,
    1785,  1786,  1787,  1788,  1753,     0,     0,     0,  1789,     0,
    1754,  1755,   897,   897,  1756,   897,     0,     0,     0,     0,
     897,     0,     0,     0,     0,  1790,     0,     0,  1791,     0,
       0,     0,     0,     0,     0,     0,     0,  1796,  1758,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1759,     0,     0,     0,  1760,     0,     0,     0,
    1799,  1800,     0,     0,  1793,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1765,  2388,     0,     0,     0,
       0,     0,     0,  2388,     0,  2388,     0,     0,  1794,     0,
       0,  1795,     0,  2388,  4342,     0,     0,     0,  2388,  2388,
       0,  2388,     0,  2388,     0,     0,  2388,  2388,  2388,  2388,
    2388,  2388,  2388,     0,  2388,  2388,  2388,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   897,     0,
    4382,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1769,     0,     0,     0,     0,     0,     0,  1770,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4412,     0,     0,     0,  1796,     0,     0,  1771,
     897,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1799,
    1800,     0,     0,     0,     0,  4426,     0,  2404,     0,     0,
    4431,  4432,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4656,  4657,     0,  4439,     0,   897,     0,     0,  4441,
       0,  5171,  4442,     0,     0,  4443,  4444,     0,  1773,     0,
       0,  5182,     0,     0,  3240,     0,     0,     0,  3241,     0,
    3242,     0,     0,  3243,     0,     0,  1774,  4456,     0,     0,
       0,     0,  3244,     0,     0,     0,   897,  3245,  3246,  3247,
    3248,  3249,  3250,  3251,  3252,  3253,  3254,  3255,  3256,  3257,
    3258,  3259,  3260,  3261,  3262,  3263,  3264,  3265,  3266,  3267,
    3268,  3269,  3270,  3271,  3272,     0,     0,  4499,     0,     0,
       0,     0,     0,     0,     0,  3273,     0,     0,     0,     0,
       0,  1778,     0,     0,  2320,     0,     0,     0,     0,     0,
    1779,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   897,     0,     0,     0,     0,     0,  5171,  5171,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4544,  4547,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4554,  4555,     0,  4557,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   897,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   947,     0,     0,     0,     0,  1784,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   897,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4602,     0,     0,     0,     0,   897,     0,
     897,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     897,     0,  5171,  5171,     0,  1785,  1786,  1787,  1788,     0,
       0,     0,     0,  1789,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1790,     0,     0,  1791,  4635,     0,     0,  5302,     0,     0,
    3713,  3714,     0,     0,     0,     0,  3715,     0,  3716,     0,
    3717,  3718,     0,     0,     0,     0,     0,     0,     0,  5316,
       0,     0,  5319,     0,     0,     0,     0,     0,  3719,  1793,
       0,     0,     0,     0,     0,     0,   897,     0,  5171,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4683,
    4684,     0,     0,  5171,   897,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5171,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3720,     0,
       0,  3721,     0,     0,     0,     0,     0,     0,   897,  3722,
       0,     0,     0,     0,     0,     0,     0,     0,   897,  5171,
       0,     0,     0,     0,     0,     0,     0,     0,  3357,     0,
       0,  5171,  5171,  3713,  3714,     0,     0,     0,     0,  3715,
    5171,  3716,     0,  3717,  3718,  3723,     0,     0,     0,     0,
       0,     0,     0,  5171,     0,  2388,  2388,  2388,  2388,     0,
     897,  3719,     0,  5171,     0,     0,     0,     0,     0,     0,
    5420,  1796,     0,  3724,     0,  3725,     0,     0,   897,     0,
       0,     0,     0,     0,     0,  5171,     0,  5171,     0,     0,
       0,  3726,  3727,     0,  1799,  1800,  5171,     0,     0,     0,
       0,     0,     0,  5171,     0,  5171,     0,  5171,     0,     0,
       0,  3720,     0,     0,  3721,     0,     0,     0,     0,     0,
       0,     0,  3722,  5171,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3728,     0,     0,     0,  5171,  5171,     0,
       0,  3357,     0,     0,   897,     0,  3729,     0,     0,     0,
       0,     0,     0,     0,  5171,  5171,     0,     0,  3723,  5171,
       0,     0,     0,     0,     0,  3730,     0,     0,     0,     0,
       0,     0,     0,     0,  3731,  3732,     0,  3733,     0,     0,
       0,     0,  2320,     0,     0,     0,  3724,     0,  3725,     0,
       0,     0,     0,  5298,   897,     0,     0,     0,     0,     0,
       0,  3076,     0,     0,  3726,  3727,  4804,     0,  4806,     0,
       0,     0,     0,  3734,  3735,  3736,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3737,  3738,  3739,     0,  4824,     0,     0,  3740,
       0,     0,  3741,     0,     0,     0,  3728,     0,  4833,  4138,
       0,     0,     0,     0,     0,     0,     0,  5565,     0,  3729,
    3742,  3743,  5024,  5025,  5026,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3730,     0,
       0,     0,     0,     0,     0,     0,     0,  3731,  3732,     0,
    3733,     0,     0,     0,  3744,  3745,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4878,     0,     0,
    3369,     0,     0,     0,     0,     0,  3734,  3735,  3736,     0,
       0,     0,     0,     0,  3082,  3082,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3737,  3738,  3739,     0,  4886,
       0,     0,  3740,     0,     0,  3741,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4893,     0,     0,
       0,     0,     0,  3742,  3743,     0,     0,     0,     0,     0,
    2388,     0,  3746,     0,     0,     0,  3747,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3748,     0,
       0,     0,     0,     0,     0,     0,     0,  3744,  3745,  4930,
       0,     0,  5117,     0,     0,  5120,  5121,  5122,  5123,     0,
       0,     0,  2404,     0,     0,  4943,     0,     0,     0,     0,
       0,     0,     0,  3369,     0,     0,     0,     0,  4544,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3749,     0,
       0,  3750,     0,     0,  3751,  3752,  3753,  3754,     0,     0,
       0,     0,     0,     0,  3713,  3714,     0,     0,     0,     0,
    3715,     0,  3716,     0,  3717,  3718,     0,     0,     0,  4544,
    4544,     0,  4544,     0,     0,  3746,     0,  4986,     0,  3747,
       0,     0,  3719,  4988,     0,     0,     0,  3755,  3756,     0,
       0,  3748,     0,     0,  5224,     0,     0,     0,     0,     0,
       0,     0,     0,  5234,  5235,     0,     0,     0,     0,     0,
       0,     0,  5243,     0,  5023,  3757,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3720,     0,     0,  3721,     0,     0,     0,     0,
       0,     0,     0,  3722,     0,     0,     0,     0,     0,     0,
       0,  3749,     0,     0,  3750,     0,     0,  3751,  3752,  3753,
    3754,     0,  3357,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3723,
       0,     0,     0,  5060,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3755,  3756,     0,     0,     0,  2404,     0,  3724,     0,  3725,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3726,  3727,     0,  3757,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5105,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3728,     0,     0,
       0,     0,     0,     0,  3758,     0,     0,     0,     0,     0,
    3729,     0,     0,  3082,  3082,     0,     0,     0,     0,     0,
       0,     0,     0,  5141,  5490,     0,     0,     0,     0,  3730,
       0,     0,     0,     0,     0,     0,     0,     0,  3731,  3732,
       0,  3733,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5199,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3734,  3735,  3736,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3737,  3738,  3739,     0,
       0,     0,     0,  3740,     0,  5233,  3741,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3758,     0,     0,
       0,     0,     0,     0,  3742,  3743,     0,     0,  5248,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3744,  3745,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5280,     0,
       0,     0,     0,     0,  3369,     0,     0,     0,     0,     0,
       0,     0,     0,   948,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5314,  5315,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5329,     0,  5330,     0,     0,
       0,     0,     0,     0,     0,     0,  3746,  5338,     0,     0,
    3747,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3748,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3749,  5405,     0,  3750,     0,     0,  3751,  3752,
    3753,  3754,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5410,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3755,  3756,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5433,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3757,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5482,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5496,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   244,   245,     0,   744,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     745,  5546,   254,   255,   256,   257,   746,   259,     0,   260,
       0,     0,   747,   261,   748,   749,   750,   262,   751,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   752,   753,   270,   271,     0,   272,   273,   754,   755,
     275,     0,   276,   277,   278,   279,   756,   281,  3758,   757,
     283,  2320,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   758,   759,   302,     0,     0,     0,   760,
     303,   761,     0,   304,   762,   763,     0,   305,   306,   307,
     764,   765,   766,     0,     0,     0,     0,   767,   310,   768,
       0,     0,   769,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   770,     0,
     337,   338,   339,   340,   341,   771,   772,   342,   343,     0,
     344,   345,   346,   347,   348,   773,     0,   349,   350,     0,
       0,     0,   774,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   775,   357,   776,     0,   359,     0,   360,     0,
     777,     0,   361,   362,     0,   363,   778,     0,   364,   365,
       0,     0,     0,   779,   367,   368,   369,   780,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   781,   374,
     375,   376,   782,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   783,   387,
     388,     0,     0,     0,     0,     0,   784,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   785,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   786,   396,   397,   398,   399,
     787,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   788,   407,     0,     0,   789,   409,   790,   410,     0,
     411,   791,   792,   793,   794,   795,   416,   417,   418,   419,
     420,     0,   796,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   797,   798,   799,   428,   429,     0,   800,   801,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   802,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   803,   804,   451,   805,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   806,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   807,   808,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   809,     0,   810,   495,   496,   497,   498,     0,   499,
     811,   812,   501,   502,   503,   504,     0,   813,   506,    42,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     814,   815,   535,   536,     0,     0,   537,   538,   816,   540,
     541,   542,   817,   818,   543,   544,   545,   546,   819,   547,
     548,     0,    49,   549,   550,   551,   552,     0,   820,   553,
     554,     0,   821,   822,   823,   824,     0,     0,     0,     0,
       0,   559,   560,     0,   825,   826,   827,   562,   563,     0,
     828,   564,   565,   829,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   830,   574,
       0,     0,   831,   832,   833,   575,  1333,   576,     0,     0,
     577,   835,     0,   836,   578,     0,   579,   580,   837,   838,
       0,     0,     0,    55,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   839,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   840,   841,     0,   597,   598,   599,   842,   600,   601,
     602,     0,   603,   843,   844,   604,   845,   605,     0,   846,
     847,   848,   849,   850,   606,   607,     0,   851,   608,   852,
     609,   853,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   854,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   855,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   856,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   857,   858,     0,     0,     0,     0,   860,     0,
     861,     0,     0,     0,   862,     0,     0,     0,   863,   864,
     244,   245,     0,   744,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   745,     0,
     254,   255,   256,   257,   746,   259,     0,   260,     0,     0,
     747,   261,   748,   749,   750,   262,   751,     0,   263,   264,
     265,  1999,   266,     0,   267,   268,     0,     0,   269,   752,
     753,   270,   271,     0,   272,   273,   754,   755,   275,     0,
     276,   277,   278,   279,   756,   281,     0,   757,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   758,   759,   302,     0,     0,     0,   760,   303,   761,
       0,   304,   762,   763,     0,   305,   306,   307,   764,   765,
     766,     0,     0,     0,     0,   767,   310,   768,     0,     0,
     769,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   770,     0,   337,   338,
     339,   340,   341,   771,   772,   342,   343,     0,   344,   345,
     346,   347,   348,   773,     0,   349,   350,     0,     0,     0,
     774,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     775,   357,   776,     0,   359,     0,   360,     0,   777,     0,
     361,   362,     0,   363,   778,     0,   364,   365,     0,     0,
       0,   779,   367,   368,   369,   780,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   781,   374,   375,   376,
     782,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,  2000,   386,     0,   783,   387,   388,     0,
       0,     0,     0,     0,   784,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   786,   396,   397,   398,   399,   787,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   788,
     407,     0,     0,   789,   409,   790,   410,     0,   411,   791,
     792,   793,   794,   795,   416,   417,   418,   419,   420,     0,
     796,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     797,   798,   799,   428,   429,     0,   800,   801,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   802,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   803,   804,   451,   805,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   806,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   807,
     808,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   809,
       0,   810,   495,   496,   497,   498,     0,   499,   811,   812,
     501,   502,   503,   504,     0,   813,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   814,   815,
     535,   536,     0,     0,   537,   538,   816,   540,   541,   542,
     817,   818,   543,   544,   545,   546,   819,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   820,   553,   554,     0,
     821,   822,   823,   824,     0,     0,     0,     0,  2001,   559,
     560,     0,   825,   826,   827,   562,   563,     0,   828,   564,
     565,   829,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   830,   574,     0,     0,
     831,   832,   833,   575,   834,   576,     0,     0,   577,   835,
       0,   836,   578,     0,   579,   580,   837,   838,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   839,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   840,
     841,     0,   597,   598,   599,   842,   600,   601,   602,     0,
     603,   843,   844,   604,   845,   605,     0,   846,   847,   848,
     849,   850,   606,   607,     0,   851,   608,   852,   609,   853,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   854,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   855,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   856,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,     0,     0,     0,     0,     0,
     857,   858,     0,     0,     0,     0,   860,     0,   861,     0,
       0,     0,   862,     0,     0,     0,   863,   864,   244,   245,
       0,   744,   247,   248,   249,   250,  2256,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   745,     0,   254,   255,
     256,   257,   746,   259,     0,   260,     0,     0,  2257,   261,
     748,   749,   750,   262,   751,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   752,   753,   270,
     271,     0,   272,   273,   754,   755,   275,     0,   276,   277,
     278,   279,   756,   281,     0,   757,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   758,
     759,   302,     0,     0,     0,   760,   303,   761,     0,   304,
     762,   763,     0,   305,   306,   307,   764,   765,   766,     0,
       0,     0,     0,   767,   310,   768,     0,     0,  2258,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   770,     0,   337,   338,   339,   340,
     341,   771,   772,   342,   343,     0,   344,   345,   346,   347,
     348,   773,     0,   349,   350,     0,     0,     0,   774,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   775,   357,
     776,     0,   359,     0,   360,     0,   777,     0,   361,   362,
       0,   363,   778,     0,   364,   365,     0,     0,     0,   779,
     367,   368,   369,   780,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   781,   374,   375,   376,   782,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   783,   387,   388,     0,     0,     0,
       0,     0,   784,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   785,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   786,   396,   397,   398,   399,   787,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   788,   407,     0,
       0,   789,   409,   790,   410,     0,   411,   791,   792,   793,
     794,   795,   416,   417,   418,   419,   420,     0,   796,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   797,   798,
     799,   428,   429,     0,   800,   801,   430,     0,   431,   432,
    2259,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   802,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   803,   804,   451,   805,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   806,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   807,   808,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   809,     0,   810,
     495,   496,   497,   498,     0,   499,  2260,   812,   501,   502,
     503,   504,     0,   813,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   814,   815,   535,   536,
       0,     0,   537,   538,   816,   540,   541,   542,   817,   818,
     543,   544,   545,   546,   819,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   820,   553,   554,     0,   821,   822,
     823,   824,     0,     0,     0,     0,     0,   559,   560,     0,
     825,   826,   827,   562,   563,     0,   828,   564,   565,   829,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   830,   574,     0,     0,   831,   832,
     833,   575,   834,   576,     0,     0,   577,   835,     0,   836,
     578,     0,   579,   580,   837,   838,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   839,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   840,   841,     0,
     597,   598,   599,   842,   600,   601,   602,     0,   603,   843,
     844,   604,   845,   605,     0,   846,   847,   848,   849,   850,
     606,   607,     0,   851,   608,   852,   609,   853,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,  2261,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   854,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   855,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   856,   702,     0,   703,     0,   704,     0,   705,
       0,   706,     0,     0,     0,     0,     0,     0,   857,   858,
       0,     0,     0,     0,   860,     0,   861,     0,     0,     0,
     862,     0,     0,     0,   863,   864,   244,   245,     0,   744,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   745,     0,   254,   255,   256,   257,
     746,   259,     0,   260,     0,     0,   747,   261,   748,   749,
     750,   262,   751,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   752,   753,   270,   271,     0,
     272,   273,   754,   755,   275,     0,   276,   277,   278,   279,
     756,   281,     0,   757,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   758,   759,   302,
       0,     0,     0,   760,   303,   761,     0,   304,   762,   763,
       0,   305,   306,   307,   764,   765,   766,     0,     0,     0,
       0,   767,   310,   768,     0,     0,   769,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   770,     0,   337,   338,   339,   340,   341,   771,
     772,   342,   343,     0,   344,   345,   346,   347,   348,   773,
       0,   349,   350,     0,     0,     0,   774,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   775,   357,   776,     0,
     359,     0,   360,     0,   777,     0,   361,   362,     0,   363,
     778,     0,   364,   365,     0,     0,     0,   779,   367,   368,
     369,   780,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   781,   374,   375,   376,   782,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   783,   387,   388,     0,     0,     0,     0,     0,
     784,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   786,
     396,   397,   398,   399,   787,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   788,   407,     0,     0,   789,
     409,   790,   410,     0,   411,   791,   792,   793,   794,   795,
     416,   417,   418,   419,   420,     0,   796,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   797,   798,   799,   428,
     429,     0,   800,   801,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   802,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   803,
     804,   451,   805,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   806,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   807,   808,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   809,     0,   810,   495,   496,
     497,   498,     0,   499,   811,   812,   501,   502,   503,   504,
       0,   813,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   814,   815,   535,   536,     0,     0,
     537,   538,   816,   540,   541,   542,   817,   818,   543,   544,
     545,   546,   819,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   820,   553,   554,     0,   821,   822,   823,   824,
       0,     0,     0,     0,     0,   559,   560,     0,   825,   826,
     827,   562,   563,     0,   828,   564,   565,   829,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   830,   574,     0,     0,   831,   832,   833,   575,
     834,   576,     0,     0,   577,   835,     0,   836,   578,     0,
     579,   580,   837,   838,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     839,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   840,   841,     0,   597,   598,
     599,   842,   600,   601,   602,     0,   603,   843,   844,   604,
     845,   605,     0,   846,   847,   848,   849,   850,   606,   607,
       0,   851,   608,   852,   609,   853,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   854,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   855,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     856,   702,     0,   703,     0,   704,     0,   705,     0,   706,
       0,     0,     0,     0,     0,     0,   857,   858,   859,     0,
       0,     0,   860,     0,   861,     0,     0,     0,   862,     0,
       0,     0,   863,   864,   244,   245,     0,   744,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   745,     0,   254,   255,   256,   257,   746,   259,
       0,   260,     0,     0,   747,   261,   748,   749,   750,   262,
     751,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   752,   753,   270,   271,     0,   272,   273,
     754,   755,   275,     0,   276,   277,   278,   279,   756,   281,
       0,   757,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   758,   759,   302,     0,     0,
       0,   760,   303,   761,     0,   304,   762,   763,     0,   305,
     306,   307,   764,   765,   766,     0,     0,     0,     0,   767,
     310,   768,     0,     0,   769,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     770,     0,   337,   338,   339,   340,   341,   771,   772,   342,
     343,     0,   344,   345,   346,   347,   348,   773,     0,   349,
     350,     0,     0,     0,   774,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   775,   357,   776,     0,   359,     0,
     360,     0,   777,     0,   361,   362,     0,   363,   778,     0,
     364,   365,     0,     0,     0,   779,   367,   368,   369,   780,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     781,   374,   375,   376,   782,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     783,   387,   388,     0,     0,     0,     0,     0,   784,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   786,   396,   397,
     398,   399,   787,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   788,   407,     0,     0,   789,   409,   790,
     410,     0,   411,   791,   792,   793,   794,   795,   416,   417,
     418,   419,   420,     0,   796,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   797,   798,   799,   428,   429,     0,
     800,   801,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   802,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   803,   804,   451,
     805,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   806,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   807,   808,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   809,     0,   810,   495,   496,   497,   498,
       0,   499,   811,   812,   501,   502,   503,   504,     0,   813,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   814,   815,   535,   536,     0,     0,   537,   538,
     816,   540,   541,   542,   817,   818,   543,   544,   545,   546,
     819,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     820,   553,   554,     0,   821,   822,   823,   824,     0,     0,
       0,     0,     0,   559,   560,     0,   825,   826,   827,   562,
     563,     0,   828,   564,   565,   829,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     830,   574,     0,     0,   831,   832,   833,   575,   834,   576,
       0,     0,   577,   835,     0,   836,   578,     0,   579,   580,
     837,   838,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   839,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   840,   841,     0,   597,   598,   599,   842,
     600,   601,   602,     0,   603,   843,   844,   604,   845,   605,
       0,   846,   847,   848,   849,   850,   606,   607,     0,   851,
     608,   852,   609,   853,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   854,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   855,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   856,   702,
       0,   703,     0,   704,     0,   705,     0,   706,     0,     0,
       0,     0,     0,     0,   857,   858,  2642,     0,     0,     0,
     860,     0,   861,     0,     0,     0,   862,     0,     0,     0,
     863,   864,   244,   245,     0,   744,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     745,     0,   254,   255,   256,   257,   746,   259,     0,   260,
       0,     0,   747,   261,   748,   749,   750,   262,   751,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   752,   753,   270,   271,     0,   272,   273,   754,   755,
     275,     0,   276,   277,   278,   279,   756,   281,     0,   757,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   758,   759,   302,     0,     0,     0,   760,
     303,   761,     0,   304,   762,   763,     0,   305,   306,   307,
     764,   765,   766,     0,     0,     0,     0,   767,   310,   768,
       0,     0,   769,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   770,     0,
     337,   338,   339,   340,   341,   771,   772,   342,   343,     0,
     344,   345,   346,   347,   348,   773,     0,   349,   350,     0,
       0,     0,   774,   352,  2698,   353,     0,     0,     0,   354,
       0,   355,   775,   357,   776,     0,   359,     0,   360,     0,
     777,     0,   361,   362,     0,   363,   778,     0,   364,   365,
       0,     0,     0,   779,   367,   368,   369,   780,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   781,   374,
     375,   376,   782,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   783,   387,
     388,     0,     0,     0,     0,     0,   784,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   785,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   786,   396,   397,   398,   399,
     787,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   788,   407,     0,     0,   789,   409,   790,   410,     0,
     411,   791,   792,   793,   794,   795,   416,   417,   418,   419,
     420,     0,   796,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   797,   798,   799,   428,   429,     0,   800,   801,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   802,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   803,   804,   451,   805,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   806,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   807,   808,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   809,     0,   810,   495,   496,   497,   498,     0,   499,
     811,   812,   501,   502,   503,   504,     0,   813,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     814,   815,   535,   536,     0,     0,   537,   538,   816,   540,
     541,   542,   817,   818,   543,   544,   545,   546,   819,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   820,   553,
     554,     0,   821,   822,   823,   824,     0,     0,     0,     0,
       0,   559,   560,     0,   825,   826,   827,   562,   563,     0,
     828,   564,   565,   829,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   830,   574,
       0,     0,   831,   832,   833,   575,   834,   576,     0,     0,
     577,   835,     0,   836,   578,     0,   579,   580,   837,   838,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   839,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   840,   841,     0,   597,   598,   599,   842,   600,   601,
     602,     0,   603,   843,   844,   604,   845,   605,     0,   846,
     847,   848,   849,   850,   606,   607,     0,   851,   608,   852,
     609,   853,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   854,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   855,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   856,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   857,   858,     0,     0,     0,     0,   860,     0,
     861,     0,     0,     0,   862,     0,     0,     0,   863,   864,
     244,   245,     0,   744,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   745,     0,
     254,   255,   256,   257,   746,   259,     0,   260,     0,     0,
     747,   261,   748,   749,   750,   262,   751,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   752,
     753,   270,   271,     0,   272,   273,   754,   755,   275,     0,
     276,   277,   278,   279,   756,   281,     0,   757,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   758,   759,   302,     0,     0,     0,   760,   303,   761,
       0,   304,   762,   763,     0,   305,   306,   307,   764,   765,
     766,     0,     0,     0,     0,   767,   310,   768,     0,     0,
     769,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   770,     0,   337,   338,
     339,   340,   341,   771,   772,   342,   343,     0,   344,   345,
     346,   347,   348,   773,     0,   349,   350,     0,     0,     0,
     774,   352,  2700,   353,     0,     0,     0,   354,     0,   355,
     775,   357,   776,     0,   359,     0,   360,     0,   777,     0,
     361,   362,     0,   363,   778,     0,   364,   365,     0,     0,
       0,   779,   367,   368,   369,   780,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   781,   374,   375,   376,
     782,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   783,   387,   388,     0,
       0,     0,     0,     0,   784,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   786,   396,   397,   398,   399,   787,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   788,
     407,     0,     0,   789,   409,   790,   410,     0,   411,   791,
     792,   793,   794,   795,   416,   417,   418,   419,   420,     0,
     796,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     797,   798,   799,   428,   429,     0,   800,   801,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   802,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   803,   804,   451,   805,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   806,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   807,
     808,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   809,
       0,   810,   495,   496,   497,   498,     0,   499,   811,   812,
     501,   502,   503,   504,     0,   813,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   814,   815,
     535,   536,     0,     0,   537,   538,   816,   540,   541,   542,
     817,   818,   543,   544,   545,   546,   819,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   820,   553,   554,     0,
     821,   822,   823,   824,     0,     0,     0,     0,     0,   559,
     560,     0,   825,   826,   827,   562,   563,     0,   828,   564,
     565,   829,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   830,   574,     0,     0,
     831,   832,   833,   575,   834,   576,     0,     0,   577,   835,
       0,   836,   578,     0,   579,   580,   837,   838,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   839,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   840,
     841,     0,   597,   598,   599,   842,   600,   601,   602,     0,
     603,   843,   844,   604,   845,   605,     0,   846,   847,   848,
     849,   850,   606,   607,     0,   851,   608,   852,   609,   853,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   854,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   855,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   856,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,     0,     0,     0,     0,     0,
     857,   858,     0,     0,     0,     0,   860,     0,   861,     0,
       0,     0,   862,     0,     0,     0,   863,   864,   244,   245,
       0,   744,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   745,     0,   254,   255,
     256,   257,   746,   259,     0,   260,     0,     0,   747,   261,
     748,   749,   750,   262,   751,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   752,   753,   270,
     271,     0,   272,   273,   754,   755,   275,     0,   276,   277,
     278,   279,   756,   281,     0,   757,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   758,
     759,   302,     0,     0,     0,   760,   303,   761,     0,   304,
     762,   763,     0,   305,   306,   307,   764,   765,   766,     0,
       0,     0,     0,   767,   310,   768,     0,     0,   769,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   770,     0,   337,   338,   339,   340,
     341,   771,   772,   342,   343,     0,   344,   345,   346,   347,
     348,   773,     0,   349,   350,     0,     0,     0,   774,   352,
    2702,   353,     0,     0,     0,   354,     0,   355,   775,   357,
     776,     0,   359,     0,   360,     0,   777,     0,   361,   362,
       0,   363,   778,     0,   364,   365,     0,     0,     0,   779,
     367,   368,   369,   780,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   781,   374,   375,   376,   782,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   783,   387,   388,     0,     0,     0,
       0,     0,   784,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   785,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   786,   396,   397,   398,   399,   787,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   788,   407,     0,
       0,   789,   409,   790,   410,     0,   411,   791,   792,   793,
     794,   795,   416,   417,   418,   419,   420,     0,   796,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   797,   798,
     799,   428,   429,     0,   800,   801,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   802,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   803,   804,   451,   805,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   806,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   807,   808,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   809,     0,   810,
     495,   496,   497,   498,     0,   499,   811,   812,   501,   502,
     503,   504,     0,   813,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   814,   815,   535,   536,
       0,     0,   537,   538,   816,   540,   541,   542,   817,   818,
     543,   544,   545,   546,   819,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   820,   553,   554,     0,   821,   822,
     823,   824,     0,     0,     0,     0,     0,   559,   560,     0,
     825,   826,   827,   562,   563,     0,   828,   564,   565,   829,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   830,   574,     0,     0,   831,   832,
     833,   575,   834,   576,     0,     0,   577,   835,     0,   836,
     578,     0,   579,   580,   837,   838,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   839,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   840,   841,     0,
     597,   598,   599,   842,   600,   601,   602,     0,   603,   843,
     844,   604,   845,   605,     0,   846,   847,   848,   849,   850,
     606,   607,     0,   851,   608,   852,   609,   853,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   854,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   855,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   856,   702,     0,   703,     0,   704,     0,   705,
       0,   706,     0,     0,     0,     0,     0,     0,   857,   858,
       0,     0,     0,     0,   860,     0,   861,     0,     0,     0,
     862,     0,     0,     0,   863,   864,   244,   245,     0,   744,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   745,     0,   254,   255,   256,   257,
     746,   259,     0,   260,     0,     0,   747,   261,   748,   749,
     750,   262,   751,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   752,   753,   270,   271,     0,
     272,   273,   754,   755,   275,     0,   276,   277,   278,   279,
     756,   281,     0,   757,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   758,   759,   302,
       0,     0,     0,   760,   303,   761,     0,   304,   762,   763,
       0,   305,   306,   307,   764,   765,   766,     0,     0,     0,
       0,   767,   310,   768,     0,     0,   769,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   770,     0,   337,   338,   339,   340,   341,   771,
     772,   342,   343,     0,   344,   345,   346,   347,   348,   773,
       0,   349,   350,     0,     0,     0,   774,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   775,   357,   776,     0,
     359,     0,   360,     0,   777,     0,   361,   362,     0,   363,
     778,     0,   364,   365,     0,     0,     0,   779,   367,   368,
     369,   780,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   781,   374,   375,   376,   782,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   783,   387,   388,     0,     0,     0,     0,     0,
     784,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   786,
     396,   397,   398,   399,   787,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   788,   407,     0,     0,   789,
     409,   790,   410,     0,   411,   791,   792,   793,   794,   795,
     416,   417,   418,   419,   420,     0,   796,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   797,   798,   799,   428,
     429,     0,   800,   801,   430,     0,   431,   432,  4498,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   802,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   803,
     804,   451,   805,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   806,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   807,   808,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   809,     0,   810,   495,   496,
     497,   498,     0,   499,   811,   812,   501,   502,   503,   504,
       0,   813,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   814,   815,   535,   536,     0,     0,
     537,   538,   816,   540,   541,   542,   817,   818,   543,   544,
     545,   546,   819,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   820,   553,   554,     0,   821,   822,   823,   824,
       0,     0,     0,     0,     0,   559,   560,     0,   825,   826,
     827,   562,   563,     0,   828,   564,   565,   829,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   830,   574,     0,     0,   831,   832,   833,   575,
     834,   576,     0,     0,   577,   835,     0,   836,   578,     0,
     579,   580,   837,   838,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     839,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   840,   841,     0,   597,   598,
     599,   842,   600,   601,   602,     0,   603,   843,   844,   604,
     845,   605,     0,   846,   847,   848,   849,   850,   606,   607,
       0,   851,   608,   852,   609,   853,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   854,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   855,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     856,   702,     0,   703,     0,   704,     0,   705,     0,   706,
       0,     0,     0,     0,     0,     0,   857,   858,     0,     0,
       0,     0,   860,     0,   861,     0,     0,     0,   862,     0,
       0,     0,   863,   864,   244,   245,     0,   744,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   745,     0,   254,   255,   256,   257,   746,   259,
       0,   260,     0,     0,   747,   261,   748,   749,   750,   262,
     751,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   752,   753,   270,   271,     0,   272,   273,
     754,   755,   275,     0,   276,   277,   278,   279,   756,   281,
       0,   757,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   758,   759,   302,     0,     0,
    4542,   760,   303,   761,     0,   304,   762,   763,     0,   305,
     306,   307,   764,   765,   766,     0,     0,     0,     0,   767,
     310,   768,     0,     0,   769,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     770,     0,   337,   338,   339,   340,   341,   771,   772,   342,
     343,     0,   344,   345,   346,   347,   348,   773,     0,   349,
     350,     0,     0,     0,   774,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   775,   357,   776,     0,   359,     0,
     360,     0,   777,     0,   361,   362,     0,   363,   778,     0,
     364,   365,     0,     0,     0,   779,   367,   368,   369,   780,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     781,   374,   375,   376,   782,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     783,   387,   388,     0,     0,     0,     0,     0,   784,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   786,   396,   397,
     398,   399,   787,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   788,   407,     0,     0,   789,   409,   790,
     410,     0,   411,   791,   792,   793,   794,   795,   416,   417,
     418,   419,   420,     0,   796,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   797,   798,   799,   428,   429,     0,
     800,   801,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   802,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   803,   804,   451,
     805,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   806,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   807,   808,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   809,     0,   810,   495,  4543,   497,   498,
       0,   499,   811,   812,   501,   502,   503,   504,     0,   813,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   814,   815,   535,   536,     0,     0,   537,   538,
     816,   540,   541,   542,   817,   818,   543,   544,   545,   546,
     819,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     820,   553,   554,     0,   821,   822,   823,   824,     0,     0,
       0,     0,     0,   559,   560,     0,   825,   826,   827,   562,
     563,     0,   828,   564,   565,   829,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     830,   574,     0,     0,   831,   832,   833,   575,   834,   576,
       0,     0,   577,   835,     0,   836,   578,     0,   579,   580,
     837,   838,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   839,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   840,   841,     0,   597,   598,   599,   842,
     600,   601,   602,     0,   603,   843,   844,   604,   845,   605,
       0,   846,   847,   848,   849,   850,   606,   607,     0,   851,
     608,   852,   609,   853,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   854,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   855,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   856,   702,
       0,   703,     0,   704,     0,   705,     0,   706,     0,     0,
       0,     0,     0,     0,   857,   858,     0,     0,     0,     0,
     860,     0,   861,     0,     0,     0,   862,     0,     0,     0,
     863,   864,   244,   245,     0,   744,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     745,     0,   254,   255,   256,   257,   746,   259,     0,   260,
       0,     0,   747,   261,   748,   749,   750,   262,   751,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   752,   753,   270,   271,     0,   272,   273,   754,   755,
     275,     0,   276,   277,   278,   279,   756,   281,     0,   757,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   758,   759,   302,     0,     0,     0,   760,
     303,   761,     0,   304,   762,   763,     0,   305,   306,   307,
     764,   765,   766,     0,     0,     0,     0,   767,   310,   768,
       0,     0,   769,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   770,     0,
     337,   338,   339,   340,   341,   771,   772,   342,   343,     0,
     344,   345,   346,   347,   348,   773,     0,   349,   350,     0,
       0,     0,   774,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   775,   357,   776,     0,   359,     0,   360,     0,
     777,     0,   361,   362,     0,   363,   778,     0,   364,   365,
       0,     0,     0,   779,   367,   368,   369,   780,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   781,   374,
     375,   376,   782,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   783,   387,
     388,     0,     0,     0,     0,     0,   784,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   785,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   786,   396,   397,   398,   399,
     787,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   788,   407,     0,     0,   789,   409,   790,   410,     0,
     411,   791,   792,   793,   794,   795,   416,   417,   418,   419,
     420,     0,   796,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   797,   798,   799,   428,   429,     0,   800,   801,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   802,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   803,   804,   451,   805,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   806,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   807,   808,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   809,     0,   810,   495,   496,   497,   498,     0,   499,
     811,   812,   501,   502,   503,   504,     0,   813,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     814,   815,   535,   536,     0,     0,   537,   538,   816,   540,
     541,   542,   817,   818,   543,   544,   545,   546,   819,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   820,   553,
     554,     0,   821,   822,   823,   824,     0,     0,     0,     0,
       0,   559,   560,     0,   825,   826,   827,   562,   563,     0,
     828,   564,   565,   829,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   830,   574,
       0,     0,   831,   832,   833,   575,   834,   576,     0,     0,
     577,   835,     0,   836,   578,     0,   579,   580,   837,   838,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   839,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   840,   841,     0,   597,   598,   599,   842,   600,   601,
     602,     0,   603,   843,   844,   604,   845,   605,     0,   846,
     847,   848,   849,   850,   606,   607,     0,   851,   608,   852,
     609,   853,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   854,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   855,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   856,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   857,   858,     0,     0,     0,     0,   860,     0,
     861,     0,     0,     0,   862,     0,     0,     0,   863,   864,
     244,   245,     0,   744,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   745,     0,
     254,   255,   256,   257,   746,   259,     0,   260,     0,     0,
     747,   261,   748,   749,   750,   262,   751,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   752,
     753,   270,   271,     0,   272,   273,   754,   755,   275,     0,
     276,   277,   278,   279,   756,   281,     0,   757,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   758,   759,   302,     0,     0,     0,   760,   303,   761,
       0,   304,   762,   763,     0,   305,   306,   307,   764,   765,
     766,     0,     0,     0,     0,   767,   310,   768,     0,     0,
     769,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   770,     0,   337,   338,
     339,   340,   341,   771,   772,   342,   343,     0,   344,   345,
     346,   347,   348,   773,     0,   349,   350,     0,     0,     0,
     774,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     775,   357,   776,     0,   359,     0,   360,     0,   777,     0,
     361,   362,     0,   363,   778,     0,   364,   365,     0,     0,
       0,   779,   367,   368,   369,   780,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   781,   374,   375,   376,
     782,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   783,   387,   388,     0,
       0,     0,     0,     0,   784,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   786,   396,   397,   398,   399,   787,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   788,
     407,     0,     0,   789,   409,   790,   410,     0,   411,   791,
     792,   793,   794,   795,   416,   417,   418,   419,   420,     0,
     796,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     797,   798,   799,   428,   429,     0,   800,   801,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   802,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   803,   804,   451,   805,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   806,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   807,
     808,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   809,
       0,   810,   495,   496,   497,   498,     0,   499,   811,   812,
     501,   502,   503,   504,     0,   813,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   814,   815,
     535,   536,     0,     0,   537,   538,   816,   540,   541,   542,
     817,   818,   543,   544,   545,   546,   819,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   820,   553,   554,     0,
     821,   822,   823,   824,     0,     0,     0,     0,     0,   559,
     560,     0,   825,   826,   827,   562,   563,     0,   828,   564,
     565,   829,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   830,   574,     0,     0,
     831,   832,   833,   575,   834,   576,     0,     0,   577,   835,
       0,   836,   578,     0,   579,   580,   837,   838,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   839,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   840,
     841,     0,   597,   598,   599,   842,   600,   601,   602,     0,
     603,   843,   844,   604,   845,   605,     0,   846,   847,   848,
     849,   850,   606,   607,     0,   851,   608,   852,   609,   853,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   854,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   855,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   856,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,     0,     0,     0,     0,     0,
     857,   858,     0,     0,     0,     0,   860,     0,  1255,     0,
       0,     0,   862,     0,     0,     0,   863,   864,   244,   245,
       0,   744,   247,   248,   249,   250,  2056,     0,   251,     0,
       0,     0,     0,  2057,     0,     0,   745,     0,   254,   255,
     256,   257,   746,   259,     0,   260,     0,     0,   747,   261,
     748,   749,   750,   262,   751,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   752,   753,   270,
     271,     0,   272,   273,   754,   755,   275,     0,   276,   277,
     278,   279,   756,   281,     0,   757,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   758,
     759,   302,     0,     0,     0,   760,   303,   761,     0,   304,
     762,   763,     0,   305,   306,   307,   764,   765,   766,     0,
       0,     0,     0,   767,   310,   768,     0,     0,   769,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   770,     0,   337,   338,   339,   340,
     341,   771,   772,   342,   343,     0,   344,   345,   346,   347,
     348,   773,     0,   349,   350,     0,     0,     0,   774,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   775,   357,
     776,     0,   359,     0,   360,     0,   777,     0,   361,   362,
       0,   363,   778,     0,   364,   365,     0,     0,     0,   779,
     367,   368,   369,   780,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   781,   374,   375,   376,   782,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   783,   387,   388,     0,     0,     0,
       0,     0,   784,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   785,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   786,   396,   397,   398,   399,   787,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   788,   407,     0,
       0,   789,   409,   790,   410,     0,   411,   791,   792,   793,
     794,   795,   416,   417,   418,   419,   420,     0,   796,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   797,     0,
     799,   428,   429,     0,   800,   801,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   802,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   803,   804,   451,   805,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   806,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   807,   808,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   809,     0,   810,
     495,   496,   497,   498,     0,   499,   811,   812,   501,   502,
     503,   504,     0,   813,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   814,   815,   535,   536,
       0,     0,   537,   538,   816,   540,   541,   542,   817,   818,
     543,   544,   545,   546,   819,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   820,   553,   554,     0,   821,   822,
     823,   824,     0,     0,     0,     0,     0,   559,   560,     0,
     825,   826,   827,   562,   563,     0,   828,   564,   565,   829,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   830,   574,     0,     0,   831,   832,
     833,   575,   834,   576,     0,     0,   577,   835,     0,   836,
     578,     0,   579,   580,   837,   838,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   839,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   840,   841,     0,
     597,   598,   599,   842,   600,   601,   602,     0,   603,   843,
     844,   604,   845,   605,     0,   846,   847,   848,   849,   850,
     606,   607,     0,   851,   608,   852,   609,   853,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   854,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   855,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   856,   702,     0,   703,     0,   704,     0,   705,
       0,   706,     0,     0,     0,     0,     0,     0,   857,   858,
       0,     0,     0,     0,   860,     0,   861,     0,     0,     0,
     862,     0,     0,     0,   863,   864,   244,   245,     0,   744,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   745,     0,   254,   255,   256,   257,
     746,   259,     0,   260,     0,     0,   747,   261,   748,   749,
     750,   262,   751,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   752,   753,   270,   271,     0,
     272,   273,   754,   755,   275,     0,   276,   277,   278,   279,
     756,   281,     0,   757,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   758,   759,   302,
       0,     0,     0,   760,   303,   761,     0,   304,   762,   763,
       0,   305,   306,   307,   764,   765,   766,     0,     0,     0,
       0,   767,   310,   768,     0,     0,  2319,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   770,     0,   337,   338,   339,   340,   341,   771,
     772,   342,   343,     0,   344,   345,   346,   347,   348,   773,
       0,   349,   350,     0,     0,     0,   774,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   775,   357,   776,     0,
     359,     0,   360,     0,   777,     0,   361,   362,     0,   363,
     778,     0,   364,   365,     0,     0,     0,   779,   367,   368,
     369,   780,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   781,   374,   375,   376,   782,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   783,   387,   388,     0,     0,     0,     0,     0,
     784,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   786,
     396,   397,   398,   399,   787,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   788,   407,     0,     0,   789,
     409,   790,   410,     0,   411,   791,   792,   793,   794,   795,
     416,   417,   418,   419,   420,     0,   796,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   797,   798,   799,   428,
     429,     0,   800,   801,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   802,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   803,
     804,   451,   805,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   806,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   807,   808,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   809,     0,   810,   495,   496,
     497,   498,     0,   499,   811,   812,   501,   502,   503,   504,
       0,   813,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   814,   815,   535,   536,     0,     0,
     537,   538,   816,   540,   541,   542,   817,   818,   543,   544,
     545,   546,   819,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   820,   553,   554,     0,   821,   822,   823,   824,
       0,     0,     0,     0,     0,   559,   560,     0,   825,   826,
     827,   562,   563,     0,   828,   564,   565,   829,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   830,   574,     0,     0,   831,   832,   833,   575,
     834,   576,     0,     0,   577,   835,     0,   836,   578,     0,
     579,   580,   837,   838,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     839,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   840,   841,     0,   597,   598,
     599,   842,   600,   601,   602,     0,   603,   843,   844,   604,
     845,   605,     0,   846,   847,   848,   849,   850,   606,   607,
       0,   851,   608,   852,   609,   853,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   854,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   855,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     856,   702,     0,   703,     0,   704,     0,   705,     0,   706,
       0,     0,     0,     0,     0,     0,   857,   858,     0,     0,
       0,     0,   860,     0,   861,     0,     0,     0,   862,     0,
       0,     0,   863,   864,   244,   245,     0,   744,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   745,     0,   254,   255,   256,   257,   746,   259,
       0,   260,     0,     0,   747,   261,   748,   749,   750,   262,
     751,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   752,   753,   270,   271,     0,   272,   273,
     754,   755,   275,     0,   276,   277,   278,   279,   756,   281,
       0,   757,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   758,   759,   302,     0,     0,
       0,   760,   303,   761,     0,   304,   762,   763,     0,   305,
     306,   307,   764,   765,   766,     0,     0,     0,     0,   767,
     310,   768,     0,     0,   769,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     770,     0,   337,   338,   339,   340,   341,   771,   772,   342,
     343,     0,   344,   345,   346,   347,   348,   773,     0,   349,
     350,     0,     0,     0,   774,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   775,   357,   776,     0,   359,     0,
     360,     0,   777,     0,   361,   362,     0,   363,   778,     0,
     364,   365,     0,     0,     0,   779,   367,   368,   369,   780,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     781,   374,   375,   376,  3340,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     783,   387,   388,     0,     0,     0,     0,     0,   784,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   786,   396,   397,
     398,   399,   787,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   788,   407,     0,     0,   789,   409,   790,
     410,     0,   411,   791,   792,   793,   794,   795,   416,   417,
     418,   419,   420,     0,   796,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   797,   798,   799,   428,   429,     0,
     800,   801,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   802,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   803,   804,   451,
     805,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   806,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   807,   808,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   809,     0,   810,   495,   496,   497,   498,
       0,   499,   811,   812,   501,   502,   503,   504,     0,   813,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   814,   815,   535,   536,     0,     0,   537,   538,
     816,   540,   541,   542,   817,   818,   543,   544,   545,   546,
     819,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     820,   553,   554,     0,   821,   822,   823,   824,     0,     0,
       0,     0,     0,   559,   560,     0,   825,   826,   827,   562,
     563,     0,   828,   564,   565,   829,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     830,   574,     0,     0,   831,   832,   833,   575,   834,   576,
       0,     0,   577,   835,     0,   836,   578,     0,   579,   580,
     837,   838,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   839,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   840,   841,     0,   597,   598,   599,   842,
     600,   601,   602,     0,   603,   843,   844,   604,   845,   605,
       0,   846,   847,   848,   849,   850,   606,   607,     0,   851,
     608,   852,   609,   853,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   854,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   855,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   856,   702,
       0,   703,     0,   704,     0,   705,     0,   706,     0,     0,
       0,     0,     0,     0,   857,   858,     0,     0,     0,     0,
     860,     0,   861,     0,     0,     0,   862,     0,     0,     0,
     863,   864,   244,   245,     0,   744,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     745,     0,   254,   255,   256,   257,   746,   259,     0,   260,
       0,     0,   747,   261,   748,   749,   750,   262,   751,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,   752,   753,   270,   271,     0,   272,   273,   754,   755,
     275,     0,   276,   277,   278,   279,   756,   281,     0,   757,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,   758,   759,   302,     0,     0,     0,   760,
     303,   761,     0,   304,   762,   763,     0,   305,   306,   307,
     764,   765,   766,     0,     0,     0,     0,   767,   310,   768,
       0,     0,   769,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,   770,     0,
     337,   338,   339,   340,   341,   771,   772,   342,   343,     0,
     344,   345,   346,   347,   348,   773,     0,   349,   350,     0,
       0,     0,   774,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   775,   357,   776,     0,   359,     0,   360,     0,
     777,     0,   361,   362,     0,   363,   778,     0,   364,   365,
       0,     0,     0,   779,   367,   368,   369,   780,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,   781,   374,
     375,   376,  3411,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,   783,   387,
     388,     0,     0,     0,     0,     0,   784,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,   785,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,   786,   396,   397,   398,   399,
     787,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   788,   407,     0,     0,   789,   409,   790,   410,     0,
     411,   791,   792,   793,   794,   795,   416,   417,   418,   419,
     420,     0,   796,   421,   422,     0,     0,   423,   424,   425,
     426,   427,   797,   798,   799,   428,   429,     0,   800,   801,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,   802,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   803,   804,   451,   805,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   806,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,   807,   808,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   809,     0,   810,   495,   496,   497,   498,     0,   499,
     811,   812,   501,   502,   503,   504,     0,   813,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
     814,   815,   535,   536,     0,     0,   537,   538,   816,   540,
     541,   542,   817,   818,   543,   544,   545,   546,   819,   547,
     548,     0,     0,   549,   550,   551,   552,     0,   820,   553,
     554,     0,   821,   822,   823,   824,     0,     0,     0,     0,
       0,   559,   560,     0,   825,   826,   827,   562,   563,     0,
     828,   564,   565,   829,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   830,   574,
       0,     0,   831,   832,   833,   575,   834,   576,     0,     0,
     577,   835,     0,   836,   578,     0,   579,   580,   837,   838,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   839,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,   840,   841,     0,   597,   598,   599,   842,   600,   601,
     602,     0,   603,   843,   844,   604,   845,   605,     0,   846,
     847,   848,   849,   850,   606,   607,     0,   851,   608,   852,
     609,   853,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   854,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   855,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   856,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   857,   858,     0,     0,     0,     0,   860,     0,
     861,     0,     0,     0,   862,     0,     0,     0,   863,   864,
     244,   245,     0,   744,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   745,     0,
     254,   255,   256,   257,   746,   259,     0,   260,     0,     0,
     747,   261,   748,   749,   750,   262,   751,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,   752,
     753,   270,   271,     0,   272,   273,   754,   755,   275,     0,
     276,   277,   278,   279,   756,   281,     0,   757,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,   758,   759,   302,     0,     0,     0,   760,   303,   761,
       0,   304,   762,   763,     0,   305,   306,   307,   764,   765,
     766,     0,     0,     0,     0,   767,   310,   768,     0,     0,
     769,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,   770,     0,   337,   338,
     339,   340,   341,   771,   772,   342,   343,     0,   344,   345,
     346,   347,   348,   773,     0,   349,   350,     0,     0,     0,
     774,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     775,   357,   776,     0,   359,     0,   360,     0,   777,     0,
     361,   362,     0,   363,   778,     0,   364,   365,     0,     0,
       0,   779,   367,   368,   369,   780,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,   781,   374,   375,   376,
     782,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,   783,   387,   388,     0,
       0,     0,     0,     0,   784,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,   786,   396,   397,   398,   399,   787,   400,
     401,  5310,     0,     0,     0,   402,   403,   404,   405,   788,
     407,     0,     0,   789,   409,   790,   410,     0,   411,   791,
     792,   793,   794,   795,   416,   417,   418,   419,   420,     0,
     796,   421,   422,     0,     0,   423,   424,   425,   426,   427,
     797,     0,   799,   428,   429,     0,   800,   801,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   802,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   803,   804,   451,   805,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   806,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,   807,
     808,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   809,
       0,   810,   495,   496,   497,   498,     0,   499,   811,   812,
     501,   502,   503,   504,     0,   813,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,   814,   815,
     535,   536,     0,     0,   537,   538,   816,   540,   541,   542,
     817,   818,   543,   544,   545,   546,   819,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   820,   553,   554,     0,
     821,   822,   823,   824,     0,     0,     0,     0,     0,   559,
     560,     0,   825,   826,   827,   562,   563,     0,   828,   564,
     565,   829,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   830,   574,     0,     0,
     831,   832,   833,   575,   834,   576,     0,     0,   577,   835,
       0,   836,   578,     0,   579,   580,   837,   838,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   839,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,   840,
     841,     0,   597,   598,   599,   842,   600,   601,   602,     0,
     603,   843,   844,   604,   845,   605,     0,   846,   847,   848,
     849,   850,   606,   607,     0,   851,   608,   852,   609,   853,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   854,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   855,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   856,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,     0,     0,     0,     0,     0,
     857,   858,     0,     0,     0,     0,   860,     0,   861,     0,
       0,     0,   862,     0,     0,     0,   863,   864,   244,   245,
       0,   744,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   745,     0,   254,   255,
     256,   257,   746,   259,     0,   260,     0,     0,   747,   261,
     748,   749,   750,   262,   751,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,   752,   753,   270,
     271,     0,   272,   273,   754,   755,   275,     0,   276,   277,
     278,   279,   756,   281,     0,   757,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,   758,
     759,   302,     0,     0,     0,   760,   303,   761,     0,   304,
     762,   763,     0,   305,   306,   307,   764,   765,   766,     0,
       0,     0,     0,   767,   310,   768,     0,     0,   769,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,   770,     0,   337,   338,   339,   340,
     341,   771,   772,   342,   343,     0,   344,   345,   346,   347,
     348,   773,     0,   349,   350,     0,     0,     0,   774,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   775,   357,
     776,     0,   359,     0,   360,     0,   777,     0,   361,   362,
       0,   363,   778,     0,   364,   365,     0,     0,     0,   779,
     367,   368,   369,   780,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,   781,   374,   375,   376,   782,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,   783,   387,   388,     0,     0,     0,
       0,     0,   784,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,   785,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,   786,   396,   397,   398,   399,   787,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   788,   407,     0,
       0,   789,   409,   790,   410,     0,   411,   791,   792,   793,
     794,   795,   416,   417,   418,   419,   420,     0,   796,   421,
     422,     0,     0,   423,   424,   425,   426,   427,   797,     0,
     799,   428,   429,     0,   800,   801,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,   802,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   803,   804,   451,   805,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   806,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,   807,   808,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   809,     0,   810,
     495,   496,   497,   498,     0,   499,   811,   812,   501,   502,
     503,   504,     0,   813,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,   814,   815,   535,   536,
       0,     0,   537,   538,   816,   540,   541,   542,   817,   818,
     543,   544,   545,   546,   819,   547,   548,     0,     0,   549,
     550,   551,   552,     0,   820,   553,   554,     0,   821,   822,
     823,   824,     0,     0,     0,     0,     0,   559,   560,     0,
     825,   826,   827,   562,   563,     0,   828,   564,   565,   829,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   830,   574,     0,     0,   831,   832,
     833,   575,   834,   576,     0,     0,   577,   835,     0,   836,
     578,     0,   579,   580,   837,   838,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   839,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,   840,   841,     0,
     597,   598,   599,   842,   600,   601,   602,     0,   603,   843,
     844,   604,   845,   605,     0,   846,   847,   848,   849,   850,
     606,   607,     0,   851,   608,   852,   609,   853,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   854,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   855,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   856,   702,     0,   703,     0,   704,     0,   705,
       0,   706,     0,     0,     0,     0,     0,     0,   857,   858,
       0,     0,     0,     0,   860,     0,   861,     0,     0,     0,
     862,     0,     0,     0,   863,   864,   244,   245,     0,   744,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   745,     0,   254,   255,   256,   257,
     746,   259,     0,   260,     0,     0,   747,   261,   748,   749,
     750,   262,   751,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,   752,   753,   270,   271,     0,
     272,   273,   754,   755,   275,     0,   276,   277,   278,   279,
     756,   281,     0,   757,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,   758,   759,   302,
       0,     0,     0,   760,   303,   761,     0,   304,   762,   763,
       0,   305,   306,   307,   764,   765,   766,     0,     0,     0,
       0,   767,   310,   768,     0,     0,   769,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,   770,     0,   337,   338,   339,   340,   341,   771,
     772,   342,   343,     0,   344,   345,   346,   347,   348,   773,
       0,   349,   350,     0,     0,     0,   774,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   775,   357,   776,     0,
     359,     0,   360,     0,   777,     0,   361,   362,     0,   363,
     778,     0,   364,   365,     0,     0,     0,   779,   367,   368,
     369,   780,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,   781,   374,   375,   376,  2074,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,   783,   387,   388,     0,     0,     0,     0,     0,
     784,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,   785,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,   786,
     396,   397,   398,   399,   787,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   788,   407,     0,     0,   789,
     409,   790,   410,     0,   411,   791,   792,   793,   794,   795,
     416,   417,   418,   419,   420,     0,   796,   421,   422,     0,
       0,   423,   424,   425,   426,   427,   797,     0,   799,   428,
     429,     0,   800,   801,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,   802,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   803,
     804,   451,   805,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   806,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,   807,   808,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   809,     0,   810,   495,   496,
     497,   498,     0,   499,   811,   812,   501,   502,   503,   504,
       0,   813,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,   814,   815,   535,   536,     0,     0,
     537,   538,   816,   540,   541,   542,   817,   818,   543,   544,
     545,   546,   819,   547,   548,     0,     0,   549,   550,   551,
     552,     0,   820,   553,   554,     0,   821,   822,   823,   824,
       0,     0,     0,     0,     0,   559,   560,     0,   825,   826,
     827,   562,   563,     0,   828,   564,   565,   829,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   830,   574,     0,     0,   831,   832,   833,   575,
     834,   576,     0,     0,   577,   835,     0,   836,   578,     0,
     579,   580,   837,   838,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     839,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,   840,   841,     0,   597,   598,
     599,   842,   600,   601,   602,     0,   603,   843,   844,   604,
     845,   605,     0,   846,   847,   848,   849,   850,   606,   607,
       0,   851,   608,   852,   609,   853,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   854,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   855,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     856,   702,     0,   703,     0,   704,     0,   705,     0,   706,
       0,     0,     0,     0,     0,     0,   857,   858,     0,     0,
       0,     0,   860,     0,   861,     0,     0,     0,   862,     0,
       0,     0,   863,   864,   244,   245,     0,   744,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   745,     0,   254,   255,   256,   257,   746,   259,
       0,   260,     0,     0,   747,   261,   748,   749,   750,   262,
     751,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,   752,   753,   270,   271,     0,   272,   273,
     754,   755,   275,     0,   276,   277,   278,   279,   756,   281,
       0,   757,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,   758,   759,   302,     0,     0,
       0,   760,   303,   761,     0,   304,   762,   763,     0,   305,
     306,   307,   764,   765,   766,     0,     0,     0,     0,   767,
     310,   768,     0,     0,   769,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
     770,     0,   337,   338,   339,   340,   341,   771,   772,   342,
     343,     0,   344,   345,   346,   347,   348,   773,     0,   349,
     350,     0,     0,     0,   774,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   775,   357,   776,     0,   359,     0,
     360,     0,   777,     0,   361,   362,     0,   363,   778,     0,
     364,   365,     0,     0,     0,   779,   367,   368,   369,   780,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
     781,   374,   375,   376,  2076,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
     783,   387,   388,     0,     0,     0,     0,     0,   784,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,   785,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,   786,   396,   397,
     398,   399,   787,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   788,   407,     0,     0,   789,   409,   790,
     410,     0,   411,   791,   792,   793,   794,   795,   416,   417,
     418,   419,   420,     0,   796,   421,   422,     0,     0,   423,
     424,   425,   426,   427,   797,     0,   799,   428,   429,     0,
     800,   801,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,   802,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   803,   804,   451,
     805,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   806,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,   807,   808,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   809,     0,   810,   495,   496,   497,   498,
       0,   499,   811,   812,   501,   502,   503,   504,     0,   813,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,   814,   815,   535,   536,     0,     0,   537,   538,
     816,   540,   541,   542,   817,   818,   543,   544,   545,   546,
     819,   547,   548,     0,     0,   549,   550,   551,   552,     0,
     820,   553,   554,     0,   821,   822,   823,   824,     0,     0,
       0,     0,     0,   559,   560,     0,   825,   826,   827,   562,
     563,     0,   828,   564,   565,   829,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     830,   574,     0,     0,   831,   832,   833,   575,   834,   576,
       0,     0,   577,   835,     0,   836,   578,     0,   579,   580,
     837,   838,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   839,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,   840,   841,     0,   597,   598,   599,   842,
     600,   601,   602,     0,   603,   843,   844,   604,   845,   605,
       0,   846,   847,   848,   849,   850,   606,   607,     0,   851,
     608,   852,   609,   853,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   854,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   855,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   856,   702,
       0,   703,     0,   704,     0,   705,     0,   706,     0,     0,
       0,     0,     0,     0,   857,   858,     0,     0,     0,     0,
     860,     0,   861,     0,     0,     0,   862,     0,     0,     0,
     863,   864,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,    42,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,    49,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,    54,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,    55,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,  2877,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,  2878,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   244,   245,     0,   246,   247,   248,   249,   250,
    2879,     0,   251,     0,     0,     0,     0,   252,     0,  2880,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,  2876,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,  2877,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,  2878,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,     0,   244,   245,     0,   246,   247,   248,   249,   250,
    2879,     0,   251,     0,     0,     0,     0,   252,     0,  2880,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,  2877,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,  2878,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,     0,   706,     0,     0,     0,     0,
       0,   244,   245,     0,   246,   247,   248,   249,   250,     0,
    2879,   251,     0,     0,     0,     0,   252,     0,     0,  2880,
       0,   254,   255,   256,   257,   258,   259,     0,  -513,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5144,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5145,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
       0,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5146,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5147,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5148,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5149,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -468,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,  5150,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,     0,     0,
       0,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,     0,   479,
    -468,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,     0,     0,   489,   490,     0,   491,   492,   493,  5151,
     494,     0,     0,     0,   496,   497,   498,     0,   499,     0,
     500,   501,     0,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,   514,     0,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,     0,   531,   532,   533,   534,     0,
       0,     0,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,     0,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,     0,     0,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,  -468,     0,     0,     0,   583,   584,   585,     0,   586,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,     0,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,  5551,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,   748,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,  2796,     0,     0,     0,     0,
     309,   310,   768,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,   772,
     342,   343,     0,   344,   345,   346,   347,   348,   773,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,   778,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
     785,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,   796,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,   800,   801,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   820,   553,   554,     0,  2797,   556,   557,  2798,     0,
       0,     0,     0,     0,   559,   560,     0,     0,   826,   561,
     562,   563,     0,   828,   564,   565,   829,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  2799,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,   785,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,   801,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,   802,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,   828,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  2023,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,  1672,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1124,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,  1673,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  1674,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,  1011,  1012,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
    1013,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,  1014,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,  1015,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,  1016,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,  1017,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,  1018,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,  1019,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,  1020,  1021,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,  1022,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,  1023,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  1024,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1124,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  1337,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1124,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   241,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  1511,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,  1011,  1012,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  1519,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,  1014,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,  1015,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,  1016,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,  1018,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,  1020,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,  1022,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  1024,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,  1124,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,   241,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  1674,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,  2134,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  2135,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,  5557,
     252,     0,  5558,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,     0,   252,     0,  2135,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,  5558,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,    42,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,    49,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,    54,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,    55,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,  1108,  4064,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,     0,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,  4304,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,     0,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  4308,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,  2457,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,  2458,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
    1828,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,  1829,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
    3908,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,    42,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,  2460,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
      49,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,    54,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,    55,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  1108,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,  2877,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,  2878,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,     0,   706,   244,   245,
       0,   246,   247,   248,   249,   250,     0,     0,   251,     0,
       0,     0,  2879,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
       0,   706,   244,   245,     0,   246,   247,   248,   249,   250,
       0,     0,   251,     0,     0,     0,  1259,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,     0,   706,   244,   245,     0,   246,
     247,   248,   249,   250,     0,     0,   251,     0,     0,     0,
    3101,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,     0,   706,
     244,   245,     0,   246,   247,   248,   249,   250,     0,     0,
     251,     0,     0,     0,  3436,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,   244,   245,     0,   246,   247,   248,
     249,   250,     0,     0,   251,     0,     0,     0,  4187,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,     0,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,     0,   706,   244,   245,
       0,   246,   247,   248,   249,   250,  2094,     0,   251,     0,
       0,     0,     0,   252,     0,     0,   253,     0,   254,   255,
     256,   257,   258,   259,     0,   260,     0,     0,     0,   261,
       0,     0,     0,   262,     0,     0,   263,   264,   265,     0,
     266,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,   272,   273,   274,     0,   275,     0,   276,   277,
     278,   279,   280,   281,     0,   282,   283,     0,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   297,   298,   299,   300,   301,     0,     0,
       0,   302,     0,     0,     0,     0,   303,     0,     0,   304,
       0,     0,     0,   305,   306,   307,     0,     0,   308,     0,
       0,     0,     0,   309,   310,     0,     0,     0,     0,   311,
     312,     0,   313,     0,     0,     0,     0,     0,   314,   315,
     316,   317,   318,     0,     0,     0,   319,     0,     0,   320,
     321,   322,     0,     0,     0,   323,     0,   324,   325,     0,
     326,   327,   328,     0,     0,   329,   330,     0,   331,   332,
     333,   334,   335,   336,     0,     0,   337,   338,   339,   340,
     341,     0,     0,   342,   343,     0,   344,   345,   346,   347,
     348,     0,     0,   349,   350,     0,     0,     0,   351,   352,
       0,   353,     0,     0,     0,   354,     0,   355,   356,   357,
     358,     0,   359,     0,   360,     0,     0,     0,   361,   362,
       0,   363,     0,     0,   364,   365,     0,     0,     0,   366,
     367,   368,   369,     0,     0,   370,   371,   372,     0,     0,
     373,     0,     0,     0,     0,   374,   375,   376,     0,     0,
       0,   377,     0,     0,     0,   378,   379,     0,   380,   381,
       0,     0,     0,   382,     0,   383,     0,     0,   384,   385,
       0,     0,   386,     0,     0,   387,   388,     0,     0,     0,
       0,     0,   389,   390,     0,   391,     0,   392,     0,   393,
     394,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   395,     0,
       0,     0,   396,   397,   398,   399,     0,   400,   401,     0,
       0,     0,     0,   402,   403,   404,   405,   406,   407,     0,
       0,   408,   409,     0,   410,     0,   411,     0,   412,   413,
     414,   415,   416,   417,   418,   419,   420,     0,     0,   421,
     422,     0,     0,   423,   424,   425,   426,   427,     0,     0,
       0,   428,   429,     0,     0,     0,   430,     0,   431,   432,
       0,   433,   434,   435,     0,     0,   436,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     440,     0,   441,     0,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,     0,   452,     0,   453,   454,   455,
       0,   456,     0,   457,   458,   459,   460,   461,     0,   462,
     463,   464,     0,     0,   465,     0,     0,     0,   466,   467,
       0,   468,   469,     0,     0,   470,   471,   472,   473,   474,
       0,   475,   476,     0,   477,   478,   479,     0,     0,   480,
     481,   482,   483,   484,   485,   486,   487,     0,   488,     0,
     489,   490,     0,   491,   492,   493,     0,   494,     0,     0,
     495,   496,   497,   498,     0,   499,     0,   500,   501,   502,
     503,   504,     0,   505,   506,     0,     0,     0,   507,   508,
     509,   510,     0,     0,     0,   511,     0,     0,     0,   512,
       0,   513,   514,   515,   516,     0,   517,   518,   519,   520,
     521,     0,     0,     0,     0,     0,   522,   523,   524,     0,
     525,     0,     0,   526,     0,     0,   527,     0,   528,     0,
     529,   530,   531,   532,   533,   534,     0,     0,   535,   536,
       0,     0,   537,   538,   539,   540,   541,   542,     0,     0,
     543,   544,   545,   546,     0,   547,   548,     0,     0,   549,
     550,   551,   552,     0,     0,   553,   554,     0,   555,   556,
     557,   558,     0,     0,     0,     0,     0,   559,   560,     0,
       0,     0,   561,   562,   563,     0,     0,   564,   565,     0,
     566,   567,     0,   568,   569,     0,     0,   570,     0,     0,
     571,     0,   572,     0,   573,   574,     0,     0,     0,     0,
       0,   575,     0,   576,     0,     0,   577,     0,     0,     0,
     578,     0,   579,   580,   581,   582,     0,     0,     0,     0,
       0,     0,   583,   584,   585,     0,   586,   587,   588,   589,
       0,     0,   590,     0,     0,   591,   592,   593,   594,   595,
       0,   596,     0,     0,     0,     0,     0,     0,     0,     0,
     597,   598,   599,     0,   600,   601,   602,     0,   603,     0,
       0,   604,     0,   605,     0,     0,     0,     0,     0,     0,
     606,   607,     0,     0,   608,     0,   609,     0,   610,   611,
       0,     0,     0,   612,   613,   614,   615,   616,   617,   618,
     619,     0,   620,     0,     0,   621,   622,   623,   624,   625,
     626,   627,     0,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,     0,     0,   641,     0,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,     0,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,     0,   697,   698,   699,
       0,   700,   701,   702,     0,   703,     0,   704,     0,   705,
       0,   706,   244,   245,     0,   246,   247,   248,   249,   250,
    2812,     0,   251,     0,     0,     0,     0,   252,     0,     0,
     253,     0,   254,   255,   256,   257,   258,   259,     0,   260,
       0,     0,     0,   261,     0,     0,     0,   262,     0,     0,
     263,   264,   265,     0,   266,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,   272,   273,   274,     0,
     275,     0,   276,   277,   278,   279,   280,   281,     0,   282,
     283,     0,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,   297,   298,   299,
     300,   301,     0,     0,     0,   302,     0,     0,     0,     0,
     303,     0,     0,   304,     0,     0,     0,   305,   306,   307,
       0,     0,   308,     0,     0,     0,     0,   309,   310,     0,
       0,     0,     0,   311,   312,     0,   313,     0,     0,     0,
       0,     0,   314,   315,   316,   317,   318,     0,     0,     0,
     319,     0,     0,   320,   321,   322,     0,     0,     0,   323,
       0,   324,   325,     0,   326,   327,   328,     0,     0,   329,
     330,     0,   331,   332,   333,   334,   335,   336,     0,     0,
     337,   338,   339,   340,   341,     0,     0,   342,   343,     0,
     344,   345,   346,   347,   348,     0,     0,   349,   350,     0,
       0,     0,   351,   352,     0,   353,     0,     0,     0,   354,
       0,   355,   356,   357,   358,     0,   359,     0,   360,     0,
       0,     0,   361,   362,     0,   363,     0,     0,   364,   365,
       0,     0,     0,   366,   367,   368,   369,     0,     0,   370,
     371,   372,     0,     0,   373,     0,     0,     0,     0,   374,
     375,   376,     0,     0,     0,   377,     0,     0,     0,   378,
     379,     0,   380,   381,     0,     0,     0,   382,     0,   383,
       0,     0,   384,   385,     0,     0,   386,     0,     0,   387,
     388,     0,     0,     0,     0,     0,   389,   390,     0,   391,
       0,   392,     0,   393,   394,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   395,     0,     0,     0,   396,   397,   398,   399,
       0,   400,   401,     0,     0,     0,     0,   402,   403,   404,
     405,   406,   407,     0,     0,   408,   409,     0,   410,     0,
     411,     0,   412,   413,   414,   415,   416,   417,   418,   419,
     420,     0,     0,   421,   422,     0,     0,   423,   424,   425,
     426,   427,     0,     0,     0,   428,   429,     0,     0,     0,
     430,     0,   431,   432,     0,   433,   434,   435,     0,     0,
     436,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     437,   438,   439,     0,   440,     0,   441,     0,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,     0,   452,
       0,   453,   454,   455,     0,   456,     0,   457,   458,   459,
     460,   461,     0,   462,   463,   464,     0,     0,   465,     0,
       0,     0,   466,   467,     0,   468,   469,     0,     0,   470,
     471,   472,   473,   474,     0,   475,   476,     0,   477,   478,
     479,     0,     0,   480,   481,   482,   483,   484,   485,   486,
     487,     0,   488,     0,   489,   490,     0,   491,   492,   493,
       0,   494,     0,     0,   495,   496,   497,   498,     0,   499,
       0,   500,   501,   502,   503,   504,     0,   505,   506,     0,
       0,     0,   507,   508,   509,   510,     0,     0,     0,   511,
       0,     0,     0,   512,     0,   513,   514,   515,   516,     0,
     517,   518,   519,   520,   521,     0,     0,     0,     0,     0,
     522,   523,   524,     0,   525,     0,     0,   526,     0,     0,
     527,     0,   528,     0,   529,   530,   531,   532,   533,   534,
       0,     0,   535,   536,     0,     0,   537,   538,   539,   540,
     541,   542,     0,     0,   543,   544,   545,   546,     0,   547,
     548,     0,     0,   549,   550,   551,   552,     0,     0,   553,
     554,     0,   555,   556,   557,   558,     0,     0,     0,     0,
       0,   559,   560,     0,     0,     0,   561,   562,   563,     0,
       0,   564,   565,     0,   566,   567,     0,   568,   569,     0,
       0,   570,     0,     0,   571,     0,   572,     0,   573,   574,
       0,     0,     0,     0,     0,   575,     0,   576,     0,     0,
     577,     0,     0,     0,   578,     0,   579,   580,   581,   582,
       0,     0,     0,     0,     0,     0,   583,   584,   585,     0,
     586,   587,   588,   589,     0,     0,   590,     0,     0,   591,
     592,   593,   594,   595,     0,   596,     0,     0,     0,     0,
       0,     0,     0,     0,   597,   598,   599,     0,   600,   601,
     602,     0,   603,     0,     0,   604,     0,   605,     0,     0,
       0,     0,     0,     0,   606,   607,     0,     0,   608,     0,
     609,     0,   610,   611,     0,     0,     0,   612,   613,   614,
     615,   616,   617,   618,   619,     0,   620,     0,     0,   621,
     622,   623,   624,   625,   626,   627,     0,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
       0,     0,   641,     0,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,     0,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
       0,   697,   698,   699,     0,   700,   701,   702,     0,   703,
       0,   704,     0,   705,     0,   706,   244,   245,     0,   246,
     247,   248,   249,   250,  3469,     0,   251,     0,     0,     0,
       0,   252,     0,     0,   253,     0,   254,   255,   256,   257,
     258,   259,     0,   260,     0,     0,     0,   261,     0,     0,
       0,   262,     0,     0,   263,   264,   265,     0,   266,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
     272,   273,   274,     0,   275,     0,   276,   277,   278,   279,
     280,   281,     0,   282,   283,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   297,   298,   299,   300,   301,     0,     0,     0,   302,
       0,     0,     0,     0,   303,     0,     0,   304,     0,     0,
       0,   305,   306,   307,     0,     0,   308,     0,     0,     0,
       0,   309,   310,     0,     0,     0,     0,   311,   312,     0,
     313,     0,     0,     0,     0,     0,   314,   315,   316,   317,
     318,     0,     0,     0,   319,     0,     0,   320,   321,   322,
       0,     0,     0,   323,     0,   324,   325,     0,   326,   327,
     328,     0,     0,   329,   330,     0,   331,   332,   333,   334,
     335,   336,     0,     0,   337,   338,   339,   340,   341,     0,
       0,   342,   343,     0,   344,   345,   346,   347,   348,     0,
       0,   349,   350,     0,     0,     0,   351,   352,     0,   353,
       0,     0,     0,   354,     0,   355,   356,   357,   358,     0,
     359,     0,   360,     0,     0,     0,   361,   362,     0,   363,
       0,     0,   364,   365,     0,     0,     0,   366,   367,   368,
     369,     0,     0,   370,   371,   372,     0,     0,   373,     0,
       0,     0,     0,   374,   375,   376,     0,     0,     0,   377,
       0,     0,     0,   378,   379,     0,   380,   381,     0,     0,
       0,   382,     0,   383,     0,     0,   384,   385,     0,     0,
     386,     0,     0,   387,   388,     0,     0,     0,     0,     0,
     389,   390,     0,   391,     0,   392,     0,   393,   394,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   395,     0,     0,     0,
     396,   397,   398,   399,     0,   400,   401,     0,     0,     0,
       0,   402,   403,   404,   405,   406,   407,     0,     0,   408,
     409,     0,   410,     0,   411,     0,   412,   413,   414,   415,
     416,   417,   418,   419,   420,     0,     0,   421,   422,     0,
       0,   423,   424,   425,   426,   427,     0,     0,     0,   428,
     429,     0,     0,     0,   430,     0,   431,   432,     0,   433,
     434,   435,     0,     0,   436,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   437,   438,   439,     0,   440,     0,
     441,     0,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,     0,   452,     0,   453,   454,   455,     0,   456,
       0,   457,   458,   459,   460,   461,     0,   462,   463,   464,
       0,     0,   465,     0,     0,     0,   466,   467,     0,   468,
     469,     0,     0,   470,   471,   472,   473,   474,     0,   475,
     476,     0,   477,   478,   479,     0,     0,   480,   481,   482,
     483,   484,   485,   486,   487,     0,   488,     0,   489,   490,
       0,   491,   492,   493,     0,   494,     0,     0,   495,   496,
     497,   498,     0,   499,     0,   500,   501,   502,   503,   504,
       0,   505,   506,     0,     0,     0,   507,   508,   509,   510,
       0,     0,     0,   511,     0,     0,     0,   512,     0,   513,
     514,   515,   516,     0,   517,   518,   519,   520,   521,     0,
       0,     0,     0,     0,   522,   523,   524,     0,   525,     0,
       0,   526,     0,     0,   527,     0,   528,     0,   529,   530,
     531,   532,   533,   534,     0,     0,   535,   536,     0,     0,
     537,   538,   539,   540,   541,   542,     0,     0,   543,   544,
     545,   546,     0,   547,   548,     0,     0,   549,   550,   551,
     552,     0,     0,   553,   554,     0,   555,   556,   557,   558,
       0,     0,     0,     0,     0,   559,   560,     0,     0,     0,
     561,   562,   563,     0,     0,   564,   565,     0,   566,   567,
       0,   568,   569,     0,     0,   570,     0,     0,   571,     0,
     572,     0,   573,   574,     0,     0,     0,     0,     0,   575,
       0,   576,     0,     0,   577,     0,     0,     0,   578,     0,
     579,   580,   581,   582,     0,     0,     0,     0,     0,     0,
     583,   584,   585,     0,   586,   587,   588,   589,     0,     0,
     590,     0,     0,   591,   592,   593,   594,   595,     0,   596,
       0,     0,     0,     0,     0,     0,     0,     0,   597,   598,
     599,     0,   600,   601,   602,     0,   603,     0,     0,   604,
       0,   605,     0,     0,     0,     0,     0,     0,   606,   607,
       0,     0,   608,     0,   609,     0,   610,   611,     0,     0,
       0,   612,   613,   614,   615,   616,   617,   618,   619,     0,
     620,     0,     0,   621,   622,   623,   624,   625,   626,   627,
       0,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,     0,     0,   641,     0,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,     0,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,     0,   697,   698,   699,     0,   700,
     701,   702,     0,   703,     0,   704,     0,   705,     0,   706,
     244,   245,     0,   246,   247,   248,   249,   250,  3659,     0,
     251,     0,     0,     0,     0,   252,     0,     0,   253,     0,
     254,   255,   256,   257,   258,   259,     0,   260,     0,     0,
       0,   261,     0,     0,     0,   262,     0,     0,   263,   264,
     265,     0,   266,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,   272,   273,   274,     0,   275,     0,
     276,   277,   278,   279,   280,   281,     0,   282,   283,     0,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,   297,   298,   299,   300,   301,
       0,     0,     0,   302,     0,     0,     0,     0,   303,     0,
       0,   304,     0,     0,     0,   305,   306,   307,     0,     0,
     308,     0,     0,     0,     0,   309,   310,     0,     0,     0,
       0,   311,   312,     0,   313,     0,     0,     0,     0,     0,
     314,   315,   316,   317,   318,     0,     0,     0,   319,     0,
       0,   320,   321,   322,     0,     0,     0,   323,     0,   324,
     325,     0,   326,   327,   328,     0,     0,   329,   330,     0,
     331,   332,   333,   334,   335,   336,     0,     0,   337,   338,
     339,   340,   341,     0,     0,   342,   343,     0,   344,   345,
     346,   347,   348,     0,     0,   349,   350,     0,     0,     0,
     351,   352,     0,   353,     0,     0,     0,   354,     0,   355,
     356,   357,   358,     0,   359,     0,   360,     0,     0,     0,
     361,   362,     0,   363,     0,     0,   364,   365,     0,     0,
       0,   366,   367,   368,   369,     0,     0,   370,   371,   372,
       0,     0,   373,     0,     0,     0,     0,   374,   375,   376,
       0,     0,     0,   377,     0,     0,     0,   378,   379,     0,
     380,   381,     0,     0,     0,   382,     0,   383,     0,     0,
     384,   385,     0,     0,   386,     0,     0,   387,   388,     0,
       0,     0,     0,     0,   389,   390,     0,   391,     0,   392,
       0,   393,   394,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     395,     0,     0,     0,   396,   397,   398,   399,     0,   400,
     401,     0,     0,     0,     0,   402,   403,   404,   405,   406,
     407,     0,     0,   408,   409,     0,   410,     0,   411,     0,
     412,   413,   414,   415,   416,   417,   418,   419,   420,     0,
       0,   421,   422,     0,     0,   423,   424,   425,   426,   427,
       0,     0,     0,   428,   429,     0,     0,     0,   430,     0,
     431,   432,     0,   433,   434,   435,     0,     0,   436,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   437,   438,
     439,     0,   440,     0,   441,     0,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,     0,   452,     0,   453,
     454,   455,     0,   456,     0,   457,   458,   459,   460,   461,
       0,   462,   463,   464,     0,     0,   465,     0,     0,     0,
     466,   467,     0,   468,   469,     0,     0,   470,   471,   472,
     473,   474,     0,   475,   476,     0,   477,   478,   479,     0,
       0,   480,   481,   482,   483,   484,   485,   486,   487,     0,
     488,     0,   489,   490,     0,   491,   492,   493,     0,   494,
       0,     0,   495,   496,   497,   498,     0,   499,     0,   500,
     501,   502,   503,   504,     0,   505,   506,     0,     0,     0,
     507,   508,   509,   510,     0,     0,     0,   511,     0,     0,
       0,   512,     0,   513,   514,   515,   516,     0,   517,   518,
     519,   520,   521,     0,     0,     0,     0,     0,   522,   523,
     524,     0,   525,     0,     0,   526,     0,     0,   527,     0,
     528,     0,   529,   530,   531,   532,   533,   534,     0,     0,
     535,   536,     0,     0,   537,   538,   539,   540,   541,   542,
       0,     0,   543,   544,   545,   546,     0,   547,   548,     0,
       0,   549,   550,   551,   552,     0,     0,   553,   554,     0,
     555,   556,   557,   558,     0,     0,     0,     0,     0,   559,
     560,     0,     0,     0,   561,   562,   563,     0,     0,   564,
     565,     0,   566,   567,     0,   568,   569,     0,     0,   570,
       0,     0,   571,     0,   572,     0,   573,   574,     0,     0,
       0,     0,     0,   575,     0,   576,     0,     0,   577,     0,
       0,     0,   578,     0,   579,   580,   581,   582,     0,     0,
       0,     0,     0,     0,   583,   584,   585,     0,   586,   587,
     588,   589,     0,     0,   590,     0,     0,   591,   592,   593,
     594,   595,     0,   596,     0,     0,     0,     0,     0,     0,
       0,     0,   597,   598,   599,     0,   600,   601,   602,     0,
     603,     0,     0,   604,     0,   605,     0,     0,     0,     0,
       0,     0,   606,   607,     0,     0,   608,     0,   609,     0,
     610,   611,     0,     0,     0,   612,   613,   614,   615,   616,
     617,   618,   619,     0,   620,     0,     0,   621,   622,   623,
     624,   625,   626,   627,     0,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,     0,     0,
     641,     0,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,     0,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,     0,   697,
     698,   699,     0,   700,   701,   702,     0,   703,     0,   704,
       0,   705,     0,   706,   244,   245,     0,   246,   247,   248,
     249,   250,  4042,     0,   251,     0,     0,     0,     0,   252,
       0,     0,   253,     0,   254,   255,   256,   257,   258,   259,
       0,   260,     0,     0,     0,   261,     0,     0,     0,   262,
       0,     0,   263,   264,   265,     0,   266,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,   272,   273,
     274,     0,   275,     0,   276,   277,   278,   279,   280,   281,
       0,   282,   283,     0,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,   297,
     298,   299,   300,   301,     0,     0,     0,   302,     0,     0,
       0,     0,   303,     0,     0,   304,     0,     0,     0,   305,
     306,   307,     0,     0,   308,     0,     0,     0,     0,   309,
     310,     0,     0,     0,     0,   311,   312,     0,   313,     0,
       0,     0,     0,     0,   314,   315,   316,   317,   318,     0,
       0,     0,   319,     0,     0,   320,   321,   322,     0,     0,
       0,   323,     0,   324,   325,     0,   326,   327,   328,     0,
       0,   329,   330,     0,   331,   332,   333,   334,   335,   336,
       0,     0,   337,   338,   339,   340,   341,     0,     0,   342,
     343,     0,   344,   345,   346,   347,   348,     0,     0,   349,
     350,     0,     0,     0,   351,   352,     0,   353,     0,     0,
       0,   354,     0,   355,   356,   357,   358,     0,   359,     0,
     360,     0,     0,     0,   361,   362,     0,   363,     0,     0,
     364,   365,     0,     0,     0,   366,   367,   368,   369,     0,
       0,   370,   371,   372,     0,     0,   373,     0,     0,     0,
       0,   374,   375,   376,     0,     0,     0,   377,     0,     0,
       0,   378,   379,     0,   380,   381,     0,     0,     0,   382,
       0,   383,     0,     0,   384,   385,     0,     0,   386,     0,
       0,   387,   388,     0,     0,     0,     0,     0,   389,   390,
       0,   391,     0,   392,     0,   393,   394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   395,     0,     0,     0,   396,   397,
     398,   399,     0,   400,   401,     0,     0,     0,     0,   402,
     403,   404,   405,   406,   407,     0,     0,   408,   409,     0,
     410,     0,   411,     0,   412,   413,   414,   415,   416,   417,
     418,   419,   420,     0,     0,   421,   422,     0,     0,   423,
     424,   425,   426,   427,     0,     0,     0,   428,   429,     0,
       0,     0,   430,     0,   431,   432,     0,   433,   434,   435,
       0,     0,   436,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   437,   438,   439,     0,   440,     0,   441,     0,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
       0,   452,     0,   453,   454,   455,     0,   456,     0,   457,
     458,   459,   460,   461,     0,   462,   463,   464,     0,     0,
     465,     0,     0,     0,   466,   467,     0,   468,   469,     0,
       0,   470,   471,   472,   473,   474,     0,   475,   476,     0,
     477,   478,   479,     0,     0,   480,   481,   482,   483,   484,
     485,   486,   487,     0,   488,     0,   489,   490,     0,   491,
     492,   493,     0,   494,     0,     0,   495,   496,   497,   498,
       0,   499,     0,   500,   501,   502,   503,   504,     0,   505,
     506,     0,     0,     0,   507,   508,   509,   510,     0,     0,
       0,   511,     0,     0,     0,   512,     0,   513,   514,   515,
     516,     0,   517,   518,   519,   520,   521,     0,     0,     0,
       0,     0,   522,   523,   524,     0,   525,     0,     0,   526,
       0,  3666,   527,     0,   528,     0,   529,   530,   531,   532,
     533,   534,     0,     0,   535,   536,     0,     0,   537,   538,
     539,   540,   541,   542,     0,     0,   543,   544,   545,   546,
       0,   547,   548,     0,     0,   549,   550,   551,   552,     0,
       0,   553,   554,     0,   555,   556,   557,   558,     0,     0,
       0,     0,     0,   559,   560,     0,     0,     0,   561,   562,
     563,     0,     0,   564,   565,     0,   566,   567,     0,   568,
     569,     0,     0,   570,     0,     0,   571,     0,   572,     0,
     573,   574,     0,     0,     0,     0,     0,   575,     0,   576,
       0,     0,   577,     0,     0,     0,   578,     0,   579,   580,
     581,   582,     0,     0,     0,     0,     0,     0,   583,   584,
     585,     0,   586,   587,   588,   589,     0,     0,   590,     0,
       0,   591,   592,   593,   594,   595,     0,   596,     0,     0,
       0,     0,     0,     0,     0,     0,   597,   598,   599,     0,
     600,   601,   602,     0,   603,     0,     0,   604,     0,   605,
       0,     0,     0,     0,     0,     0,   606,   607,     0,     0,
     608,     0,   609,     0,   610,   611,     0,     0,     0,   612,
     613,   614,   615,   616,   617,   618,   619,     0,   620,     0,
       0,   621,   622,   623,   624,   625,   626,   627,     0,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,     0,     0,   641,     0,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
       0,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,     0,   697,   698,   699,     0,   700,   701,   702,
       0,   703,     0,   704,     0,   705,     0,   706,  3667,   244,
     245,     0,   246,   247,   248,   249,   250,   922,   923,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,   924,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,   925,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,   926,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   927,   334,   335,   928,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   929,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,   930,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   931,
       0,   373,     0,     0,     0,   932,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,   933,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,   934,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,     0,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   935,   458,   459,   460,   936,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,   937,     0,   470,   471,   472,   473,
     474,     0,   938,   476,     0,   477,   478,   479,     0,     0,
     939,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,   940,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,   941,
     942,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   943,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
     944,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,   945,   572,   946,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,     0,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,  1478,   923,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,   924,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,   925,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,   926,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   927,   334,   335,   928,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   929,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,   930,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   931,     0,   373,     0,     0,     0,   932,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,   933,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,   934,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,     0,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   935,   458,
     459,   460,  1479,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,   937,     0,
     470,   471,   472,   473,   474,     0,   938,   476,     0,   477,
     478,   479,     0,     0,   939,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
     940,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,   941,   942,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   943,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   241,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,   944,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,   945,   572,   946,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,     0,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,   923,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,   924,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,   925,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,   926,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   927,
     334,   335,   928,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   929,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,   930,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   931,     0,   373,
       0,     0,     0,   932,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,   933,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,   934,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,     0,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   935,   458,   459,   460,     0,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,   937,     0,   470,   471,   472,   473,   474,     0,
     938,   476,     0,   477,   478,   479,     0,     0,   939,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,   940,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,   941,   942,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   943,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,   944,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
     945,   572,   946,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,     0,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,  3119,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,  3120,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,  3121,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,  3122,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,  1367,  1368,     0,   428,   429,     0,     0,  3123,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,  5538,   989,  5539,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,  3124,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,  1341,  1342,
     252,  1343,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,  1344,     0,     0,  1345,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,  1346,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,  1347,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,  1488,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,  1489,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,  1490,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1124,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,  1491,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,  2457,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,  2458,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,  1828,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,  1829,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,  2460,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,  1513,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  1514,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1124,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,  2281,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,  2282,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,   802,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,  2283,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,  1488,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  3780,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1124,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,  1123,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1124,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,  1125,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,  1123,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,  1124,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   241,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,  1544,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1124,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,  1612,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,  1613,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,  1386,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,  2899,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,  1124,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,  1124,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,  3190,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,  1488,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,  1124,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   241,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,  1124,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,  4325,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
    1124,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   241,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,  5469,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,  5470,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,   989,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,  1091,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,  1158,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,  1159,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,  1346,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  2186,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,  2411,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,  2557,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  3103,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,  3126,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  3155,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,  3221,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,   336,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,   344,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
     478,   479,     0,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,   512,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
     621,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,   336,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,  2156,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,  2157,   426,   427,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,   478,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,   512,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,   621,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,   336,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,   344,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,   478,   479,
       0,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,   512,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,  5209,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,   621,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,  1519,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
     336,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,   344,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,     0,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,     0,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,   478,   479,     0,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,     0,   510,     0,
       0,     0,   511,     0,     0,     0,   512,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,  1520,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,     0,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,     0,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,   621,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,  1519,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,   336,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,   344,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,     0,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,     0,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,   478,   479,     0,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,     0,   510,     0,     0,     0,   511,     0,     0,     0,
     512,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,     0,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,     0,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,   621,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,  1504,     0,   251,     0,     0,     0,     0,   252,     0,
       0,   253,     0,   254,   255,   256,   257,   258,   259,     0,
     260,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,   272,   273,   274,
       0,   275,     0,   276,   277,   278,   279,   280,   281,     0,
     282,   283,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,   300,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,   310,
       0,     0,     0,  1505,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,   319,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,   324,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,     0,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
       0,     0,   345,   346,   347,   348,     0,     0,   349,   350,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,   361,   362,     0,   363,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,     0,     0,
     370,   371,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,   376,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,     0,     0,     0,   382,     0,
     383,     0,     0,   384,   385,     0,     0,   386,     0,     0,
     387,   388,   933,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,  1506,     0,     0,     0,   428,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,   435,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
     452,     0,   453,   454,   455,     0,   456,     0,     0,   458,
     459,   460,     0,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,     0,   476,     0,   477,
     478,   479,     0,     0,     0,   481,   482,   483,   484,   485,
     486,   487,     0,   488,     0,   489,   490,     0,   491,   492,
     493,     0,   494,     0,     0,   495,   496,   497,   498,     0,
     499,     0,   500,   501,   502,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,   513,   514,   515,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,   530,   531,   532,   533,
     534,     0,     0,   535,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,     0,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,   241,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,   561,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,   568,   569,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,     0,     0,     0,     0,   583,   584,   585,
       0,   586,   587,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,   603,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,     0,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,  5290,     0,   251,     0,     0,
       0,     0,   252,     0,     0,   253,     0,   254,   255,   256,
     257,   258,   259,     0,   260,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,   274,     0,   275,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,   300,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,   310,     0,     0,     0,  5291,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,   319,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,   324,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,     0,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,     0,   345,   346,   347,   348,
       0,     0,   349,   350,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,   361,   362,     0,
     363,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,   371,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,   376,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,   384,   385,     0,
       0,   386,     0,     0,   387,   388,   933,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,  5292,     0,     0,     0,
     428,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,   452,     0,   453,   454,   455,     0,
     456,     0,     0,   458,   459,   460,     0,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
       0,   476,     0,   477,   478,   479,     0,     0,     0,   481,
     482,   483,   484,   485,   486,   487,     0,   488,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,   495,
     496,   497,   498,     0,   499,     0,   500,   501,   502,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,     0,     0,
     513,   514,   515,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
     530,   531,   532,   533,   534,     0,     0,   535,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,     0,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,   241,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,   561,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,   568,   569,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,   587,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,   603,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,     0,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,  2218,
       0,   251,     0,     0,     0,     0,   252,     0,     0,   253,
       0,   254,   255,   256,   257,   258,   259,     0,   260,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,   272,   273,   274,     0,   275,
       0,   276,   277,   278,   279,   280,   281,     0,   282,   283,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,   300,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,   310,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,   319,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
     324,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,     0,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,     0,     0,
     345,   346,   347,   348,     0,     0,   349,   350,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,   361,   362,     0,   363,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,     0,     0,   370,   371,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
     376,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,     0,     0,     0,   382,     0,   383,     0,
       0,   384,   385,     0,     0,   386,     0,     0,   387,   388,
     933,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
    2219,     0,     0,     0,   428,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,   435,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,   452,     0,
     453,   454,   455,     0,   456,     0,     0,   458,   459,   460,
       0,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,     0,   476,     0,   477,   478,   479,
       0,     0,     0,   481,   482,   483,   484,   485,   486,   487,
       0,   488,     0,   489,   490,     0,   491,   492,   493,     0,
     494,     0,     0,   495,   496,   497,   498,     0,   499,     0,
     500,   501,   502,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,   513,   514,   515,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,   530,   531,   532,   533,   534,     0,
       0,   535,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,     0,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,   241,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,   561,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,   568,   569,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,     0,     0,     0,     0,   583,   584,   585,     0,   586,
     587,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,   603,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,     0,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,  2980,     0,   251,     0,     0,     0,     0,
     252,     0,     0,   253,     0,   254,   255,   256,   257,   258,
     259,     0,   260,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,   272,
     273,   274,     0,   275,     0,   276,   277,   278,   279,   280,
     281,     0,   282,   283,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,   300,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,   310,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,   319,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,   324,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,     0,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,     0,     0,   345,   346,   347,   348,     0,     0,
     349,   350,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,   361,   362,     0,   363,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
       0,     0,   370,   371,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,   376,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,     0,     0,     0,
     382,     0,   383,     0,     0,   384,   385,     0,     0,   386,
       0,     0,   387,   388,   933,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,  2981,     0,     0,     0,   428,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
     435,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,   452,     0,   453,   454,   455,     0,   456,     0,
       0,   458,   459,   460,     0,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,     0,   476,
       0,   477,   478,   479,     0,     0,     0,   481,   482,   483,
     484,   485,   486,   487,     0,   488,     0,   489,   490,     0,
     491,   492,   493,     0,   494,     0,     0,   495,   496,   497,
     498,     0,   499,     0,   500,   501,   502,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,     0,     0,   513,   514,
     515,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,   530,   531,
     532,   533,   534,     0,     0,   535,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,     0,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,   241,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,   561,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
     568,   569,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,     0,     0,     0,     0,   583,
     584,   585,     0,   586,   587,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,   603,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,     0,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,   253,     0,   254,
     255,   256,   257,   258,   259,     0,   260,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,   272,   273,   274,     0,   275,     0,   276,
     277,   278,   279,   280,   281,     0,   282,   283,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,   300,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,   310,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,   319,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,   324,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,     0,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,     0,     0,   345,   346,
     347,   348,     0,     0,   349,   350,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,   361,
     362,     0,   363,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,     0,     0,   370,   371,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,   376,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,     0,     0,     0,   382,     0,   383,     0,     0,   384,
     385,     0,     0,   386,     0,     0,   387,   388,   933,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,     0,     0,
       0,     0,   428,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,   435,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,   452,     0,   453,   454,
     455,     0,   456,     0,     0,   458,   459,   460,     0,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,     0,   476,     0,   477,   478,   479,     0,     0,
       0,   481,   482,   483,   484,   485,   486,   487,     0,   488,
       0,   489,   490,     0,   491,   492,   493,     0,   494,     0,
       0,   495,   496,   497,   498,     0,   499,     0,   500,   501,
     502,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
       0,     0,   513,   514,   515,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,   530,   531,   532,   533,   534,     0,     0,   535,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,     0,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,   241,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,   561,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,   568,   569,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,     0,
       0,     0,     0,   583,   584,   585,     0,   586,   587,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,   603,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,     0,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
    -513,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5144,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5145,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,  -483,  -483,
     323,     0,  -483,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5146,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5147,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5148,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5149,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -468,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,  5150,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
       0,     0,     0,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
       0,   479,  -468,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,     0,     0,   489,   490,     0,   491,   492,
     493,  5151,   494,     0,     0,     0,   496,   497,   498,     0,
     499,     0,   500,   501,     0,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,     0,   514,     0,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,     0,   531,   532,   533,
     534,     0,     0,     0,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,     0,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,     0,     0,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,  -468,     0,     0,     0,   583,   584,   585,
       0,   586,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,     0,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,     0,     0,   254,   255,   256,
     257,   258,   259,     0,  -513,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   269,  5144,     0,   270,   271,
       0,   272,   273,     0,     0,     0,     0,   276,   277,   278,
    5145,   280,   281,     0,   282,   283,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,     0,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,     0,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,     0,     0,     0,   320,   321,
     322,     0,  -504,     0,   323,     0,  -504,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,  5146,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,     0,   362,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,  5147,     0,   370,     0,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,     0,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,  5148,
       0,     0,   382,     0,   383,     0,     0,     0,   385,     0,
       0,   386,  5149,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,  -468,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,  5150,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,     0,     0,     0,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,     0,   479,  -468,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,     0,     0,   489,
     490,     0,   491,   492,   493,  5151,   494,     0,     0,     0,
     496,   497,   498,     0,   499,     0,   500,   501,     0,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,     0,     0,
       0,   514,     0,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
       0,   531,   532,   533,   534,     0,     0,     0,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,     0,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,     0,     0,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,  -504,     0,  -468,     0,     0,
       0,   583,   584,   585,     0,   586,     0,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,     0,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,     0,
       0,   254,   255,   256,   257,   258,   259,     0,  -513,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5144,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5145,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,  -501,     0,   323,     0,
    -501,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5146,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5147,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5148,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5149,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -468,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,  5150,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,     0,     0,
       0,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,     0,   479,
    -468,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,     0,     0,   489,   490,     0,   491,   492,   493,  5151,
     494,     0,     0,     0,   496,   497,   498,     0,   499,     0,
     500,   501,     0,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,   514,     0,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,     0,   531,   532,   533,   534,     0,
       0,     0,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,     0,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,     0,     0,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,  -501,
       0,  -468,     0,     0,     0,   583,   584,   585,     0,   586,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,     0,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,     0,     0,   254,   255,   256,   257,   258,
     259,     0,  -513,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   269,  5144,     0,   270,   271,     0,   272,
     273,     0,     0,     0,     0,   276,   277,   278,  5145,   280,
     281,     0,   282,   283,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,     0,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,     0,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,     0,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,  5406,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,  5146,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,     0,   362,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
    5147,     0,   370,     0,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,     0,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,  5148,     0,     0,
     382,     0,   383,     0,     0,     0,   385,     0,     0,   386,
    5149,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,  -468,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
    5150,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,     0,     0,     0,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,     0,   479,  -468,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,     0,     0,   489,   490,     0,
     491,   492,   493,  5151,   494,     0,     0,     0,   496,   497,
     498,     0,   499,     0,   500,   501,     0,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,     0,     0,     0,   514,
       0,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,     0,   531,
     532,   533,   534,     0,     0,     0,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,     0,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
       0,     0,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,  -468,     0,     0,     0,   583,
     584,   585,     0,   586,     0,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,     0,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,  5417,     0,     0,     0,   254,
     255,   256,   257,   258,   259,     0,  -513,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   269,  5144,     0,
     270,   271,     0,   272,   273,     0,     0,     0,     0,   276,
     277,   278,  5145,   280,   281,     0,   282,   283,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,     0,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,     0,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,     0,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,     0,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,  5146,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,     0,
     362,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,  5147,     0,   370,     0,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,     0,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,  5148,     0,     0,   382,     0,   383,     0,     0,     0,
     385,     0,     0,   386,  5149,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,  -468,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,  5150,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,     0,     0,     0,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,     0,   479,  -468,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,     0,
       0,   489,   490,     0,   491,   492,   493,  5151,   494,     0,
       0,     0,   496,   497,   498,     0,   499,     0,   500,   501,
       0,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
       0,     0,     0,   514,     0,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,     0,   531,   532,   533,   534,     0,     0,     0,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,     0,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,     0,     0,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,  -468,
       0,     0,     0,   583,   584,   585,     0,   586,     0,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,     0,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
    -513,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5144,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5145,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,  -506,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5146,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5147,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5148,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5149,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -468,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,  5150,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
       0,     0,     0,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
       0,   479,  -468,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,     0,     0,   489,   490,     0,   491,   492,
     493,  5151,   494,     0,     0,     0,   496,   497,   498,     0,
     499,     0,   500,   501,     0,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,     0,   514,     0,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,     0,   531,   532,   533,
     534,     0,     0,     0,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,     0,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,     0,     0,
       0,     0,   570,     0,     0,   571,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,  -468,     0,     0,     0,   583,   584,   585,
       0,   586,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,     0,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,     0,     0,   254,   255,   256,
     257,   258,   259,     0,  -513,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   269,  5144,     0,   270,   271,
       0,   272,   273,     0,     0,     0,     0,   276,   277,   278,
    5145,   280,   281,     0,   282,   283,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,     0,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,     0,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,     0,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,  5474,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,  5146,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,     0,   362,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,  5147,     0,   370,     0,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,     0,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,  5148,
       0,     0,   382,     0,   383,     0,     0,     0,   385,     0,
       0,   386,  5149,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,  -468,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,  5150,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,     0,     0,     0,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,     0,   479,  -468,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,     0,     0,   489,
     490,     0,   491,   492,   493,  5151,   494,     0,     0,     0,
     496,   497,   498,     0,   499,     0,   500,   501,     0,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,     0,     0,
       0,   514,     0,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
       0,   531,   532,   533,   534,     0,     0,     0,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,     0,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,     0,     0,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,  -468,     0,     0,
       0,   583,   584,   585,     0,   586,     0,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,     0,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,     0,   705,     0,
     706,   244,   245,     0,   246,   247,   248,   249,   250,     0,
       0,   251,     0,     0,     0,     0,   252,     0,     0,     0,
       0,   254,   255,   256,   257,   258,   259,     0,  -513,     0,
       0,     0,   261,     0,     0,     0,   262,     0,     0,   263,
     264,   265,     0,   266,     0,     0,     0,     0,     0,   269,
    5144,     0,   270,   271,     0,   272,   273,     0,     0,     0,
       0,   276,   277,   278,  5145,   280,   281,     0,   282,   283,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   297,   298,   299,     0,
     301,     0,     0,     0,   302,     0,     0,     0,     0,   303,
       0,     0,   304,     0,     0,     0,   305,   306,   307,     0,
       0,   308,     0,     0,     0,     0,   309,     0,     0,     0,
       0,     0,   311,   312,     0,   313,     0,     0,     0,     0,
       0,   314,   315,   316,   317,   318,     0,     0,     0,     0,
       0,     0,   320,   321,   322,     0,     0,     0,   323,     0,
    5508,   325,     0,   326,   327,   328,     0,     0,   329,   330,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   337,
     338,   339,   340,   341,     0,     0,   342,   343,  5146,   344,
     345,   346,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   351,   352,     0,   353,     0,     0,     0,   354,     0,
     355,   356,   357,   358,     0,   359,     0,   360,     0,     0,
       0,     0,   362,     0,     0,     0,     0,   364,   365,     0,
       0,     0,   366,   367,   368,   369,  5147,     0,   370,     0,
     372,     0,     0,   373,     0,     0,     0,     0,   374,   375,
       0,     0,     0,     0,   377,     0,     0,     0,   378,   379,
       0,   380,   381,  5148,     0,     0,   382,     0,   383,     0,
       0,     0,   385,     0,     0,   386,  5149,     0,   387,   388,
       0,     0,     0,     0,     0,   389,   390,     0,   391,     0,
     392,     0,   393,   394,     0,     0,     0,     0,  -468,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   395,     0,     0,     0,   396,   397,   398,   399,     0,
     400,   401,     0,     0,     0,     0,   402,   403,   404,   405,
     406,   407,     0,     0,   408,   409,     0,   410,     0,   411,
       0,   412,   413,   414,   415,   416,   417,   418,   419,   420,
       0,     0,   421,   422,     0,     0,   423,   424,   425,   426,
     427,     0,     0,     0,     0,   429,     0,     0,     0,   430,
       0,   431,   432,     0,   433,   434,  5150,     0,     0,   436,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   437,
     438,   439,     0,   440,     0,   441,     0,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,     0,     0,     0,
       0,   454,   455,     0,   456,     0,   457,   458,   459,   460,
     461,     0,   462,   463,   464,     0,     0,   465,     0,     0,
       0,   466,   467,     0,   468,   469,     0,     0,   470,   471,
     472,   473,   474,     0,   475,   476,     0,   477,     0,   479,
    -468,     0,   480,   481,   482,   483,   484,   485,   486,   487,
       0,     0,     0,   489,   490,     0,   491,   492,   493,  5151,
     494,     0,     0,     0,   496,   497,   498,     0,   499,     0,
     500,   501,     0,   503,   504,     0,   505,   506,     0,     0,
       0,   507,   508,   509,   510,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,   514,     0,   516,     0,   517,
     518,   519,   520,   521,     0,     0,     0,     0,     0,   522,
     523,   524,     0,   525,     0,     0,   526,     0,     0,   527,
       0,   528,     0,   529,     0,   531,   532,   533,   534,     0,
       0,     0,   536,     0,     0,   537,   538,   539,   540,   541,
     542,     0,     0,   543,   544,   545,   546,     0,   547,   548,
       0,     0,   549,   550,   551,   552,     0,     0,   553,   554,
       0,   555,   556,   557,   558,     0,     0,     0,     0,     0,
     559,   560,     0,     0,     0,     0,   562,   563,     0,     0,
     564,   565,     0,   566,   567,     0,     0,     0,     0,     0,
     570,     0,     0,   571,     0,   572,     0,   573,   574,     0,
       0,     0,     0,     0,   575,     0,   576,     0,     0,   577,
       0,     0,     0,   578,     0,   579,   580,   581,   582,     0,
       0,  -468,     0,     0,     0,   583,   584,   585,     0,   586,
       0,   588,   589,     0,     0,   590,     0,     0,   591,   592,
     593,   594,   595,     0,   596,     0,     0,     0,     0,     0,
       0,     0,     0,   597,   598,   599,     0,   600,   601,   602,
       0,     0,     0,     0,   604,     0,   605,     0,     0,     0,
       0,     0,     0,   606,   607,     0,     0,   608,     0,   609,
       0,   610,   611,     0,     0,     0,   612,   613,   614,   615,
     616,   617,   618,   619,     0,   620,     0,     0,     0,   622,
     623,   624,   625,   626,   627,     0,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,     0,
       0,   641,     0,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,     0,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,     0,
     697,   698,   699,     0,   700,   701,   702,     0,   703,     0,
     704,     0,   705,     0,   706,   244,   245,     0,   246,   247,
     248,   249,   250,     0,     0,   251,     0,     0,     0,     0,
     252,     0,     0,     0,     0,   254,   255,   256,   257,   258,
     259,     0,  -513,     0,     0,     0,   261,     0,     0,     0,
     262,     0,     0,   263,   264,   265,     0,   266,     0,     0,
       0,     0,     0,   269,  5144,     0,   270,   271,     0,   272,
     273,     0,     0,     0,     0,   276,   277,   278,  5145,   280,
     281,     0,   282,   283,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     297,   298,   299,     0,   301,     0,     0,     0,   302,     0,
       0,     0,     0,   303,     0,     0,   304,     0,     0,     0,
     305,   306,   307,     0,     0,   308,     0,     0,     0,     0,
     309,     0,     0,     0,     0,     0,   311,   312,     0,   313,
       0,     0,     0,     0,     0,   314,   315,   316,   317,   318,
       0,     0,     0,     0,     0,     0,   320,   321,   322,     0,
       0,     0,   323,     0,  -487,   325,     0,   326,   327,   328,
       0,     0,   329,   330,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   337,   338,   339,   340,   341,     0,     0,
     342,   343,  5146,   344,   345,   346,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   351,   352,     0,   353,     0,
       0,     0,   354,     0,   355,   356,   357,   358,     0,   359,
       0,   360,     0,     0,     0,     0,   362,     0,     0,     0,
       0,   364,   365,     0,     0,     0,   366,   367,   368,   369,
    5147,     0,   370,     0,   372,     0,     0,   373,     0,     0,
       0,     0,   374,   375,     0,     0,     0,     0,   377,     0,
       0,     0,   378,   379,     0,   380,   381,  5148,     0,     0,
     382,     0,   383,     0,     0,     0,   385,     0,     0,   386,
    5149,     0,   387,   388,     0,     0,     0,     0,     0,   389,
     390,     0,   391,     0,   392,     0,   393,   394,     0,     0,
       0,     0,  -468,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   395,     0,     0,     0,   396,
     397,   398,   399,     0,   400,   401,     0,     0,     0,     0,
     402,   403,   404,   405,   406,   407,     0,     0,   408,   409,
       0,   410,     0,   411,     0,   412,   413,   414,   415,   416,
     417,   418,   419,   420,     0,     0,   421,   422,     0,     0,
     423,   424,   425,   426,   427,     0,     0,     0,     0,   429,
       0,     0,     0,   430,     0,   431,   432,     0,   433,   434,
    5150,     0,     0,   436,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   437,   438,   439,     0,   440,     0,   441,
       0,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,     0,     0,     0,     0,   454,   455,     0,   456,     0,
     457,   458,   459,   460,   461,     0,   462,   463,   464,     0,
       0,   465,     0,     0,     0,   466,   467,     0,   468,   469,
       0,     0,   470,   471,   472,   473,   474,     0,   475,   476,
       0,   477,     0,   479,  -468,     0,   480,   481,   482,   483,
     484,   485,   486,   487,     0,     0,     0,   489,   490,     0,
     491,   492,   493,  5151,   494,     0,     0,     0,   496,   497,
     498,     0,   499,     0,   500,   501,     0,   503,   504,     0,
     505,   506,     0,     0,     0,   507,   508,   509,   510,     0,
       0,     0,   511,     0,     0,     0,     0,     0,     0,   514,
       0,   516,     0,   517,   518,   519,   520,   521,     0,     0,
       0,     0,     0,   522,   523,   524,     0,   525,     0,     0,
     526,     0,     0,   527,     0,   528,     0,   529,     0,   531,
     532,   533,   534,     0,     0,     0,   536,     0,     0,   537,
     538,   539,   540,   541,   542,     0,     0,   543,   544,   545,
     546,     0,   547,   548,     0,     0,   549,   550,   551,   552,
       0,     0,   553,   554,     0,   555,   556,   557,   558,     0,
       0,     0,     0,     0,   559,   560,     0,     0,     0,     0,
     562,   563,     0,     0,   564,   565,     0,   566,   567,     0,
       0,     0,     0,     0,   570,     0,     0,   571,     0,   572,
       0,   573,   574,     0,     0,     0,     0,     0,   575,     0,
     576,     0,     0,   577,     0,     0,     0,   578,     0,   579,
     580,   581,   582,     0,     0,  -468,     0,     0,     0,   583,
     584,   585,     0,   586,     0,   588,   589,     0,     0,   590,
       0,     0,   591,   592,   593,   594,   595,     0,   596,     0,
       0,     0,     0,     0,     0,     0,     0,   597,   598,   599,
       0,   600,   601,   602,     0,     0,     0,     0,   604,     0,
     605,     0,     0,     0,     0,     0,     0,   606,   607,     0,
       0,   608,     0,   609,     0,   610,   611,     0,     0,     0,
     612,   613,   614,   615,   616,   617,   618,   619,     0,   620,
       0,     0,     0,   622,   623,   624,   625,   626,   627,     0,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,     0,     0,   641,     0,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,     0,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,     0,   697,   698,   699,     0,   700,   701,
     702,     0,   703,     0,   704,     0,   705,     0,   706,   244,
     245,     0,   246,   247,   248,   249,   250,     0,     0,   251,
       0,     0,     0,     0,   252,     0,     0,     0,     0,   254,
     255,   256,   257,   258,   259,     0,  -513,     0,     0,     0,
     261,     0,     0,     0,   262,     0,     0,   263,   264,   265,
       0,   266,     0,     0,     0,     0,     0,   269,  5144,     0,
     270,   271,     0,   272,   273,     0,     0,     0,     0,   276,
     277,   278,  5145,   280,   281,     0,   282,   283,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   297,   298,   299,     0,   301,     0,
       0,     0,   302,     0,     0,     0,     0,   303,     0,     0,
     304,     0,     0,     0,   305,   306,   307,     0,     0,   308,
       0,     0,     0,     0,   309,     0,     0,     0,     0,     0,
     311,   312,     0,   313,     0,     0,     0,     0,     0,   314,
     315,   316,   317,   318,     0,     0,     0,     0,     0,     0,
     320,   321,   322,     0,     0,     0,   323,     0,     0,   325,
       0,   326,   327,   328,     0,     0,   329,   330,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   337,   338,   339,
     340,   341,     0,     0,   342,   343,  5146,   344,   345,   346,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   351,
     352,     0,   353,     0,     0,     0,   354,     0,   355,   356,
     357,   358,     0,   359,     0,   360,     0,     0,     0,     0,
     362,     0,     0,     0,     0,   364,   365,     0,     0,     0,
     366,   367,   368,   369,  5147,     0,   370,     0,   372,     0,
       0,   373,     0,     0,     0,     0,   374,   375,     0,     0,
       0,     0,   377,     0,     0,     0,   378,   379,     0,   380,
     381,  5148,     0,     0,   382,     0,   383,     0,     0,     0,
     385,     0,     0,   386,  5149,     0,   387,   388,     0,     0,
       0,     0,     0,   389,   390,     0,   391,     0,   392,     0,
     393,   394,     0,     0,     0,     0,  -468,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   395,
       0,     0,     0,   396,   397,   398,   399,     0,   400,   401,
       0,     0,     0,     0,   402,   403,   404,   405,   406,   407,
       0,     0,   408,   409,     0,   410,     0,   411,     0,   412,
     413,   414,   415,   416,   417,   418,   419,   420,     0,     0,
     421,   422,     0,     0,   423,   424,   425,   426,   427,     0,
       0,     0,     0,   429,     0,     0,     0,   430,     0,   431,
     432,     0,   433,   434,  5150,     0,     0,   436,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   437,   438,   439,
       0,   440,     0,   441,     0,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,     0,     0,     0,     0,   454,
     455,     0,   456,     0,   457,   458,   459,   460,   461,     0,
     462,   463,   464,     0,     0,   465,     0,     0,     0,   466,
     467,     0,   468,   469,     0,     0,   470,   471,   472,   473,
     474,     0,   475,   476,     0,   477,     0,   479,  -468,     0,
     480,   481,   482,   483,   484,   485,   486,   487,     0,     0,
       0,   489,   490,     0,   491,   492,   493,  5151,   494,     0,
       0,     0,   496,   497,   498,     0,   499,     0,   500,   501,
       0,   503,   504,     0,   505,   506,     0,     0,     0,   507,
     508,   509,   510,     0,     0,     0,   511,     0,     0,     0,
       0,     0,     0,   514,     0,   516,     0,   517,   518,   519,
     520,   521,     0,     0,     0,     0,     0,   522,   523,   524,
       0,   525,     0,     0,   526,     0,     0,   527,     0,   528,
       0,   529,     0,   531,   532,   533,   534,     0,     0,     0,
     536,     0,     0,   537,   538,   539,   540,   541,   542,     0,
       0,   543,   544,   545,   546,     0,   547,   548,     0,     0,
     549,   550,   551,   552,     0,     0,   553,   554,     0,   555,
     556,   557,   558,     0,     0,     0,     0,     0,   559,   560,
       0,     0,     0,     0,   562,   563,     0,     0,   564,   565,
       0,   566,   567,     0,     0,     0,     0,     0,   570,     0,
       0,   571,     0,   572,     0,   573,   574,     0,     0,     0,
       0,     0,   575,     0,   576,     0,     0,   577,     0,     0,
       0,   578,     0,   579,   580,   581,   582,     0,     0,  -468,
       0,     0,     0,   583,   584,   585,     0,   586,     0,   588,
     589,     0,     0,   590,     0,     0,   591,   592,   593,   594,
     595,     0,   596,     0,     0,     0,     0,     0,     0,     0,
       0,   597,   598,   599,     0,   600,   601,   602,     0,     0,
       0,     0,   604,     0,   605,     0,     0,     0,     0,     0,
       0,   606,   607,     0,     0,   608,     0,   609,     0,   610,
     611,     0,     0,     0,   612,   613,   614,   615,   616,   617,
     618,   619,     0,   620,     0,     0,     0,   622,   623,   624,
     625,   626,   627,     0,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,     0,     0,   641,
       0,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,     0,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,     0,   697,   698,
     699,     0,   700,   701,   702,     0,   703,     0,   704,     0,
     705,     0,   706,   244,   245,     0,   246,   247,   248,   249,
     250,     0,     0,   251,     0,     0,     0,     0,   252,     0,
       0,     0,     0,   254,   255,   256,   257,   258,   259,     0,
    -513,     0,     0,     0,   261,     0,     0,     0,   262,     0,
       0,   263,   264,   265,     0,   266,     0,     0,     0,     0,
       0,   269,  5144,     0,   270,   271,     0,   272,   273,     0,
       0,     0,     0,   276,   277,   278,  5145,   280,   281,     0,
     282,   283,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   297,   298,
     299,     0,   301,     0,     0,     0,   302,     0,     0,     0,
       0,   303,     0,     0,   304,     0,     0,     0,   305,   306,
     307,     0,     0,   308,     0,     0,     0,     0,   309,     0,
       0,     0,     0,     0,   311,   312,     0,   313,     0,     0,
       0,     0,     0,   314,   315,   316,   317,   318,     0,     0,
       0,     0,     0,     0,   320,   321,   322,     0,     0,     0,
     323,     0,     0,   325,     0,   326,   327,   328,     0,     0,
     329,   330,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   337,   338,   339,   340,   341,     0,     0,   342,   343,
    5146,   344,   345,   346,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   351,   352,     0,   353,     0,     0,     0,
     354,     0,   355,   356,   357,   358,     0,   359,     0,   360,
       0,     0,     0,     0,   362,     0,     0,     0,     0,   364,
     365,     0,     0,     0,   366,   367,   368,   369,  5147,     0,
     370,     0,   372,     0,     0,   373,     0,     0,     0,     0,
     374,   375,     0,     0,     0,     0,   377,     0,     0,     0,
     378,   379,     0,   380,   381,  5148,     0,     0,   382,     0,
     383,     0,     0,     0,   385,     0,     0,   386,  5149,     0,
     387,   388,     0,     0,     0,     0,     0,   389,   390,     0,
     391,     0,   392,     0,   393,   394,     0,     0,     0,     0,
    -468,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   395,     0,     0,     0,   396,   397,   398,
     399,     0,   400,   401,     0,     0,     0,     0,   402,   403,
     404,   405,   406,   407,     0,     0,   408,   409,     0,   410,
       0,   411,     0,   412,   413,   414,   415,   416,   417,   418,
     419,   420,     0,     0,   421,   422,     0,     0,   423,   424,
     425,   426,   427,     0,     0,     0,     0,   429,     0,     0,
       0,   430,     0,   431,   432,     0,   433,   434,  5150,     0,
       0,   436,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   437,   438,   439,     0,   440,     0,   441,     0,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,     0,
       0,     0,     0,   454,   455,     0,   456,     0,   457,   458,
     459,   460,   461,     0,   462,   463,   464,     0,     0,   465,
       0,     0,     0,   466,   467,     0,   468,   469,     0,     0,
     470,   471,   472,   473,   474,     0,   475,   476,     0,   477,
       0,   479,  -468,     0,   480,   481,   482,   483,   484,   485,
     486,   487,     0,     0,     0,   489,   490,     0,   491,   492,
     493,  5151,   494,     0,     0,     0,   496,   497,   498,     0,
     499,     0,   500,   501,     0,   503,   504,     0,   505,   506,
       0,     0,     0,   507,   508,   509,   510,     0,     0,     0,
     511,     0,     0,     0,     0,     0,     0,   514,     0,   516,
       0,   517,   518,   519,   520,   521,     0,     0,     0,     0,
       0,   522,   523,   524,     0,   525,     0,     0,   526,     0,
       0,   527,     0,   528,     0,   529,     0,   531,   532,   533,
     534,     0,     0,     0,   536,     0,     0,   537,   538,   539,
     540,   541,   542,     0,     0,   543,   544,   545,   546,     0,
     547,   548,     0,     0,   549,   550,   551,   552,     0,     0,
     553,   554,     0,   555,   556,   557,   558,     0,     0,     0,
       0,     0,   559,   560,     0,     0,     0,     0,   562,   563,
       0,     0,   564,   565,     0,   566,   567,     0,     0,     0,
       0,     0,   570,     0,     0,  5409,     0,   572,     0,   573,
     574,     0,     0,     0,     0,     0,   575,     0,   576,     0,
       0,   577,     0,     0,     0,   578,     0,   579,   580,   581,
     582,     0,     0,  -468,     0,     0,     0,   583,   584,   585,
       0,   586,     0,   588,   589,     0,     0,   590,     0,     0,
     591,   592,   593,   594,   595,     0,   596,     0,     0,     0,
       0,     0,     0,     0,     0,   597,   598,   599,     0,   600,
     601,   602,     0,     0,     0,     0,   604,     0,   605,     0,
       0,     0,     0,     0,     0,   606,   607,     0,     0,   608,
       0,   609,     0,   610,   611,     0,     0,     0,   612,   613,
     614,   615,   616,   617,   618,   619,     0,   620,     0,     0,
       0,   622,   623,   624,   625,   626,   627,     0,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,     0,     0,   641,     0,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,     0,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,     0,   697,   698,   699,     0,   700,   701,   702,     0,
     703,     0,   704,     0,   705,     0,   706,   244,   245,     0,
     246,   247,   248,   249,   250,     0,     0,   251,     0,     0,
       0,     0,   252,     0,     0,     0,     0,   254,   255,   256,
     257,   258,   259,     0,     0,     0,     0,     0,   261,     0,
       0,     0,   262,     0,     0,   263,   264,   265,     0,   266,
       0,     0,     0,     0,     0,   269,     0,     0,   270,   271,
       0,   272,   273,     0,     0,     0,     0,   276,   277,   278,
     279,   280,   281,     0,   282,   283,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,   297,   298,   299,     0,   301,     0,     0,     0,
     302,     0,     0,     0,     0,   303,     0,     0,   304,     0,
       0,     0,   305,   306,   307,     0,     0,   308,     0,     0,
       0,     0,   309,     0,     0,     0,     0,     0,   311,   312,
       0,   313,     0,     0,     0,     0,     0,   314,   315,   316,
     317,   318,     0,     0,     0,     0,     0,     0,   320,   321,
     322,     0,     0,     0,   323,     0,     0,   325,     0,   326,
     327,   328,     0,     0,   329,   330,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   337,   338,   339,   340,   341,
       0,     0,   342,   343,     0,   344,   345,   346,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   351,   352,     0,
     353,     0,     0,     0,   354,     0,   355,   356,   357,   358,
       0,   359,     0,   360,     0,     0,     0,     0,   362,     0,
       0,     0,     0,   364,   365,     0,     0,     0,   366,   367,
     368,   369,     0,     0,   370,     0,   372,     0,     0,   373,
       0,     0,     0,     0,   374,   375,     0,     0,     0,     0,
     377,     0,     0,     0,   378,   379,     0,   380,   381,     0,
       0,     0,   382,     0,   383,     0,     0,     0,   385,     0,
       0,   386,     0,     0,   387,   388,     0,     0,     0,     0,
       0,   389,   390,     0,   391,     0,   392,     0,   393,   394,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   395,     0,     0,
       0,   396,   397,   398,   399,     0,   400,   401,     0,     0,
       0,     0,   402,   403,   404,   405,   406,   407,     0,     0,
     408,   409,     0,   410,     0,   411,     0,   412,   413,   414,
     415,   416,   417,   418,   419,   420,     0,     0,   421,   422,
       0,     0,   423,   424,   425,   426,   427,     0,     0,     0,
       0,   429,     0,     0,     0,   430,     0,   431,   432,     0,
     433,   434,   435,     0,     0,   436,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   437,   438,   439,     0,   440,
       0,   441,     0,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,     0,     0,     0,     0,   454,   455,     0,
     456,     0,   457,   458,   459,   460,   461,     0,   462,   463,
     464,     0,     0,   465,     0,     0,     0,   466,   467,     0,
     468,   469,     0,     0,   470,   471,   472,   473,   474,     0,
     475,   476,     0,   477,     0,   479,     0,     0,   480,   481,
     482,   483,   484,   485,   486,   487,     0,     0,     0,   489,
     490,     0,   491,   492,   493,     0,   494,     0,     0,     0,
     496,   497,   498,     0,   499,     0,   500,   501,     0,   503,
     504,     0,   505,   506,     0,     0,     0,   507,   508,   509,
     510,     0,     0,     0,   511,     0,     0,     0,     0,     0,
       0,   514,     0,   516,     0,   517,   518,   519,   520,   521,
       0,     0,     0,     0,     0,   522,   523,   524,     0,   525,
       0,     0,   526,     0,     0,   527,     0,   528,     0,   529,
       0,   531,   532,   533,   534,     0,     0,     0,   536,     0,
       0,   537,   538,   539,   540,   541,   542,     0,     0,   543,
     544,   545,   546,     0,   547,   548,     0,     0,   549,   550,
     551,   552,     0,     0,   553,   554,     0,   555,   556,   557,
     558,     0,     0,     0,     0,     0,   559,   560,     0,     0,
       0,     0,   562,   563,     0,     0,   564,   565,     0,   566,
     567,     0,     0,     0,     0,     0,   570,     0,     0,   571,
       0,   572,     0,   573,   574,     0,     0,     0,     0,     0,
     575,     0,   576,     0,     0,   577,     0,     0,     0,   578,
       0,   579,   580,   581,   582,     0,     0,     0,     0,     0,
       0,   583,   584,   585,     0,   586,     0,   588,   589,     0,
       0,   590,     0,     0,   591,   592,   593,   594,   595,     0,
     596,     0,     0,     0,     0,     0,     0,     0,     0,   597,
     598,   599,     0,   600,   601,   602,     0,     0,     0,     0,
     604,     0,   605,     0,     0,     0,     0,     0,     0,   606,
     607,     0,     0,   608,     0,   609,     0,   610,   611,     0,
       0,     0,   612,   613,   614,   615,   616,   617,   618,   619,
       0,   620,     0,     0,     0,   622,   623,   624,   625,   626,
     627,     0,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,     0,     0,   641,     0,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,     0,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,     0,   697,   698,   699,     0,
     700,   701,   702,     0,   703,     0,   704,  1743,   705,     0,
     706,     0,  1744,     0,  1745,     0,     0,  1746,     0,     0,
       0,     0,     0,     0,     0,     0,  1723,  1747,  1748,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1749,     0,
       0,  -913,  -913,  1750,  1751,     0,     0,     0,     0,  1752,
       0,  -913,     0,     0,     0,     0,     0,  1753,     0,     0,
       0,     0,     0,  1754,  1755,  1743,     0,  1756,     0,     0,
    1744,     0,  1745,     0,     0,  1746,  1757,     0,     0,     0,
       0,     0,     0,     0,  1723,  1747,  1748,     0,     0,     0,
       0,  1758,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1759,     0,     0,     0,  1760,
       0,     0,     0,     0,     0,     0,  1749,  1761,  1762,     0,
       0,  1750,  1751,     0,  1763,     0,     0,  1752,     0,     0,
       0,     0,  1764,     0,     0,  1753,     0,     0,  1765,     0,
       0,  1754,  1755,     0,     0,  1756,     0,     0,     0,  1766,
       0,     0,     0,     0,  1757,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1758,
       0,     0,  1767,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1759,     0,     0,     0,  1760,     0,     0,
       0,     0,     0,     0,     0,  1761,  1762,     0,     0,     0,
       0,     0,  1763,     0,     0,     0,     0,     0,     0,     0,
    1764,     0,     0,  1768,     0,  1769,  1765,     0,     0,     0,
       0,     0,  1770,     0,     0,     0,     0,  1766,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1771,     0,     0,     0,     0,     0,     0,     0,
    1767,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1772,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1768,     0,  1769,     0,     0,     0,     0,     0,     0,
    1770,  1773,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1774,
    1771,     0,     0,  1775,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1772,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1776,     0,     0,     0,     0,     0,  1777,     0,     0,
       0,     0,     0,     0,  1778,     0,     0,     0,     0,  1773,
       0,     0,     0,  1779,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1774,     0,     0,
       0,  1775,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1780,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1781,  1782,  1783,     0,     0,     0,     0,     0,     0,  1776,
       0,     0,     0,     0,     0,  1777,     0,     0,     0,     0,
       0,     0,  1778,     0,     0,     0,     0,     0,     0,     0,
       0,  1779,  1784,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1780,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1781,  1782,
    1783,     0,     0,     0,     0,     0,     0,     0,  1785,  1786,
    1787,  1788,     0,     0,     0,     0,  1789,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1784,     0,     0,  1790,     0,     0,  1791,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1792,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1785,  1786,  1787,  1788,
       0,     0,     0,     0,  1789,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1794,     0,     0,  1795,
       0,  1790,     0,     0,  1791,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1792,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1793,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1794,     0,     0,  1795,     0,     0,
       0,     0,     0,     0,  1796,  1797,  1798,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1799,  1800,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1796,  1797,  1798,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1799,  1800
};

static const yytype_int16 yycheck[] =
{
       6,     0,    43,    44,    44,  1066,  1162,  1323,   872,    15,
    1016,  1017,    18,  1210,     0,  1256,    22,  1704,  1307,  1798,
    1155,  1307,  1673,  1601,     0,    31,   886,  1063,  1436,   786,
    1036,    60,    38,  1802,  2733,    41,    57,  2951,  1400,  2171,
      46,  2449,  2450,    49,  1131,  1126,  1177,    53,  1126,    55,
    1131,  1400,  1176,  1131,  2490,  2446,     6,   747,  2449,  2450,
    2537,  2538,  1043,  1229,  1230,    64,  3108,    19,  1832,    60,
    2134,  1177,  2134,    43,  2589,  2215,  2931,  2932,    30,  1361,
    1034,  2634,  3164,    35,  1648,  2638,  1067,  1651,    64,  1653,
      59,    97,  1258,  3020,    21,  2611,  1645,  3371,  3760,  2016,
    2017,  1743,  2159,  2725,  1270,  1271,  1272,  3217,    97,  3610,
    1276,   231,  2029,  2030,  2031,  3195,    43,  1153,   121,  1249,
    2592,  1763,   733,   734,  2360,  1711,  1743,    21,  1711,  2365,
    1711,  2251,    22,  2639,  3661,  2631,  2210,  2592,  1323,  1781,
    3760,  2592,  2592,  2639,  1745,   121,  2874,  1131,  1749,  1315,
    3849,  2592,  2947,  1131,  1131,  2915,  3281,  2801,  2215,    49,
    3780,  3781,  1763,  2869,     9,   719,   720,   857,   858,  3281,
     860,  1222,  1223,  1224,  1775,  2521,  2522,  2608,  4466,  4466,
    1146,  3825,  1233,   873,    29,  2107,   192,    21,  2457,    34,
    1657,  2631,  1659,  1660,  1661,  2472,  4075,  1725,  2589,  2639,
      35,    71,    18,    19,  2964,  1665,  1666,  1667,  1405,  4318,
      52,    21,    11,  1264,    22,   221,  1267,   223,    71,    71,
     226,   227,   228,   229,  2501,    73,  2503,  2504,  2416,    73,
      35,  1547,  2624,  2625,  2626,  1286,  1287,   243,  2879,  1290,
     122,    18,    19,  1558,  3004,  3005,    68,    18,    19,  2641,
     194,     5,  2474,   125,  2583,    59,  2771,  1308,  1309,  1574,
    2719,  2483,  1313,  1314,   156,   156,  1581,   125,    18,    19,
    2460,   176,  1587,   223,  2666,   160,   226,  1328,  2670,   144,
      18,    19,   125,    77,  4730,    48,   197,    21,  3160,  1486,
      18,    19,    21,    21,  2686,  2687,   194,  2351,   156,  2353,
    2692,  2523,   192,    18,    19,  2527,   188,  4295,   176,    31,
      18,    19,  2366,   156,   249,  2369,  2708,  2709,  2372,    18,
      19,   162,   239,   131,   125,  2717,    18,    19,    18,    19,
     197,   231,   249,    18,    19,  1199,    19,  3559,  1866,   229,
    4129,    18,    19,  2735,   150,  2861,   156,   204,    62,    18,
      19,    18,    19,   243,   103,   156,   287,   125,  2594,   156,
      18,    19,    64,   156,   204,   387,   158,   156,   282,    21,
    3130,   150,   176,   156,    18,    19,   180,    65,   156,    73,
    2771,    37,    18,    19,   156,  1214,  1215,   103,    48,    73,
     194,    43,    18,    19,   239,   740,   483,   326,    19,   246,
     464,    18,    19,   156,    67,    78,  2185,   372,   290,   197,
     372,   401,   144,   472,   158,   366,  4064,    18,    19,    87,
     111,   160,   156,  3732,  3733,   125,   510,  3736,    57,   285,
     379,   571,    18,    19,  2783,    23,   275,   230,  4495,   582,
      18,    19,   138,   379,    65,  3754,  3720,   197,   369,   156,
     231,  1084,   432,    18,    19,  3565,   194,    12,   246,  3012,
      19,   236,   634,   212,    18,    19,    18,    19,   125,   111,
     571,   258,   292,    61,    62,   392,  3750,  3751,   287,   634,
     368,   186,  5276,   571,    13,    22,    13,   276,  1245,   197,
     372,   193,  2714,  1357,    18,    19,   109,    25,    18,    19,
     236,   708,  1259,   571,    73,   446,  1512,  3660,   368,   373,
     377,    18,    19,   500,   396,    18,    19,  1523,   388,    22,
      77,  4048,   432,   428,    73,   502,   330,   197,  1388,  1389,
      35,   197,   228,     9,  4854,   388,   388,   186,    23,   150,
     349,   278,   276,   453,    87,   245,   227,  4231,   229,   562,
      35,   194,   565,    37,    18,    19,    70,    62,    18,    19,
     428,   266,   571,   219,    49,   108,   130,    77,   256,   276,
     386,  1552,   456,   389,   432,  1556,    61,    62,   126,  1560,
      70,   141,  3135,   249,  3056,   495,  4270,   447,  4697,  4251,
    3552,  3553,   533,   235,   131,   163,    18,    19,   611,   806,
    3562,  3563,  1213,   235,  4924,   130,   209,  1588,  1589,   386,
     432,   140,   389,   140,  1474,   386,   501,   266,   389,   368,
     484,  3930,  5068,   235,   428,   546,   231,   469,   131,   198,
    1184,   608,  4133,    23,   454,   256,   386,  1327,   625,   389,
     168,  4520,   285,  3196,   732,    35,   534,   194,   386,   403,
    2927,   389,   372,   387,  1690,  5449,   828,   571,   386,    49,
     360,   389,   642,   368,    18,    19,   400,  1633,   752,   228,
    1530,    61,    62,   828,   455,  1365,   372,  2226,   386,  2228,
     130,   389,    21,   470,   824,   828,   112,   386,  2828,   115,
     389,  2879,   362,   642,   386,  1385,   386,   389,   376,   389,
      52,   386,  4600,   432,   389,   262,   642,   612,   629,   386,
     186,   593,   389,   719,   720,   417,  1682,   386,  3760,   386,
     389,   727,   389,   729,    81,  4782,   827,   584,   386,   797,
     285,   389,  3774,   542,  2808,   219,   823,  3173,  2100,   368,
    5186,   770,   386,   608,   481,   389,  2968,  1913,  2110,   605,
     386,  2100,   262,   389,   546,  2895,  3192,  4237,   192,   427,
     386,  2893,   501,   389,   828,  3493,  5212,  3282,   500,   386,
     829,  2828,   389,   464,  2996,  2997,  2998,  2999,   729,   770,
     786,   901,   902,   903,   344,   386,   906,   907,   389,  1955,
     910,   241,   912,   913,   914,   634,  3145,   231,  4907,  4908,
     386,  2209,   546,   389,  3320,  2869,   828,  2869,   386,  3281,
    1443,   389,  2729,  3329,  3330,   635,  2458,  3333,  2460,   535,
    3089,   386,  3091,  3445,   389,  3447,    21,   633,   742,   719,
     720,   647,   386,   823,   386,   389,  3024,   389,  2895,  3061,
    3712,  2427,  2611,   614,  2427,   634,  2427,   510,  1899,  2903,
    1404,    43,  2774,   815,   633,   403,   862,   698,   864,   824,
     582,  4509,   386,   869,   552,   389,   386,   987,   799,   389,
     647,  1216,  2038,   636,  4096,  4097,   647,   571,   562,   386,
    1146,  3641,   389,   386,   828,   861,   389,  2354,  2355,  4678,
    3022,  3282,  1869,   828,   823,   752,  4205,   647,   904,   582,
     634,   603,  1456,   909,  3776,  3095,  4215,   824,   622,   647,
    1464,  3552,   752,   642,  4223,   571,  1967,   828,  4797,   647,
    1971,   594,   386,   828,  1535,   389,   386,   634,   828,   389,
     828,   552,   647,  3693,   826,   826,   828,   828,  4926,   647,
    4639,  4640,  1993,   742,   829,   827,   695,   752,   647,  3278,
    3342,  4260,   746,   959,   722,   647,   828,   647,   828,   965,
     828,   828,   647,   828,   386,    18,    19,   389,   826,  4079,
     647,   824,   824,   979,   980,   823,   636,  3436,   647,   823,
     647,   828,  2033,   826,   738,   739,   828,  3503,   823,   647,
    3382,   980,  3384,   562,   828,  1824,  2574,  2583,   655,   656,
    2583,  1007,  2583,   647,   646,   741,  3398,   829,  3400,  4162,
    1016,   647,   600,   562,   627,   823,   826,   833,  1024,  1025,
     795,   647,   633,  3415,   828,   826,  5472,   802,   542,   826,
     647,   828,   386,   826,  3961,   389,   828,   826,  1044,  2236,
     828,    18,    19,   826,   608,   828,   647,   824,   826,   652,
     828,   828,   542,  2832,   826,  4699,   828,   828,    18,    19,
    3452,   647,   630,   611,  1034,  2593,  1895,  1066,   995,   647,
    2036,   916,  5181,   826,   824,   828,  1082,  1083,  2842,   636,
    1066,  3841,   647,   608,   716,  1091,   824,   571,   693,   636,
    1066,  4970,   826,   647,  1021,   647,   824,   500,   655,   656,
     828,   995,    18,    19,    18,    19,   259,  1034,   828,  4191,
    3870,    18,    19,  2892,  1117,   600,  1122,   469,  4080,   826,
     828,   377,  5020,   647,  5246,   824,   191,   647,   141,   828,
     487,   976,  1108,   565,   824,  3895,   828,   982,  1144,   824,
     647,  1117,   638,   828,   647,   655,   656,   824,   282,   575,
     828,   828,   578,   492,  4234,   824,  1162,   824,   608,   828,
    1166,   828,  1168,  1169,  2361,  1171,   824,  1173,  4648,   185,
     828,   371,  1178,  2329,  1180,  1181,   219,  1166,  1184,   613,
     824,   400,   282,   647,   828,  1191,   640,   647,   824,   137,
     747,   748,  1082,  5481,  1200,  1201,  1202,  3874,   824,  1205,
     128,   486,  1208,  1209,   152,  1211,  1212,   824,  1965,  4251,
     600,   828,  3889,  2791,  5501,   176,  4237,  1483,  2507,  2225,
    1209,  2507,   611,   824,   216,   647,   565,   828,    18,    19,
    2592,  1181,   400,    77,   174,   625,    44,   747,   748,  1245,
    4000,  1086,   828,  2592,   761,   158,   652,  4268,  4373,   122,
     828,   231,   216,  1259,  1865,  4954,  1277,   817,   818,   819,
     820,  4373,  4258,   828,  2300,  4261,  1877,  1878,  1879,  1880,
     370,   263,   824,   500,   828,  3706,  3707,  1888,    71,  1255,
     619,   449,    85,  1210,   125,    71,  2485,  1407,  2866,   243,
     371,   230,  2246,   647,  1184,   122,  2383,   636,  2497,   263,
    2254,  1307,  2383,   160,   828,  2383,  5428,  5429,   828,  4929,
      18,    19,  2293,   293,   831,   188,  3662,  1323,  2969,   708,
    2444,   828,  2303,  4118,  2448,  2306,   582,   179,  2309,  2528,
    2454,   344,   828,   386,  1340,  1364,   389,  1343,   455,   122,
      52,  1362,  1363,   995,   563,  1366,  4074,   412,  1369,  1370,
    1371,  4111,   455,  1374,  1375,  1376,  1377,  1378,  1379,  1380,
    1381,    18,    19,  2562,   828,   293,  4072,  1633,   828,  1021,
    3292,   571,  4132,  1364,    18,    19,  5075,  2134,  1384,   165,
    3816,  3817,  1034,  3605,  4144,  1391,  1392,  1393,  1394,  4149,
    1396,  1397,  1398,  4037,  2084,  1401,  1402,  1403,  1404,  2383,
    1406,  5100,   824,  2811,  1410,  2383,  2383,  2723,  3330,   386,
    2772,   200,   389,  3545,  2545,  2546,  1422,   290,   262,  1425,
    2984,    18,    19,  2772,  3896,   828,   386,  1433,  3697,   389,
    1436,  3200,  3564,   823,  1440,  1441,  1425,  2904,  2905,  2545,
    2546,  3896,  3948,  1393,   578,  3896,  3896,  1397,   428,  1455,
    1456,  1401,  3948,  3095,  3594,  3896,   369,  1463,  1464,  3101,
    1466,  1467,  3582,   290,    21,  3539,  3654,   428,  2592,  2751,
     386,   406,   386,   389,   828,   389,   125,   455,  1405,   386,
    2940,  1487,   389,  1524,   823,  3893,  3894,    18,    19,  1495,
     293,  2657,    18,    19,    18,    19,    18,    19,   651,   372,
    4177,   517,  3893,  3894,  1510,  4182,  1495,   290,  3948,  4186,
    1437,  4017,  1518,   162,  1404,  2756,  2757,  3657,  2684,   371,
    2987,  4017,  2989,  2990,   464,  2933,  3443,    26,   571,  3446,
    1536,  1537,  1538,  1539,  1540,  1541,  1542,  3594,  2723,    18,
      19,  1547,    33,  1437,    47,   372,   354,  1553,  4064,  1555,
     160,  1557,  1541,  1559,  1524,   125,  3198,  3199,  1210,  1486,
    5087,  4870,  2116,  4872,  1409,  1455,  1456,  2257,  1557,  5189,
     377,  3625,   828,  1463,  1464,  3852,  1466,  4017,   123,  4659,
      65,  3198,   122,  5282,   194,    84,  1536,  1537,  1538,   372,
    1540,   432,  4506,   429,   647,   388,   386,  1524,  3199,   389,
    3657,   828,   388,  1609,  1610,  1555,  1123,  5108,   562,  1559,
     727,   565,  4004,   614,  3836,  2931,  2932,  3839,  1624,  4615,
     565,  3843,  3844,  1629,   727,  3847,  3848,  2942,  2943,    40,
     419,   432,  3854,   546,  3856,  3857,  2766,    21,   387,   139,
    1629,  1647,   723,  3865,   501,   481,   203,  3869,   188,  1539,
      71,   612,  1542,  4206,   571,  5275,   368,  1663,  3580,   158,
      18,    19,  3898,   614,    53,  2716,  5328,   125,  1674,   571,
     647,    18,    19,  4783,  1663,    64,   137,   237,   386,  5299,
     653,   389,  3324,  1686,  1687,  1688,   483,   647,  1694,    18,
      19,   152,  3278,  1699,  3056,  3278,  3274,  3278,   547,  2896,
    2897,  2898,   247,  4175,   162,  1704,   243,  3056,  1714,  1715,
    1686,  1687,  1688,   216,   406,    21,   629,  4394,  1704,   614,
     593,   332,   371,   658,   137,   582,    18,    19,  1704,   386,
    4245,   647,   389,   647,    18,    19,   588,   179,   237,   152,
     647,   238,   386,  3507,   165,   389,   667,   591,   669,   727,
     290,    32,   604,  1405,   158,  3677,   352,   469,   249,   100,
     365,   366,  3208,   703,   704,  1806,   593,   255,    18,    19,
     614,   256,   156,  4855,   271,   828,   565,    21,   745,   628,
     571,  4003,    18,    19,   275,  1437,    18,    19,   500,   386,
     823,   571,   389,   492,  2830,    18,    19,  5071,    79,   571,
     995,   371,   815,   816,   817,   818,   819,   820,   614,   369,
     593,   655,   656,  5148,  5149,   732,   783,    18,    19,  4746,
    1826,  1827,  4521,   322,    18,    19,  1021,   828,   829,   240,
      74,   331,   372,   237,  1486,   636,  1842,   400,  4460,   122,
    1809,   743,  1034,    18,    19,   681,  3208,   231,   167,    18,
      19,   828,     0,   602,  4245,   386,   829,   647,   389,  3305,
     386,  3512,   386,   389,   386,   389,   565,   389,   828,  1875,
     369,  5491,  1524,   154,   614,   108,  3655,   828,   829,   364,
    4396,   200,  2836,  3805,   209,    18,    19,    18,    19,   434,
     198,   501,  2928,   282,    18,    19,   636,   238,    18,    19,
    4136,  4373,  2938,   747,   748,   188,  4142,   386,   657,   636,
     389,  3110,   828,   371,   828,  2921,   160,   258,  1115,  3281,
     619,   828,   571,   365,   366,   231,    80,   153,    82,   371,
     271,   156,  3281,   828,   741,   742,   219,  1827,   164,   647,
      18,    19,  5113,  3305,   432,  5116,  5028,   421,   366,   127,
     441,  1148,  1842,    19,    18,    19,  3878,   282,   569,  1965,
    1966,    23,  3161,  4371,  4372,   369,   658,   388,    18,    19,
    3169,   125,   582,    35,   414,  3174,   444,   445,   194,   476,
    4371,  4372,   485,  2103,   595,  1875,   546,    49,   221,   796,
     647,   235,   542,  4509,   148,   636,  4237,   415,  4513,    61,
      62,  2612,   400,   647,   549,    18,    19,   290,  4072,   160,
    4072,    18,    19,   354,  3592,  1210,   400,  2023,   824,   263,
    4160,  4161,   828,  3572,  3573,   160,  4166,  4268,   386,   122,
    2059,   389,   823,   187,   824,   448,  2042,  2727,  4430,   386,
     536,   636,   389,   823,   793,    18,    19,   546,  2069,   534,
     647,   823,     7,   593,  2083,    18,    19,   386,  3622,  4612,
     389,  2082,  3626,  2753,  2085,  2755,   479,   552,  2059,   629,
     248,   455,   680,   623,   570,   141,   355,  5412,  5413,    18,
      19,   122,  4912,   691,  2090,   212,  2062,  4917,   828,   372,
    3498,   399,  2083,  2099,   386,   188,  4013,   389,  4015,  4321,
     419,   828,   386,  4160,  4161,   389,   128,   127,   492,  4166,
    2116,   585,  2869,  3310,    13,  3477,   647,   713,   714,   715,
     828,   647,  4513,   647,   823,   647,   219,  2133,  2134,  2135,
     629,   258,  3540,   414,   563,   476,   386,  1334,  5309,   389,
      18,    19,   546,  3912,  2150,  5000,   588,   188,  2154,   455,
     386,   212,   368,   389,   386,   436,  2162,   389,   643,   385,
     393,  2167,   604,   386,   277,   563,   389,   280,   647,  2175,
     403,   828,   497,  2179,  2180,  4691,    13,   410,   219,  4656,
    4657,   565,  3464,   138,   828,   386,   492,   828,   389,   144,
    2179,  2180,   386,    18,    19,   389,   477,   290,   220,    18,
      19,   509,  2208,  2209,    18,    19,  2212,   548,  2214,  2099,
    1405,   386,   212,   532,   389,   209,  2222,   386,   167,  2208,
     389,  4462,   125,  2214,   243,   629,  2116,    13,   248,  5059,
     127,   828,  2238,   828,  3523,   619,   139,  3526,   521,    13,
    3526,   140,  1437,  2133,   823,    18,    19,    13,   747,   290,
      18,    19,   636,   386,   829,   386,   389,   538,   389,   565,
     387,  3552,   386,   282,  2270,   389,   386,   586,   823,   389,
    3561,   293,  2162,   228,   829,    86,  2246,  2167,   344,   372,
      21,   514,    18,    19,  2254,   439,  5328,    11,   282,   647,
    4054,  1486,   571,  3459,   105,   763,   764,   828,   824,  2328,
     647,  2307,  2308,   140,   828,   235,   828,    48,   386,  2236,
     593,   389,  2239,   619,    18,    19,   429,   596,   647,  2246,
     234,   235,   386,  2392,  3096,   389,    19,  2254,    18,    19,
     636,   372,  1524,   263,  3106,  3107,   386,  2328,   582,   389,
      18,    19,  2411,  3474,   570,   824,    19,   261,    18,    19,
      18,    19,  4492,   230,   140,   647,    18,    19,  2364,  2400,
     239,     9,  5122,   647,    18,    19,   140,  3473,  4762,  4805,
     249,  4807,  3661,   386,   140,  3835,   389,  3837,   611,   386,
     235,   816,   389,    31,    64,  3845,  2392,   235,   343,   824,
    3850,  3851,  2433,  3853,    74,  3855,  2402,   647,  3858,  3859,
    3860,  3861,  3862,  3863,  3864,  2411,  3866,  3867,  3868,    89,
    2416,   647,  2418,   386,  2420,   647,   389,  2307,  2308,  4813,
    4814,    18,    19,   386,   647,  2416,   389,  4805,   331,  4807,
     823,   125,   591,   249,  2361,  4492,   829,   503,   504,   823,
    2481,   212,   826,   167,   828,  2451,   647,   386,    18,    19,
     389,  2457,   235,   647,   148,   614,   272,  2463,  2464,  2465,
    2466,  2467,  2468,  2469,  3500,   816,   824,  2473,   141,  2475,
      18,    19,   647,   824,    18,    19,   200,   824,   647,  2485,
     263,  2487,  2488,   824,  2490,   194,  2492,  2493,   823,  2495,
    2496,  2497,   827,   187,   562,   824,  2502,   565,  3504,  2505,
     593,  2507,  3791,   497,   680,  3791,  2512,  2459,   386,  2515,
    2516,   389,   455,   392,   647,   691,   647,   823,  2470,   241,
    2526,  2411,  2528,   647,  2476,   680,  2532,   647,    18,    19,
      18,    19,   824,   563,  3896,   212,   691,   246,   600,  4761,
     824,   508,    38,  5058,  5304,    12,  2552,  3896,  5025,  5026,
      46,   823,   593,  4195,  2506,   235,  2562,  2563,  2510,   621,
     622,   386,    26,   565,   389,  2517,  2518,   386,    33,   647,
     389,   823,   386,   824,   824,   389,   285,   828,  2584,    77,
      18,    19,  2588,   647,  2236,    61,    62,  2239,   824,    61,
      62,  3451,   824,   680,  2246,    93,  5295,   647,  2604,    71,
     828,   824,  2254,   696,   691,  5120,  5121,  2613,  2614,  2615,
    2616,  2617,    84,   386,  3595,  2604,   389,   400,   386,   622,
      84,   389,   625,   824,   571,   824,  2516,  4396,  2634,   828,
     824,   122,  2638,   823,   647,  2611,    18,    19,   103,   606,
     647,  2662,  4109,  4110,   823,    18,    19,   824,    21,   824,
     386,   828,    25,   389,   212,   824,   823,   122,   652,    18,
      19,  5575,  2552,  2613,    13,  2615,  2616,  5058,   824,  4077,
     636,   344,   828,   639,   647,  1097,  1098,   671,  1100,   823,
    1102,  3922,   386,   650,   647,   389,   786,   787,  4910,   789,
     120,   824,   799,   824,  2584,   419,   386,   188,  2588,   389,
     824,    18,    19,  4262,   824,   823,  4265,  4266,   647,  2361,
      61,    62,   819,  2719,  3955,  3956,   386,  2723,   386,   389,
      71,   389,   823,   188,   386,   832,   833,   389,   219,  5120,
    5121,   141,   386,   455,   823,   389,   227,   823,   229,   823,
    3981,   824,    18,    19,   823,   828,   824,   813,   814,   815,
     816,   817,   818,   819,   820,    18,    19,  5456,   823,  4048,
     824,  2767,  2768,   716,   824,   717,   718,   265,   828,   647,
     492,  2777,  3896,   237,   824,   824,  3466,   824,  2784,   828,
     245,   828,   135,  2759,   655,   656,  3646,  3647,  2777,   386,
     824,   140,   389,  2799,   828,  2801,   226,   156,    33,   290,
    2806,  3967,  5024,   824,  2810,  2811,  3962,   828,   532,   563,
     824,   824,  3899,  4175,   828,   197,   386,   824,  3899,   389,
     824,  3899,   647,   829,   828,   290,  4175,   823,   647,   212,
     503,   504,   824,   647,  4709,   823,   828,   823,   386,  4714,
    2846,   389,   386,   565,   342,   389,     7,  2853,  2854,  2878,
    4767,   824,   823,   824,   804,   805,  2862,  2863,   322,   194,
    4026,   824,   586,  2869,   823,    26,  2836,   823,  2874,   122,
     368,   220,   125,  2879,   647,   150,   151,   418,   824,   647,
     197,   372,   828,  2924,   480,  2861,   824,  2878,  2879,   824,
     828,  2545,  2546,   828,  4536,  4537,   386,   619,   386,   389,
     823,   389,   823,  2879,   334,   369,   141,   372,   338,  2836,
      77,   647,  1294,  1295,   636,   345,    26,  4377,  4378,  4379,
    4380,   197,   823,    84,   824,  2931,  2932,  2933,   828,   824,
     823,   396,   430,   828,   344,   188,   937,  3353,   823,   940,
    2961,   276,  2963,   647,   945,   653,   824,  2953,   386,   950,
     285,   389,  2958,   823,  2924,     7,  2846,   647,  3374,   823,
    5092,   824,   823,  2853,  2854,   828,   219,    77,   384,  2896,
    2897,  2898,  4847,   823,    84,   562,  4851,   647,    13,   647,
     100,   319,   320,   144,   823,   647,   324,   325,   492,   377,
     824,   158,   122,   647,   828,   125,   426,  2924,   824,   824,
     666,   667,   828,   669,   386,   824,  3012,   389,    43,   380,
     824,  4373,   197,   386,   249,   823,   389,   824,  3024,  3025,
    3026,   828,   824,   823,  4373,   824,   828,   386,   824,   828,
     389,   824,   828,  3024,   532,   828,   823,   290,  4913,  3045,
     275,  2236,   823,  4918,  2239,   824,  3052,   823,   158,   828,
     647,   824,   387,   823,  2246,  4211,   824,  4063,   188,    94,
     490,   565,  2254,    98,   824,   823,  4222,   177,   828,   386,
     237,   824,   389,   125,   184,   828,   237,   647,   823,  3085,
    4488,   823,   546,  3089,   823,  3091,   138,   231,   824,   219,
     823,  3097,   144,   503,   504,  3101,   824,  1151,  1152,   647,
     828,   823,   593,   647,  3110,  1585,  1586,   824,  4516,   344,
     386,   828,  3118,   389,    21,   619,    59,   824,   238,   372,
     824,   828,   823,   386,   823,   823,   389,   237,   593,  3135,
     365,   366,   636,   824,   824,  3141,   574,   828,   258,   823,
     813,   814,   815,   816,   817,   818,   819,   820,   824,   824,
     246,   271,   828,   828,   824,  3161,   824,   647,   823,   647,
     290,   322,   824,  3169,   122,   629,  2361,  3173,  3174,   824,
     824,   824,   823,   828,  5582,   828,   228,   526,   527,   823,
     529,   530,   531,  3189,  2836,   103,  3192,   823,   100,  3195,
    3196,  5582,   823,   100,   824,   823,   363,   141,   828,   548,
     823,   631,   369,   824,   122,   823,   441,   828,   369,   647,
      12,   823,   322,   824,   823,    26,  4505,   828,   253,   649,
    3226,  4510,   823,   823,  4510,   823,   122,   824,    56,   125,
     188,   696,   824,   176,   354,   824,   828,   180,    66,   828,
     823,   823,   372,   824,  2896,  2897,  2898,   828,    76,   156,
     823,   194,   824,   363,   824,   823,   828,   377,   823,   369,
     823,   219,    90,    91,    92,   647,    77,   602,   503,   504,
     188,   438,  2924,    84,   647,   824,   824,  3283,   106,   828,
     824,   516,   824,   747,   823,   192,   828,   194,   647,   450,
    5512,   343,   188,   824,   141,   823,   331,   828,   823,  3189,
    3716,   823,  5524,   823,   122,   212,   108,   125,   824,   823,
     217,   574,   828,  3319,   823,  4072,  3322,   824,  3324,   823,
     372,   828,   657,   219,   231,   127,   238,   245,  3334,  5551,
     647,   238,   290,  3749,   824,   100,   824,   823,   823,   246,
     593,  3757,  3758,   824,  3320,   823,   258,   828,  3324,  3765,
     141,   258,   823,  3329,  3330,   823,   476,  3333,   824,   271,
     395,   823,   828,   824,   271,   480,   177,   828,   122,   276,
     188,   647,   290,   184,    15,   823,   197,   824,   285,   546,
      21,   828,    77,  3310,   647,   546,    37,   330,   823,   823,
    4798,   823,   823,  3356,   290,  3358,   823,   823,   200,   823,
     344,   219,    43,    12,   141,   815,   816,   817,   818,   819,
     820,   823,  4990,   194,   372,   823,    57,    58,    35,   246,
     620,   500,    63,    37,  4580,  4581,   237,  4583,   548,  3319,
    3436,   598,  3322,   171,   188,   500,   546,   212,   829,   828,
     166,   243,   354,  4684,   141,   823,   276,   354,   563,   194,
    3456,   562,   166,   568,   372,  4590,  4591,   542,   793,   156,
     542,   157,   629,   593,   115,   219,   829,   823,   629,    96,
     377,   122,   290,   238,   828,   823,   372,   829,   396,   823,
     387,   828,   517,   156,   286,   428,   721,  3493,    48,   824,
     156,  3497,  3498,   258,   614,   197,   611,   344,   111,   108,
    3506,   115,   824,   824,   824,   333,   271,   826,   122,   823,
     160,   322,   627,  3519,   827,  5294,   160,  3523,   127,   629,
    3526,   160,   350,   828,   559,   492,   249,  3503,   179,    48,
    3519,   293,    21,   500,  3540,   195,   290,   188,   653,   160,
     246,   194,   237,   444,   445,   383,  3552,  3553,   532,   582,
    3526,   193,   363,   344,   372,  3561,  3562,  3563,   369,   503,
     504,  3552,  3553,  4423,   476,   179,   518,   708,   219,   476,
    3561,  3562,  3563,  5224,   188,     7,   141,    71,   813,   814,
     815,   816,   817,   818,   819,   820,   747,    13,   633,   354,
     199,   824,   824,   500,  3615,    37,   140,    10,   565,   828,
     824,   829,  3608,   824,  3610,   219,   824,   344,   824,   824,
     824,   100,   377,   824,   501,   823,  3506,   419,   372,   275,
     666,   141,   523,   524,   525,   377,   235,   708,   614,    21,
     562,   515,    50,   197,    30,   593,   548,   747,  4954,   290,
     287,   548,   828,   471,  2836,   582,   828,   344,  3654,   287,
    3656,   486,   619,   620,    71,  3661,   503,   504,  3310,   377,
     488,   732,    64,  3654,   828,   571,   227,   156,   363,   636,
     273,   828,    74,   115,   369,   593,   290,   286,   657,   827,
     122,   828,   542,  4839,  5000,  4841,  4842,    89,   817,   829,
     249,  3697,   560,   181,   252,   602,   498,   593,   194,  3705,
     828,  2896,  2897,  2898,   355,   194,   613,   614,   100,   194,
      88,   476,   503,   504,   828,  4871,   367,    21,   558,   828,
     371,   372,   550,   212,   828,   828,   378,   634,   217,   636,
     141,   645,  2924,   136,   156,   546,   824,   179,   728,   567,
      48,   355,   785,   438,   455,  4781,   188,   372,   653,   238,
     657,  3714,  3715,   728,   727,    35,  3719,   246,   372,  5075,
     636,   563,   571,   565,   156,   828,   503,   504,   492,   258,
     502,   827,  3778,   315,     7,   593,   823,   219,   696,   344,
     389,   110,   271,   548,  5100,  3791,   582,   276,  3794,  3795,
     697,   193,  3755,   158,   400,    74,   285,   599,  5087,  3762,
    3763,  3764,   194,   400,  3767,   400,   503,   504,   582,   611,
    3816,  3817,   136,   261,  3820,   261,  3822,    64,   629,  3825,
     212,   400,   136,    77,   344,   217,   400,    74,    48,   400,
     400,   400,  3838,   235,   584,   618,   618,   400,   249,   593,
     828,   565,    89,  5530,   400,   828,   238,   709,   290,   614,
     627,   546,   141,   823,   246,   500,   823,   111,   491,   823,
     828,   263,   763,   764,   824,   354,   258,   609,  3874,   813,
     814,   815,   816,   817,   818,   819,   820,    57,   158,   271,
     824,   447,   162,  3889,   276,  3891,   793,   171,   377,   498,
     377,     7,   716,   285,   108,   619,   803,   377,   387,   111,
     807,   613,  3908,   598,   158,   707,     7,   591,   200,   518,
     197,   824,   636,   355,   824,   824,   824,   824,   816,   826,
     571,   828,   202,    35,   575,   824,   833,   578,   828,   371,
     372,   824,   824,   344,   629,   824,   747,   588,   503,   504,
    4800,   823,   593,   824,   824,   596,   193,   824,   689,   824,
     824,   829,   199,   167,   563,   828,   565,   571,  5199,   568,
     249,   575,   354,   828,   578,   824,  5282,   814,   815,   816,
     817,   818,   819,   820,   588,   824,   824,   828,   824,   593,
     824,   235,   596,   503,   504,   377,   200,   476,   235,   823,
     599,   824,  5264,   829,   603,   387,   192,   829,   400,   824,
     820,   823,   611,   829,   823,   828,   287,   287,  5205,   287,
      64,   500,   828,   827,   287,   417,   263,   287,  3908,   287,
      74,   287,   813,   814,   815,   816,   817,   818,   819,   820,
     828,  4037,   160,   824,   828,    89,   377,   582,  4898,  5280,
     634,   282,  4048,   828,   653,   582,   158,    19,   828,   828,
     162,   492,    13,   829,   160,   344,   829,   828,   828,   548,
     197,   582,   255,   432,   582,   194,  4072,   321,  4074,   829,
     829,  4077,   829,   829,  4080,   828,   813,   814,   815,   816,
     817,   818,   819,   820,   476,   339,   829,   824,  4064,  4080,
     202,   824,   503,   504,  5155,   197,   427,   614,   707,   823,
      60,   513,   382,   607,   824,   404,   747,   828,   500,   363,
     194,   752,   403,   602,   830,  3310,   813,   814,   815,   816,
     817,   818,   819,   820,   565,   614,   401,  4133,  5400,   571,
     788,   788,   228,   575,   403,   144,   578,   103,   418,   193,
     571,   782,   571,   571,   668,   634,   588,   636,   828,   341,
     793,   593,   829,   400,   596,    60,   548,   798,   379,   477,
    4201,   597,   442,   263,   815,   816,   727,   402,   657,   263,
     417,  4177,   823,  4179,   263,   287,  4182,   823,   619,   620,
    4186,   235,   377,   492,   706,   249,   823,   467,   672,  4195,
     672,   500,   160,   160,  5466,   636,  5468,   160,   160,   708,
    4206,   815,   816,   160,   160,   419,   160,    77,   697,   263,
     602,   641,  5484,   286,   503,   504,   857,   858,    19,   860,
     861,   464,   614,    93,  4230,   377,   653,   154,  4234,   245,
     245,   511,   873,   457,   458,   459,   460,   461,   462,   463,
     790,   824,   634,   824,   636,   829,  5518,  5519,   813,   814,
     815,   816,   817,   818,   819,   820,   565,   824,   571,   824,
    5549,   829,   542,  5549,   134,   657,   828,   824,  4274,  4275,
     382,   518,   824,  5562,   571,   824,  5562,   824,  5567,   582,
     654,  5567,   160,   161,   824,  5574,   571,   823,  5574,   828,
    4296,   829,   546,   813,   814,   815,   816,   817,   818,   819,
     820,   862,   829,   829,   793,   697,   418,   800,   582,   563,
     619,   620,  4318,   828,   803,   210,   116,   117,   118,   119,
     120,   377,   197,   201,   823,   730,   828,   636,   969,   212,
     442,   732,   372,   432,   823,   824,   214,   826,   828,   828,
    4230,   335,   156,   554,   833,   823,  4296,   611,   823,   823,
      12,   565,    64,   403,   995,   467,   603,   500,  5514,     7,
     343,   403,    74,   417,   828,    73,  1007,   532,   532,   532,
     532,   491,   586,   815,   816,   377,   254,    89,   823,   263,
    1021,   823,   823,   263,  4274,   823,   614,   591,  4394,   267,
     366,   828,   563,  1034,  4400,   265,   636,   611,   959,   511,
     582,   793,   813,   814,   815,   816,   817,   818,   819,   820,
     563,   803,  5276,   627,   828,   582,   294,   372,   450,   377,
    4396,   828,     4,   223,   224,   225,   226,   377,   160,   824,
     542,    15,   824,   824,   826,   823,   828,   823,   823,    21,
     823,   833,   160,   160,   160,   160,   160,   160,   823,   160,
     562,   160,   823,   565,   108,  1016,   160,   160,   160,   160,
     160,   160,   160,  1024,  1025,   160,   160,   160,   160,   160,
     160,   160,   342,   160,   160,   160,   160,   160,   160,    63,
     358,   193,  4488,  1044,   160,   160,   160,   199,  4494,   160,
     160,   160,   160,   160,    19,   365,   366,   823,   368,  4505,
     823,   784,   212,   823,  4510,   413,   823,    62,   247,   247,
    4516,   720,    21,   167,   823,    48,   750,   824,   824,   824,
    5380,   494,   823,   235,   813,   814,   815,   816,   817,   818,
     819,   820,   828,  4509,   334,   828,   336,   337,   338,   160,
     687,   687,  4548,   571,   285,   345,   200,   824,  1189,    12,
     546,   263,   824,   160,   817,   384,  4562,  5417,   231,   282,
     430,   828,   823,   160,  5570,   186,   384,   604,   197,  1210,
     828,   824,   824,   824,   824,   824,    48,  1218,  1219,   258,
     201,   235,   390,  1144,   217,  5449,  1227,  1228,  1229,  1230,
    1231,  1232,   258,   214,  4600,   160,   160,   828,  4604,  1240,
    1241,   160,  1243,  1244,   403,    48,  4612,  1248,  1249,   160,
    1171,  1252,  1253,  1254,  1255,   823,  1257,  1258,   823,   228,
     103,  5481,   791,   245,  1265,  1266,   426,  1268,  1269,  1270,
    1271,  1272,   286,   278,  1275,  1276,  1277,  1278,  1279,  1280,
    1281,  1282,  1283,   829,  1285,   266,   267,  1288,  1289,   111,
     111,   162,  1293,  4659,   400,   823,  1297,  1298,  1299,   729,
    5524,   368,   532,   823,   823,   823,   823,   440,   823,  1310,
    1311,  1312,   125,   294,  1315,   565,   824,  1318,  1319,  1320,
    1321,  1322,    56,   824,   815,   582,  1327,  5551,  1329,   489,
     490,  4697,    66,  4699,  4700,   383,   823,   228,  1339,  1340,
     823,   472,    76,   824,   823,   417,  1347,   245,  1349,  1350,
     824,   372,   377,  4719,   824,  4691,    90,    91,    92,   636,
    1361,  1362,  1363,   400,  1365,  1366,   824,  4733,  1369,  1370,
    1371,   824,   106,  1374,  1375,  1376,  1377,  1378,  1379,  1380,
    1381,   362,   824,   197,  1385,   582,   210,    21,   269,  1390,
     377,   432,   828,   828,   582,   197,   833,   611,   258,   833,
     414,   833,   258,   258,  1405,   419,   697,   160,   126,   277,
      48,    21,   403,  4779,    21,    48,    35,    36,    48,    48,
      27,   153,   817,    35,   823,   625,    35,   729,   608,   125,
    4779,   203,  4798,   263,   263,   416,  1437,   477,    64,  4805,
      35,  4807,    61,    62,   372,   823,   518,   415,   377,  4849,
     372,   372,    77,    72,    73,    21,   829,    64,   823,   377,
     824,   377,   828,  1384,    71,   824,   824,   487,    75,   824,
      77,   631,   824,   824,   824,   824,   341,  1398,    97,   265,
      99,   427,    89,  4733,   498,  1486,   828,    48,   648,   649,
     109,   515,  1493,   387,   824,   377,   175,   285,   384,   210,
      21,   147,   249,   197,   518,   372,   258,   258,  4874,   807,
     803,   824,  1433,   160,    21,   823,   823,   823,   125,    26,
      27,    28,   823,  1524,   824,  1526,   405,   120,   120,   828,
    1531,   603,    48,    48,    48,   387,   377,   619,   157,   158,
     823,  4907,  4908,    15,   163,   372,    21,   166,   367,   563,
     828,    81,   143,   111,   568,   620,    63,   176,   828,   823,
     372,   228,  4928,   515,   824,   828,   372,    21,   824,   173,
      77,  4937,   586,   341,    48,   824,    83,    84,   377,   198,
      87,   200,   263,   384,   417,   599,   194,    21,   160,   828,
     209,   823,   211,   276,   162,   824,   203,   611,   318,   333,
     823,   608,   608,   397,   111,  1606,    48,   673,    21,   828,
    4991,   824,   194,   627,   824,  5015,   350,   636,   125,  4985,
     112,   824,   129,   828,  1625,   162,   636,   263,   608,   246,
     823,   136,   824,   824,  5000,   573,   136,   824,   823,   653,
     823,   823,   823,   136,   823,   158,   823,   823,   377,   156,
     537,   158,   824,   828,  5020,   472,   263,   483,   149,   691,
     678,   653,   387,   282,   565,    48,    48,   823,   691,   155,
     534,   554,   633,    32,   691,   830,    64,   384,    64,   483,
     824,    19,  1683,   824,   824,   633,   702,   553,   197,    32,
     824,   384,   384,   707,   143,   691,   483,   701,   688,   464,
       6,   377,   377,   246,   154,   826,   134,   171,   608,   130,
     633,   154,   230,   292,   826,   830,   124,    83,   702,    54,
     574,  5087,   826,  5339,   231,  5091,  1647,   143,   235,   160,
     154,   481,  5098,  5099,   574,   242,   215,   828,  5354,   826,
     228,    54,  5108,   154,    48,   454,   194,   194,   194,   574,
     125,   635,  5368,  1674,   488,   262,   377,  5123,   365,   366,
     231,   380,   698,   196,   371,   500,   372,   823,   275,  5135,
     377,   828,   331,   160,   372,   160,    12,  3481,  1699,  5145,
     160,   794,  3233,  3235,  5150,  3871,   801,  3229,   407,  4699,
    3231,  4702,  4910,  3887,  3690,  4713,  5155,  1215,  5061,   418,
     419,  5185,   421,   422,   423,  5421,  5362,  1720,   752,  5155,
     417,  5415,  4928,  4726,   321,  5181,   550,  5551,  5434,  5155,
    5067,  5512,    46,  2868,   443,  1073,  2806,  4037,  5444,  5431,
    5520,  5042,   339,   567,  5332,  5431,  5042,  5413,   782,  5358,
    5357,  3896,  5208,  2448,  5042,  5042,  5042,  1176,  5229,  5042,
    5042,  5042,  5218,  5042,   798,  5042,  5042,  5042,  5042,  3477,
    2454,  5477,  4373,  4175,  2585,  4396,  3330,  3329,  3333,  4128,
    5486,  4830,  5488,  5306,  5240,  4597,  5389,  5243,   497,  5318,
    5316,  5015,  2545,  2427,  4398,  4195,  4248,   394,  5504,   496,
    5256,  3324,  4196,   400,  3767,  3733,   403,  3766,  4626,  3432,
    1901,  5328,  4251,  5379,  1905,  4847,  4913,  5019,  4851,  4861,
    4918,  4604,  1913,  3097,  1915,  1874,  5316,   861,  5205,  5535,
    5536,  4222,  4392,   542,  5540,  3901,  3007,   546,  3312,  3000,
    2546,  5297,  4676,  2315,  2546,  2545,  1696,  2317,  1668,   546,
    1078,  1852,  3797,   562,  2859,  3127,   565,  2853,   455,  3226,
    3506,  1827,  2842,  4055,  1955,    64,  1340,  2395,  5208,  4421,
    2217,  2090,  2765,  2021,  2723,  4984,   585,  4954,  5282,  1259,
    1008,  5380,  2879,  5297,  2879,   482,  2879,  5481,  5379,  2879,
    5501,  4809,  5099,  4539,  3820,   492,  1233,  5098,  4108,  4823,
    1609,  1091,  4550,  3568,  4985,  1007,   603,  3791,  1999,  2000,
    2001,  2402,  4949,  4845,   623,  5371,    16,  2772,  5389,  2100,
    1704,   630,  1704,  3503,  1445,  3503,  4512,  1607,  4068,  3501,
    4493,  4505,  1704,  1704,   966,   969,  2301,  1157,  1573,  1158,
    5042,   538,   539,   540,   541,  1695,  2793,  2038,  2302,   546,
    3189,  2191,  2043,  5480,  4787,  4156,  5498,  4587,   655,   656,
    5574,  5567,  4462,   995,  4268,  4510,   563,  4816,   565,   566,
    3025,  2062,  4571,  1007,  1343,  1522,  3838,  2239,  2069,  5290,
    5436,  2924,    43,  2074,    43,  2076,  1437,  5443,   995,  1021,
    1520,  2082,  2234,  2084,  2085,  2232,  2254,  1478,  2846,  2604,
    2596,  2605,  4776,  1663,   996,   602,  1482,  2995,   705,  4959,
      11,    11,  2023,  5477,  1215,  1215,  1215,  3505,  3904,  4286,
    4393,  4721,   619,  3810,    -1,    -1,    -1,  5307,    -1,  5485,
    1131,  2042,   729,    -1,  5490,    -1,    -1,    -1,    -1,   636,
      -1,    -1,    -1,   752,   753,    -1,  5148,  5149,    -1,    -1,
     747,   748,  1084,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5524,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5530,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   798,
      -1,    -1,    -1,  5549,    -1,  5551,    -1,    -1,    -1,    -1,
      -1,    -1,  5558,  5205,  5530,    -1,  5562,    -1,    -1,    -1,
      -1,  5567,    -1,    -1,    -1,    -1,    -1,    -1,  5574,    -1,
      -1,    -1,    -1,    -1,  2135,    -1,    -1,   724,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2236,    -1,    -1,  2239,    -1,
     747,   748,    -1,    -1,    -1,  2246,  2247,    -1,    -1,    -1,
    2251,  5263,  5264,  2254,  2175,    -1,  2257,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1210,    -1,
      -1,    -1,    -1,    -1,  1218,  1219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1227,  1228,    -1,    -1,  1231,  1232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1240,  1241,    -1,  1243,
    1244,  2222,    -1,    -1,  1248,    -1,    -1,    -1,  1252,  1253,
    1254,  1255,    -1,  1257,    -1,    -1,   823,  2238,    -1,   826,
      -1,  1265,  1266,    -1,  1268,  1269,    -1,  5339,    -1,    -1,
      -1,  1275,    -1,    -1,  1278,  1279,  1280,  1281,  1282,  1283,
      -1,  1285,  5354,    -1,  1288,  1289,    -1,    -1,    -1,  1293,
      -1,    -1,    -1,  1297,  1298,  1299,  5368,    -1,    -1,    -1,
    2361,    -1,    -1,    -1,    -1,    -1,  1310,  1311,  1312,    -1,
      -1,    -1,    -1,    -1,  1318,  1319,  1320,  1321,  1322,    -1,
      -1,    -1,    -1,    -1,    -1,  1329,    -1,    -1,  5400,    -1,
      -1,    -1,    -1,    -1,    -1,  1339,  1340,    -1,    -1,    -1,
    5412,  5413,    -1,  1347,    -1,  1349,  1350,    -1,    -1,  5421,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5444,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2364,    -1,  2446,  1390,    -1,  2449,  2450,
      -1,    -1,    -1,    -1,  5466,    -1,  5468,    -1,    -1,    -1,
      -1,    -1,    -1,  1405,    -1,  5477,    -1,    -1,    -1,    -1,
      -1,    -1,  5484,    -1,  5486,    -1,  5488,    -1,    -1,    -1,
      -1,  2402,    -1,    -1,    -1,    -1,    -1,  5042,    -1,    -1,
    5042,    -1,  5504,    -1,    -1,  1437,    -1,  2418,    -1,  2420,
      -1,  1443,    -1,    -1,    -1,    -1,  5518,  5519,    -1,  1724,
      -1,  1726,  1727,    -1,    -1,  1457,  1731,    -1,    -1,    -1,
      -1,    -1,    -1,  5535,  5536,    -1,    -1,    -1,  5540,  1744,
      -1,    -1,  1747,  1748,    -1,  1750,    -1,    -1,  1753,  1754,
    1755,  1756,    -1,    -1,  1486,  1760,    -1,    -1,    -1,  1493,
    1765,    -1,    -1,    -1,    -1,  1770,  1771,  1772,  1773,  1774,
      -1,    -1,    -1,  1778,  1779,  2566,    -1,    -1,    -1,  1784,
      -1,  1786,  1787,  1788,  2495,  1790,  1791,    -1,  1793,    -1,
      -1,  1796,  1526,    -1,  1799,  1800,    -1,  1531,    -1,    -1,
      -1,    -1,    -1,  5148,  5149,    -1,  5148,  5149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2532,    -1,    -1,    -1,    -1,    -1,    -1,  2619,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2628,  2629,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2649,  2650,
    5205,  2652,    -1,    -1,  2655,  2656,  2657,  2658,  2659,    -1,
      -1,  2662,  1606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2671,    -1,    -1,    -1,    -1,  2676,    -1,  2678,    -1,  2680,
    2681,  1625,  2683,  2684,    -1,    -1,    -1,  2688,  2689,  2690,
      -1,    -1,    -1,  2694,  2695,  2696,    -1,  2698,    -1,  2700,
      -1,  2702,    -1,  2704,    -1,  2706,    -1,    -1,  5263,  5264,
    2711,  5263,  5264,  2634,    21,    -1,    -1,  2638,    -1,    26,
      27,    28,    -1,  1665,  1666,  1667,  2727,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2737,    -1,    -1,  1683,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2751,    -1,  2753,    -1,  2755,    -1,    63,    -1,  2759,    -1,
      -1,    -1,    -1,    -1,  2765,  2766,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,
      87,    -1,    -1,    -1,  5339,    -1,    -1,  5339,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5354,
      -1,    -1,  5354,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5368,    -1,    -1,  5368,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2836,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5400,    -1,  2848,  5400,   156,
      -1,   158,    -1,    -1,    -1,    -1,    -1,  5412,  5413,    -1,
    5412,  5413,    -1,  2784,    -1,    -1,  5421,    -1,    -1,  5421,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2799,  5434,
      -1,    -1,  5434,    -1,    -1,    -1,    -1,    -1,    -1,  5444,
      -1,    -1,  5444,    -1,    -1,  2896,  2897,  2898,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5466,    -1,  5468,  5466,    -1,  5468,    -1,    -1,    -1,
      -1,    -1,  5477,  2924,   231,  5477,    -1,    -1,   235,  5484,
      -1,  5486,  5484,  5488,  5486,   242,  5488,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5504,
    2951,    -1,  5504,    -1,    -1,   262,    -1,  1901,    -1,    -1,
    2961,  1905,  2963,  5518,  5519,    -1,  5518,  5519,    -1,    -1,
      -1,  1915,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5535,  5536,    -1,  5535,  5536,  5540,    -1,    -1,  5540,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    -1,
      -1,    17,    27,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    32,    -1,    -1,  3020,
      36,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,    50,    51,    -1,    18,    19,    64,
      -1,    -1,    58,    -1,    -1,    -1,    71,    63,    64,    -1,
      75,    -1,    77,    -1,    -1,  1999,  2000,  2001,    -1,    -1,
      -1,    -1,    -1,    79,    89,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   394,    -1,    -1,
      -1,  3012,    -1,   400,    -1,    -1,   403,    -1,    -1,  2043,
     125,    -1,    -1,    -1,    -1,   121,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   131,   132,    -1,  2062,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,
    2074,  2346,  2076,    -1,    -1,   116,   117,   118,   119,   120,
     156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,    -1,
      -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3085,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,   482,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,   215,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3135,    -1,    -1,   233,    -1,    -1,
      -1,  2163,    -1,  2165,    -1,   241,    -1,    -1,   244,    -1,
      -1,   538,   539,   540,   541,    -1,    -1,    -1,   263,   546,
    2455,    -1,   223,   224,   225,   226,    -1,    -1,   264,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,   565,   566,
      -1,    -1,    -1,    -1,    -1,   281,    -1,  2482,    -1,   285,
      -1,    -1,    -1,    -1,  3195,  3196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2236,   602,    -1,  2239,    -1,    -1,
      -1,    -1,    -1,  2247,    -1,    -1,    -1,  2251,    -1,  3310,
      -1,    -1,   619,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2265,    -1,  2540,  2541,    -1,    -1,   636,
      -1,    -1,    -1,  2548,    -1,    -1,    -1,    -1,    -1,  3340,
     365,   366,    -1,    -1,    -1,    -1,   371,  3348,    -1,    -1,
      -1,    -1,   377,   334,    -1,   336,   337,   338,    -1,    -1,
      -1,    -1,  3283,    -1,   345,   381,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3385,  3386,    -1,    -1,    -1,    -1,
      -1,  2606,   417,    -1,    -1,    -1,    -1,    -1,   414,    -1,
      -1,    -1,    -1,    -1,    -1,   386,    -1,    -1,   389,   425,
    3411,    -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,  2361,
    3421,    -1,  3423,    -1,  3425,    -1,    -1,    -1,    -1,    -1,
      -1,   447,    -1,    -1,   450,    -1,   452,    -1,    -1,   455,
     747,   748,    -1,    -1,    -1,   426,    -1,    -1,    -1,   465,
     466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3459,   475,
      -1,   477,    -1,  3464,    -1,  3466,    -1,    -1,    -1,    -1,
     486,   496,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,   505,
     506,   507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3501,  2443,    -1,    -1,    -1,  2447,    -1,    -1,   489,   490,
    2452,    -1,    -1,    -1,    -1,    -1,   823,    -1,    -1,   826,
      -1,   546,   538,    -1,    -1,    -1,    -1,    -1,    35,   545,
      -1,    -1,    -1,    -1,    -1,  2477,  2478,  2479,  2480,    -1,
      -1,    -1,    -1,  3544,    -1,    -1,    -1,    -1,    -1,   565,
      -1,    -1,    -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2509,    -1,    -1,
      -1,    -1,    -1,   589,    -1,    -1,    -1,    -1,   603,    -1,
      -1,  3582,    -1,    -1,    -1,   601,    -1,    -1,    -1,   605,
      -1,    -1,    -1,    -1,    -1,  2537,  2538,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,  3615,    -1,   123,    -1,    -1,    -1,
     636,    -1,  2566,    -1,    -1,    -1,    -1,    -1,   644,    -1,
     655,   656,    -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   660,   661,   662,   663,    -1,    -1,
     631,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,
      -1,    -1,    -1,    -1,    -1,    -1,   647,   648,   649,    -1,
      -1,    -1,    -1,    -1,    -1,  2619,    -1,    -1,    -1,    -1,
     705,    -1,   189,    -1,  2628,  2629,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3696,   712,    -1,   205,    -1,
      -1,    -1,    -1,    -1,   729,  2649,  2650,    -1,  2652,    -1,
      -1,  2655,  2656,  2657,  2658,  2659,    -1,    -1,    -1,    -1,
      -1,    -1,   747,   748,    -1,    -1,    -1,  2671,    -1,    -1,
      -1,    -1,  2676,    -1,  2678,   751,  2680,  2681,    -1,  2683,
      -1,    -1,    -1,    -1,  2688,  2689,  2690,    -1,    -1,    -1,
    2694,  2695,  2696,   260,  2698,    -1,  2700,    -1,  2702,    -1,
    2704,    -1,  2706,    -1,    -1,    -1,    -1,  2711,    -1,    -1,
      -1,    -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2737,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   823,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2759,    -1,    -1,    -1,    -1,
      -1,  2765,    -1,    -1,    -1,  3040,    -1,  3042,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,   356,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3893,  3894,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   408,   409,    -1,  2848,    -1,    -1,  2849,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3926,    -1,   434,    -1,    -1,
      -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    36,  2896,  2897,  2898,    -1,  3959,    -1,
    3961,    -1,    -1,  3964,  3965,    -1,  3967,    50,    51,    -1,
      -1,    -1,    -1,    -1,    -1,    58,    -1,  3978,    -1,    -1,
      63,    64,  3983,    -1,    -1,  3986,    -1,    -1,  3989,  3990,
      -1,    -1,    -1,    -1,    -1,  3210,    79,    -1,  2940,    -1,
      -1,   508,    -1,    -1,    -1,    -1,    -1,  2951,    -1,    -1,
    4011,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4026,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   121,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,   132,
    4051,    -1,    -1,    -1,    -1,    -1,    -1,  4058,    -1,    -1,
     143,   144,    -1,    -1,    -1,    -1,    -1,  4068,    -1,    -1,
      -1,   578,  3287,  3288,  3289,  3290,  3020,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   606,
      -1,  3043,    -1,    -1,  4105,  4106,    -1,   190,    -1,    -1,
      -1,    -1,    -1,  3055,    -1,  3057,  3058,  3059,  3060,    -1,
    3062,  3063,    -1,    -1,    -1,   208,    -1,   210,    -1,    -1,
      -1,    -1,   215,    -1,    -1,   218,    -1,    -1,    -1,    26,
      27,    28,   649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   241,    -1,
      -1,   244,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    61,    62,    63,    -1,    -1,    -1,
      -1,   264,    -1,    -1,    71,    -1,  4187,    -1,    -1,    -1,
      77,    -1,    -1,    -1,  3136,    -1,    83,    84,   281,    -1,
      87,    -1,   285,    -1,    -1,    -1,    -1,  3149,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
      -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,
      -1,   158,    -1,    -1,    12,    -1,    14,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4206,    -1,    -1,    26,    27,
      28,    -1,  4293,  4294,    -1,    -1,    -1,    -1,   381,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4234,    -1,    -1,    -1,    -1,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,   414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,   425,    -1,    -1,    83,    84,    -1,   235,    87,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,   447,    -1,    -1,   450,  3310,   452,
    4371,  4372,   455,   111,    -1,   262,    -1,    -1,    -1,    -1,
      -1,    -1,   465,   466,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,   475,    -1,   477,    -1,  3340,    -1,    -1,   137,
      -1,    -1,    -1,   486,  3348,    -1,   144,    -1,    -1,   492,
      -1,    -1,    -1,    -1,   152,    -1,    -1,   500,    -1,    -1,
     158,    -1,   505,   506,   507,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,
      -1,  3385,  3386,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   339,    -1,   192,   538,    -1,    -1,    -1,    -1,
      -1,    -1,   545,    -1,    -1,    -1,    -1,  3411,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3421,    -1,  3423,
      -1,  3425,   565,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    -1,   242,  4506,   589,   394,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   403,    -1,   601,    -1,
      -1,    -1,   605,    -1,   262,    -1,    -1,    -1,    -1,  4530,
     613,  4532,    -1,    -1,    -1,    -1,   619,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,   636,    -1,   232,    -1,  3501,    -1,    -1,
      -1,   644,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   675,    -1,    -1,   482,    -1,    -1,    -1,    -1,
    3544,   339,    -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   712,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3582,    -1,
    4641,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   387,
      -1,   538,   539,   540,   541,    -1,   394,    -1,    -1,   546,
    3875,  3876,    -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,
      -1,    -1,  4673,    -1,    -1,    -1,   563,    -1,    -1,   566,
      -1,    -1,  3624,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4612,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   450,    -1,    -1,   602,    -1,    -1,    -1,    -1,
      -1,  3663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4659,    -1,
     823,    -1,    -1,    -1,   482,  4746,    -1,    -1,  4749,    -1,
      -1,    -1,  3696,    26,    27,    28,    -1,    -1,    -1,    -1,
      -1,  4762,    -1,    -1,    -1,    -1,    -1,   444,   445,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4719,    -1,
     538,   539,   540,   541,    77,    -1,    -1,    -1,   546,    -1,
      83,    84,  4813,  4814,    87,  4816,    -1,    -1,    -1,    -1,
    4821,    -1,    -1,    -1,    -1,   563,    -1,    -1,   566,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   724,   111,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,    -1,
     747,   748,    -1,    -1,   602,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   158,  3828,    -1,    -1,    -1,
      -1,    -1,    -1,  3835,    -1,  3837,    -1,    -1,   636,    -1,
      -1,   639,    -1,  3845,  3846,    -1,    -1,    -1,  3850,  3851,
      -1,  3853,    -1,  3855,    -1,    -1,  3858,  3859,  3860,  3861,
    3862,  3863,  3864,    -1,  3866,  3867,  3868,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4949,    -1,
    3892,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3926,    -1,    -1,    -1,   724,    -1,    -1,   262,
    4991,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   747,
     748,    -1,    -1,    -1,    -1,  3959,    -1,  3961,    -1,    -1,
    3964,  3965,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4246,  4247,    -1,  3978,    -1,  5037,    -1,    -1,  3983,
      -1,  5042,  3986,    -1,    -1,  3989,  3990,    -1,   321,    -1,
      -1,  5052,    -1,    -1,   731,    -1,    -1,    -1,   735,    -1,
     737,    -1,    -1,   740,    -1,    -1,   339,  4011,    -1,    -1,
      -1,    -1,   749,    -1,    -1,    -1,  5077,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,    -1,    -1,  4051,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   792,    -1,    -1,    -1,    -1,
      -1,   394,    -1,    -1,  4068,    -1,    -1,    -1,    -1,    -1,
     403,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5142,    -1,    -1,    -1,    -1,    -1,  5148,  5149,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4105,  4106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4116,  4117,    -1,  4119,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5205,    -1,    -1,    -1,    -1,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4187,    -1,    -1,    -1,    -1,  5249,    -1,
    5251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5261,    -1,  5263,  5264,    -1,   538,   539,   540,   541,    -1,
      -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     563,    -1,    -1,   566,  4236,    -1,    -1,  5218,    -1,    -1,
      34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5240,
      -1,    -1,  5243,    -1,    -1,    -1,    -1,    -1,    62,   602,
      -1,    -1,    -1,    -1,    -1,    -1,  5337,    -1,  5339,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4293,
    4294,    -1,    -1,  5354,  5355,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5368,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,  5389,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5399,  5400,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,
      -1,  5412,  5413,    34,    35,    -1,    -1,    -1,    -1,    40,
    5421,    42,    -1,    44,    45,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5434,    -1,  4377,  4378,  4379,  4380,    -1,
    5441,    62,    -1,  5444,    -1,    -1,    -1,    -1,    -1,    -1,
    5371,   724,    -1,   187,    -1,   189,    -1,    -1,  5459,    -1,
      -1,    -1,    -1,    -1,    -1,  5466,    -1,  5468,    -1,    -1,
      -1,   205,   206,    -1,   747,   748,  5477,    -1,    -1,    -1,
      -1,    -1,    -1,  5484,    -1,  5486,    -1,  5488,    -1,    -1,
      -1,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   123,  5504,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,  5518,  5519,    -1,
      -1,   142,    -1,    -1,  5525,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5535,  5536,    -1,    -1,   159,  5540,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,  4506,    -1,    -1,    -1,   187,    -1,   189,    -1,
      -1,    -1,    -1,   194,  5575,    -1,    -1,    -1,    -1,    -1,
      -1,  5582,    -1,    -1,   205,   206,  4530,    -1,  4532,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,  4558,    -1,    -1,   353,
      -1,    -1,   356,    -1,    -1,    -1,   247,    -1,  4570,  4571,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5558,    -1,   260,
     374,   375,  4857,  4858,  4859,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,   289,    -1,
     291,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4641,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,    -1,
      -1,    -1,    -1,    -1,  4656,  4657,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,  4673,
      -1,    -1,   353,    -1,    -1,   356,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4689,    -1,    -1,
      -1,    -1,    -1,   374,   375,    -1,    -1,    -1,    -1,    -1,
    4702,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   409,  4731,
      -1,    -1,  5007,    -1,    -1,  5010,  5011,  5012,  5013,    -1,
      -1,    -1,  4746,    -1,    -1,  4749,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,  4762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    34,    35,    -1,    -1,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,  4813,
    4814,    -1,  4816,    -1,    -1,   496,    -1,  4821,    -1,   500,
      -1,    -1,    62,  4825,    -1,    -1,    -1,   621,   622,    -1,
      -1,   512,    -1,    -1,  5109,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5118,  5119,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5127,    -1,  4856,   649,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   572,    -1,    -1,   575,    -1,    -1,   578,   579,   580,
     581,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   159,
      -1,    -1,    -1,  4925,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     621,   622,    -1,    -1,    -1,  4949,    -1,   187,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   205,   206,    -1,   649,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4989,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   247,    -1,    -1,
      -1,    -1,    -1,    -1,   808,    -1,    -1,    -1,    -1,    -1,
     260,    -1,    -1,  5025,  5026,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5037,   828,    -1,    -1,    -1,    -1,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,   289,
      -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5077,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,  5117,   356,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   808,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,    -1,    -1,  5142,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5192,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5205,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5234,  5235,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5249,    -1,  5251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,  5261,    -1,    -1,
     500,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   572,  5337,    -1,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   621,   622,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5399,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5441,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5459,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,  5525,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,   808,    72,
      73,  5575,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,   565,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,   815,   816,    -1,    -1,    -1,    -1,   821,    -1,
     823,    -1,    -1,    -1,   827,    -1,    -1,    -1,   831,   832,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    46,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,   268,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,   583,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,
     815,   816,    -1,    -1,    -1,    -1,   821,    -1,   823,    -1,
      -1,    -1,   827,    -1,    -1,    -1,   831,   832,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,   815,   816,
      -1,    -1,    -1,    -1,   821,    -1,   823,    -1,    -1,    -1,
     827,    -1,    -1,    -1,   831,   832,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
      -1,    -1,    -1,    -1,    -1,    -1,   815,   816,   817,    -1,
      -1,    -1,   821,    -1,   823,    -1,    -1,    -1,   827,    -1,
      -1,    -1,   831,   832,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,    -1,
      -1,    -1,    -1,    -1,   815,   816,   817,    -1,    -1,    -1,
     821,    -1,   823,    -1,    -1,    -1,   827,    -1,    -1,    -1,
     831,   832,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,   815,   816,    -1,    -1,    -1,    -1,   821,    -1,
     823,    -1,    -1,    -1,   827,    -1,    -1,    -1,   831,   832,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,
     815,   816,    -1,    -1,    -1,    -1,   821,    -1,   823,    -1,
      -1,    -1,   827,    -1,    -1,    -1,   831,   832,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,   815,   816,
      -1,    -1,    -1,    -1,   821,    -1,   823,    -1,    -1,    -1,
     827,    -1,    -1,    -1,   831,   832,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
      -1,    -1,    -1,    -1,    -1,    -1,   815,   816,    -1,    -1,
      -1,    -1,   821,    -1,   823,    -1,    -1,    -1,   827,    -1,
      -1,    -1,   831,   832,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
     101,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,    -1,
      -1,    -1,    -1,    -1,   815,   816,    -1,    -1,    -1,    -1,
     821,    -1,   823,    -1,    -1,    -1,   827,    -1,    -1,    -1,
     831,   832,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,   815,   816,    -1,    -1,    -1,    -1,   821,    -1,
     823,    -1,    -1,    -1,   827,    -1,    -1,    -1,   831,   832,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,
     815,   816,    -1,    -1,    -1,    -1,   821,    -1,   823,    -1,
      -1,    -1,   827,    -1,    -1,    -1,   831,   832,     5,     6,
      -1,     8,     9,    10,    11,    12,    13,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,   815,   816,
      -1,    -1,    -1,    -1,   821,    -1,   823,    -1,    -1,    -1,
     827,    -1,    -1,    -1,   831,   832,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
      -1,    -1,    -1,    -1,    -1,    -1,   815,   816,    -1,    -1,
      -1,    -1,   821,    -1,   823,    -1,    -1,    -1,   827,    -1,
      -1,    -1,   831,   832,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,    -1,
      -1,    -1,    -1,    -1,   815,   816,    -1,    -1,    -1,    -1,
     821,    -1,   823,    -1,    -1,    -1,   827,    -1,    -1,    -1,
     831,   832,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,   396,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,   476,   477,   478,   479,   480,    -1,   482,
     483,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,   587,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,   615,   616,   617,   618,   619,   620,    -1,    -1,
     623,   624,    -1,   626,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,   664,   665,    -1,   667,   668,   669,   670,   671,   672,
     673,    -1,   675,   676,   677,   678,   679,   680,    -1,   682,
     683,   684,   685,   686,   687,   688,    -1,   690,   691,   692,
     693,   694,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,   815,   816,    -1,    -1,    -1,    -1,   821,    -1,
     823,    -1,    -1,    -1,   827,    -1,    -1,    -1,   831,   832,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
     365,    -1,   367,   368,   369,    -1,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,   476,   477,   478,   479,   480,    -1,   482,   483,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,   587,   588,   589,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
     615,   616,   617,   618,   619,   620,    -1,    -1,   623,   624,
      -1,   626,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,    -1,
     675,   676,   677,   678,   679,   680,    -1,   682,   683,   684,
     685,   686,   687,   688,    -1,   690,   691,   692,   693,   694,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,
     815,   816,    -1,    -1,    -1,    -1,   821,    -1,   823,    -1,
      -1,    -1,   827,    -1,    -1,    -1,   831,   832,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,    -1,
     367,   368,   369,    -1,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,   476,
     477,   478,   479,   480,    -1,   482,   483,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
     587,   588,   589,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,
     617,   618,   619,   620,    -1,    -1,   623,   624,    -1,   626,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,    -1,   675,   676,
     677,   678,   679,   680,    -1,   682,   683,   684,   685,   686,
     687,   688,    -1,   690,   691,   692,   693,   694,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,    -1,    -1,    -1,    -1,    -1,    -1,   815,   816,
      -1,    -1,    -1,    -1,   821,    -1,   823,    -1,    -1,    -1,
     827,    -1,    -1,    -1,   831,   832,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,    -1,   371,   372,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,   476,   477,   478,
     479,   480,    -1,   482,   483,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,
     589,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,   615,   616,   617,   618,
     619,   620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,    -1,   675,   676,   677,   678,
     679,   680,    -1,   682,   683,   684,   685,   686,   687,   688,
      -1,   690,   691,   692,   693,   694,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
      -1,    -1,    -1,    -1,    -1,    -1,   815,   816,    -1,    -1,
      -1,    -1,   821,    -1,   823,    -1,    -1,    -1,   827,    -1,
      -1,    -1,   831,   832,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,   365,    -1,   367,   368,   369,    -1,
     371,   372,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,   396,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,   476,   477,   478,   479,   480,
      -1,   482,   483,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,   615,   616,   617,   618,   619,   620,
      -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,    -1,   675,   676,   677,   678,   679,   680,
      -1,   682,   683,   684,   685,   686,   687,   688,    -1,   690,
     691,   692,   693,   694,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,    -1,
      -1,    -1,    -1,    -1,   815,   816,    -1,    -1,    -1,    -1,
     821,    -1,   823,    -1,    -1,    -1,   827,    -1,    -1,    -1,
     831,   832,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,   492,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,   619,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,   636,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
     823,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   832,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,   145,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
     823,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   832,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,    -1,    -1,    -1,    -1,
      -1,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
     823,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,   832,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,   828,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    37,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,   396,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   391,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   824,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   827,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   827,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,   619,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,   823,   824,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   824,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   824,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,   199,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,   263,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
     275,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   823,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   823,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   823,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     823,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,   823,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   823,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,     6,
      -1,     8,     9,    10,    11,    12,   817,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,    -1,    -1,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,    -1,    -1,   735,    -1,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,    -1,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,    -1,   794,   795,   796,
      -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,   806,
      -1,   808,     5,     6,    -1,     8,     9,    10,    11,    12,
     817,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,    -1,    -1,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
      -1,    -1,   735,    -1,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,    -1,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
      -1,   794,   795,   796,    -1,   798,   799,   800,    -1,   802,
      -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,     8,
       9,    10,    11,    12,   817,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,    -1,    -1,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,    -1,    -1,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,    -1,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,    -1,   794,   795,   796,    -1,   798,
     799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,
       5,     6,    -1,     8,     9,    10,    11,    12,   817,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,    -1,    -1,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,    -1,    -1,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,    -1,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,    -1,   794,
     795,   796,    -1,   798,   799,   800,    -1,   802,    -1,   804,
      -1,   806,    -1,   808,     5,     6,    -1,     8,     9,    10,
      11,    12,   817,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,   532,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,    -1,
      -1,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,    -1,    -1,   735,    -1,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
      -1,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,    -1,   794,   795,   796,    -1,   798,   799,   800,
      -1,   802,    -1,   804,    -1,   806,    -1,   808,   809,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,   608,   609,   610,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,   210,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,   440,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
     492,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,   505,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,   586,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,   608,   609,   610,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    14,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    99,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,   130,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,   144,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,   210,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,   285,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,    -1,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,   440,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,   505,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,   586,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
     608,   609,   610,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,    -1,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,    -1,    -1,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,   520,   521,   522,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    18,    19,
      20,    21,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,   386,    -1,    -1,   389,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,   647,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,   501,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,   199,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,   263,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,   371,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    95,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,   172,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    17,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,    -1,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,    -1,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,    -1,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,    -1,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,    -1,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,    -1,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,    -1,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,    -1,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,
     422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,   451,
     452,   453,    -1,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
      -1,   449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,    -1,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,    -1,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,    -1,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,    -1,   421,   422,   423,
      -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,    -1,   449,    -1,   451,   452,   453,
      -1,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,    -1,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,    -1,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,    -1,   421,   422,   423,    -1,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,    -1,   449,    -1,   451,   452,   453,    -1,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,   150,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,   633,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,   633,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    21,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,    -1,   806,    -1,
     808,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,    -1,    -1,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,    -1,
      -1,   735,    -1,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,    -1,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,    -1,
     794,   795,   796,    -1,   798,   799,   800,    -1,   802,    -1,
     804,    -1,   806,    -1,   808,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
      -1,    -1,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,    -1,    -1,   735,    -1,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,    -1,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,    -1,   794,   795,   796,    -1,   798,   799,
     800,    -1,   802,    -1,   804,    -1,   806,    -1,   808,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,
      -1,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,    -1,    -1,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,    -1,    -1,   735,
      -1,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,    -1,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,    -1,   794,   795,
     796,    -1,   798,   799,   800,    -1,   802,    -1,   804,    -1,
     806,    -1,   808,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,    -1,    -1,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,    -1,    -1,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,    -1,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,    -1,   794,   795,   796,    -1,   798,   799,   800,    -1,
     802,    -1,   804,    -1,   806,    -1,   808,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,    -1,    -1,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,    -1,    -1,   735,    -1,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,    -1,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,    -1,   794,   795,   796,    -1,
     798,   799,   800,    -1,   802,    -1,   804,     7,   806,    -1,
     808,    -1,    12,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    -1,
      -1,    61,    62,    63,    64,    -1,    -1,    -1,    -1,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,     7,    -1,    87,    -1,    -1,
      12,    -1,    14,    -1,    -1,    17,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    26,    27,    28,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    58,   137,   138,    -1,
      -1,    63,    64,    -1,   144,    -1,    -1,    69,    -1,    -1,
      -1,    -1,   152,    -1,    -1,    77,    -1,    -1,   158,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   137,   138,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     152,    -1,    -1,   233,    -1,   235,   158,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,   169,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,   235,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,
     262,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,   321,
      -1,    -1,    -1,   403,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,
      -1,   343,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     450,   451,   452,    -1,    -1,    -1,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,    -1,    -1,
      -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,    -1,    -1,   563,    -1,    -1,   566,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,
      -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   639,
      -1,   563,    -1,    -1,   566,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   636,    -1,    -1,   639,    -1,    -1,
      -1,    -1,    -1,    -1,   724,   725,   726,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   747,   748,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   724,   725,   726,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   747,   748
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   751,   823,   835,   836,   839,   840,   841,
     842,   843,   845,   850,   852,   878,   879,   880,   881,   883,
     886,   908,   930,   937,   938,  1173,  1174,  1176,  1178,  1180,
    1183,  1185,  1186,  1187,  1188,  1189,  1191,  1192,  1227,  1228,
    1235,  1236,  1239,  1252,  1254,  1258,  1263,  1264,  1268,  1270,
    1275,  1279,  1285,  1286,  1287,  1288,  1289,  1290,  1291,  1296,
    1297,  1427,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,
    1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,  1476,  1485,
    1486,  1507,  1508,  1512,  1516,  1522,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,
    1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,
    1577,  1578,  1580,  1586,  1595,  1605,  1609,  1611,  1612,  1690,
    1692,  1694,  1717,  1723,  1725,  1726,  1727,  1729,  1733,  1735,
    1772,  1778,  1779,  1780,  1781,  1819,  1831,  1832,  1834,  1835,
      12,   108,   127,   200,   243,   286,   419,   498,   563,   565,
     599,   611,   707,  1791,  1792,  1793,  1796,   282,   370,  1269,
    1773,   571,  1665,   235,     5,     6,     8,     9,    10,    11,
      12,    15,    20,    23,    25,    26,    27,    28,    29,    30,
      32,    36,    40,    43,    44,    45,    47,    49,    50,    53,
      56,    57,    59,    60,    61,    63,    65,    66,    67,    68,
      69,    70,    72,    73,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    90,    91,    92,
      93,    94,    98,   103,   106,   110,   111,   112,   115,   120,
     121,   126,   127,   129,   135,   136,   137,   138,   139,   143,
     146,   147,   148,   152,   154,   155,   157,   158,   159,   162,
     163,   165,   166,   167,   168,   169,   170,   173,   174,   175,
     176,   177,   180,   181,   183,   184,   185,   186,   187,   190,
     191,   195,   196,   198,   202,   204,   205,   206,   207,   209,
     211,   215,   216,   218,   221,   222,   226,   227,   228,   229,
     232,   233,   234,   237,   242,   243,   244,   248,   252,   253,
     255,   256,   260,   262,   265,   266,   269,   272,   273,   279,
     280,   282,   284,   286,   287,   315,   319,   320,   321,   322,
     324,   325,   330,   331,   332,   333,   334,   335,   338,   339,
     341,   343,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   356,   357,   360,   361,   362,   363,   364,   368,   369,
     373,   375,   376,   378,   379,   380,   383,   393,   394,   395,
     397,   399,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   412,   414,   415,   416,   418,   420,   421,   422,
     423,   424,   426,   427,   428,   431,   435,   436,   438,   439,
     442,   443,   444,   445,   446,   448,   449,   451,   452,   453,
     456,   457,   458,   459,   460,   461,   462,   463,   465,   467,
     468,   470,   471,   472,   474,   477,   478,   479,   480,   482,
     484,   485,   486,   487,   488,   490,   491,   495,   496,   497,
     498,   502,   506,   508,   509,   510,   511,   513,   514,   515,
     516,   517,   523,   524,   525,   527,   530,   533,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   549,   550,   551,
     552,   553,   554,   557,   558,   559,   560,   562,   563,   566,
     567,   568,   569,   572,   573,   575,   576,   577,   578,   584,
     585,   589,   590,   591,   594,   595,   597,   598,   600,   601,
     604,   607,   609,   611,   612,   618,   620,   623,   627,   629,
     630,   631,   632,   639,   640,   641,   643,   644,   645,   646,
     649,   652,   653,   654,   655,   656,   658,   667,   668,   669,
     671,   672,   673,   675,   678,   680,   687,   688,   691,   693,
     695,   696,   700,   701,   702,   703,   704,   705,   706,   707,
     709,   712,   713,   714,   715,   716,   717,   718,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   735,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   794,   795,   796,
     798,   799,   800,   802,   804,   806,   808,   902,  1662,  1671,
    1681,  1682,  1683,  1685,  1686,  1689,   456,   562,   565,  1719,
    1719,   640,  1774,   108,   199,   286,   389,   498,   518,   563,
     568,   599,   603,   611,   653,   707,  1151,  1481,  1788,  1792,
    1793,  1794,  1795,  1796,     8,    23,    29,    35,    37,    38,
      39,    41,    54,    55,    61,    62,    69,    72,    96,    97,
     102,   104,   107,   108,   113,   114,   115,   120,   122,   125,
     171,   178,   179,   188,   195,   205,   207,   213,   219,   226,
     230,   241,   245,   271,   279,   290,   318,   323,   334,   338,
     340,   344,   345,   346,   347,   348,   355,   365,   366,   367,
     371,   372,   396,   408,   409,   411,   426,   454,   455,   474,
     476,   483,   484,   490,   543,   544,   551,   555,   556,   561,
     571,   575,   576,   577,   578,   587,   588,   589,   593,   596,
     611,   615,   616,   617,   619,   624,   626,   631,   632,   649,
     664,   665,   670,   676,   677,   679,   682,   683,   684,   685,
     686,   690,   692,   694,   744,   782,   799,   815,   816,   817,
     821,   823,   827,   831,   832,  1124,  1289,  1307,  1308,  1311,
    1312,  1313,  1315,  1319,  1322,  1324,  1325,  1327,  1328,  1329,
    1336,  1337,  1341,  1364,  1365,  1366,  1641,  1643,  1646,  1647,
    1648,  1649,  1650,  1651,  1654,  1657,  1659,  1662,  1671,  1783,
    1785,   108,   167,   200,   235,   286,   419,   498,   518,   563,
     586,   599,   611,   627,   653,   707,  1481,  1671,  1269,   103,
     535,   939,    13,    14,    99,   130,   144,   167,   170,   183,
     210,   235,   241,   274,   285,   420,   424,   440,   448,   456,
     492,   505,   506,   557,   586,   608,   610,  1662,  1665,  1672,
    1676,  1683,  1686,  1687,  1689,  1739,  1740,  1660,  1671,   851,
     565,   128,   220,   293,  1487,   406,   658,    87,   427,  1610,
     111,   235,   646,  1613,   243,  1719,  1269,  1671,  1606,   486,
     611,  1719,  1269,   128,   293,  1488,  1511,   652,  1596,   521,
     927,   931,   932,  1671,   230,  1479,  1774,  1671,    13,   140,
     220,   526,   527,   529,   530,   531,   548,  1298,  1299,  1300,
    1786,    61,    62,   125,   209,   282,   351,   403,   497,   584,
     652,   653,   671,   707,   827,  1126,  1662,  1674,  1682,  1683,
    1685,  1686,  1688,  1691,  1701,  1706,  1707,    35,    36,    61,
      72,    97,    99,   109,   158,   163,   166,   176,   198,   200,
     209,   211,   282,   380,   407,   418,   419,   422,   423,   443,
     497,   546,   565,   630,   752,   753,   798,  1126,  1568,  1570,
    1571,  1572,  1702,   931,   204,   584,   752,   204,   752,  1660,
    1671,   565,  1517,   406,   658,   243,  1724,  1671,   483,  1497,
    1501,   659,  1428,  1429,  1671,    32,    79,   154,   414,   436,
     477,   538,  1822,  1315,  1671,  1662,   400,  1043,   823,  1784,
    1785,   243,   282,  1311,  1286,  1287,  1289,  1427,  1494,     0,
     156,   837,   414,   104,   274,   611,  1200,  1665,  1671,  1675,
    1677,  1678,  1761,  1764,   126,   403,   611,  1229,  1230,  1231,
    1232,  1233,  1234,   194,   246,   285,  1301,  1302,  1458,   387,
     602,   657,   793,  1440,  1441,  1288,   130,   608,    17,   195,
    1581,  1582,  1660,   160,  1204,  1671,   160,   902,   137,   152,
     448,   479,  1728,   212,   902,  1675,  1671,  1660,   563,  1479,
     212,   167,  1182,  1791,  1719,  1774,  1276,  1277,  1660,   823,
     909,   829,   185,   517,  1477,  1660,  1477,    19,  1775,   230,
    1074,   235,   212,   455,  1675,   235,   716,  1671,   563,  1074,
    1074,   212,   235,   565,  1787,  1787,  1791,  1796,   823,   823,
     823,  1322,   823,   823,   823,  1311,  1377,   823,   823,   823,
     823,   823,   823,   823,   823,  1310,  1310,   823,  1112,   823,
     823,   823,   571,   823,   823,   823,  1784,   823,   823,   823,
     823,   823,   823,   823,   823,   823,  1311,   823,   823,   823,
    1375,  1376,  1657,  1671,   823,   823,   823,   823,   823,   823,
     823,   823,   823,  1311,  1112,   823,   823,   823,   823,   823,
     823,   823,   823,   823,   823,   823,   823,   823,   823,   823,
     823,  1112,   571,   823,   823,   823,   571,   823,   823,   823,
      37,   219,   571,   823,  1310,  1112,  1112,   823,   823,   823,
     823,   823,   823,   823,   823,   823,   823,   823,   823,   823,
     823,   823,   823,   823,   823,   823,   823,   823,   823,   823,
    1322,  1322,  1322,   619,  1287,  1289,  1311,   827,  1675,  1671,
     828,    18,    19,    21,   386,   389,   571,   647,  1309,  1316,
    1317,  1670,  1671,   160,   161,   201,   214,   254,   267,   294,
     358,  1320,    33,   141,   249,   275,   344,   365,   366,   441,
     503,   504,   516,   721,   813,   814,   815,   816,   817,   818,
     819,   820,  1318,  1322,    71,   388,   571,  1666,   259,   651,
     823,   829,  1479,  1479,  1479,  1671,   212,  1479,  1479,   716,
    1671,  1479,   563,  1479,  1479,  1479,   212,  1719,   846,  1587,
     135,   418,  1738,   480,   480,   563,   568,   611,   627,   653,
     653,   384,   823,  1765,   562,   377,  1765,    67,   510,  1765,
     109,   627,  1765,   827,  1765,   377,   582,   828,   380,    68,
     432,   829,  1675,   197,   231,  1223,  1671,  1665,  1833,  1311,
     246,    85,   293,  1616,   194,  1718,  1719,   197,    35,  1607,
    1671,  1272,  1678,  1271,  1719,   246,  1489,  1479,  1598,    35,
     752,  1597,  1600,   620,   928,   500,   933,   171,    13,   424,
    1739,   582,  1775,  1307,  1300,   500,   653,   829,    35,   125,
     160,   501,  1127,  1498,  1675,   194,   582,  1498,   255,   432,
    1709,  1710,  1712,  1714,    13,   125,   364,  1676,  1679,  1747,
     212,   827,  1675,    35,   125,  1129,  1130,  1675,   829,   125,
     584,  1697,  1705,  1707,   828,  1698,  1498,   287,   799,   166,
     275,   634,  1424,  1576,   823,   108,   167,   200,   419,   565,
     586,   611,   627,  1576,    13,  1567,  1675,   276,  1445,  1446,
     197,   249,  1569,  1573,   198,    70,   542,   194,   562,    70,
     542,    13,    43,    94,    98,   253,   331,   395,   517,   559,
    1518,  1519,  1520,   166,   542,  1445,   542,   840,  1576,   157,
     421,   585,   234,   235,   261,  1150,    73,   562,   542,   623,
     933,   432,   636,  1240,  1241,  1242,   446,   533,  1247,  1248,
    1249,  1247,  1660,  1671,  1833,  1719,   823,   828,  1428,   828,
     823,  1430,    37,   219,  1642,  1666,  1821,  1821,  1821,    96,
    1820,  1821,  1821,   156,   829,   823,    48,   156,   156,   197,
     111,   156,   824,  1301,   824,   824,   826,  1671,  1310,   823,
     138,   228,   372,  1750,  1754,  1755,  1762,   827,     7,   125,
     138,   144,   228,   343,  1749,  1750,  1754,  1755,  1756,  1757,
    1758,  1759,   464,   828,  1767,   160,   160,   160,   828,   502,
     608,  1303,   146,   391,   827,  1456,  1457,  1459,  1675,   249,
    1302,  1458,  1301,    48,    13,   140,  1782,  1782,  1782,  1445,
    1440,   231,   293,   428,  1514,  1515,  1511,   195,  1581,   160,
     246,  1583,   194,  1579,  1584,  1585,  1642,  1671,   332,   569,
     595,  1175,  1678,  1179,  1671,  1671,   745,   783,  1675,  1671,
    1177,   383,     7,    26,    84,   144,   237,   322,   369,   450,
     629,   747,  1010,  1011,  1024,  1025,  1026,  1027,  1033,  1035,
    1036,  1037,  1568,     7,    12,    14,    17,    27,    28,    58,
      63,    64,    69,    77,    83,    84,    87,    96,   111,   125,
     129,   137,   138,   144,   152,   158,   169,   192,   233,   235,
     242,   262,   285,   321,   339,   343,   381,   387,   394,   403,
     435,   450,   451,   452,   482,   538,   539,   540,   541,   546,
     563,   566,   589,   602,   636,   639,   724,   725,   726,   747,
     748,  1026,  1075,  1078,  1080,  1081,  1133,  1205,  1206,  1208,
    1209,  1211,  1213,  1214,  1215,  1216,  1218,  1220,  1671,  1671,
     902,   532,  1797,  1798,  1181,  1477,   249,   828,   235,   263,
     400,  1148,  1282,  1283,  1311,  1373,  1374,  1671,   854,   582,
     176,   428,   828,  1253,    59,   176,   180,   194,   330,   428,
    1265,  1266,  1267,    57,   368,   368,   447,  1776,  1318,  1671,
    1671,  1671,   518,   193,  1671,   708,     7,  1004,  1671,  1678,
    1751,  1763,  1747,  1671,  1671,  1074,    11,   167,   200,   419,
     586,   889,  1790,  1798,  1804,  1806,  1807,  1814,   200,   889,
    1789,  1798,  1804,  1807,  1814,  1787,  1311,  1311,    13,   140,
    1371,  1422,  1371,  1371,  1371,   633,  1379,  1311,  1311,  1374,
    1374,  1311,  1311,   140,  1371,  1422,   824,   372,   824,   824,
    1311,  1311,  1311,  1311,  1657,   116,   117,   118,   119,   120,
     223,   224,   225,   226,   334,   336,   337,   338,   345,   426,
     489,   490,   631,   648,   649,  1417,  1418,  1311,  1373,   112,
     115,   575,   578,  1419,   140,  1367,  1311,  1311,  1311,  1311,
    1417,  1311,  1374,  1376,    10,   828,   829,   140,  1371,  1311,
    1311,   140,  1371,  1311,  1311,  1374,  1374,  1374,  1311,  1374,
    1315,  1311,  1311,  1311,  1311,  1311,  1311,   824,  1311,  1371,
    1371,  1311,  1311,   140,  1371,  1311,  1418,  1418,  1311,    46,
     268,   583,  1311,  1311,   824,  1658,  1659,  1671,  1371,  1371,
    1311,  1311,  1311,  1371,  1371,  1374,   824,   824,  1311,  1311,
    1311,  1311,  1311,   827,  1343,  1344,  1643,  1650,  1671,   824,
     824,   824,  1322,   140,  1371,  1311,  1301,   824,   828,   209,
     282,   497,  1703,   501,  1311,  1308,  1670,  1671,  1311,  1311,
    1311,   179,   371,   588,   604,  1318,    13,    20,  1313,  1321,
    1315,  1315,   823,  1784,  1322,  1315,  1315,  1315,  1315,   275,
     666,  1314,  1315,  1315,   245,  1315,   245,  1315,  1315,  1315,
    1315,  1315,    33,   249,   275,   441,  1675,  1322,  1666,  1666,
    1311,  1333,  1334,  1335,   817,  1671,  1671,   902,  1671,   377,
    1671,   902,  1675,   708,  1033,  1035,  1482,  1483,  1484,   902,
    1671,  1678,  1746,  1477,  1747,  1671,  1479,   614,   847,    35,
     158,   162,   202,   287,   382,   418,   442,   467,   511,   542,
    1588,  1592,  1593,  1719,    86,   827,   940,   941,   942,   943,
    1671,  1736,   562,  1671,  1766,  1678,  1675,   200,   419,   565,
    1737,  1746,  1740,    21,  1420,  1421,   186,   362,  1671,  1730,
    1671,  1833,  1489,   515,   500,   828,  1830,    50,   197,  1615,
      30,  1660,  1720,  1721,  1477,   827,   844,  1665,   287,   828,
     582,  1273,  1274,  1660,  1477,  1660,   125,  1599,  1671,   287,
    1601,   828,  1666,    56,    66,    76,    90,    91,    92,   106,
     333,   350,   488,   550,   567,   934,   936,  1738,   377,   197,
     377,   486,  1777,  1776,   197,  1292,  1293,  1458,    13,   364,
    1747,  1671,    71,  1132,  1311,  1678,   732,   571,  1668,   273,
     379,   642,   828,  1713,   828,  1711,   657,  1693,   827,   828,
    1671,   209,   282,   497,   652,   671,  1704,  1498,  1671,  1709,
    1698,  1498,  1699,  1700,  1701,  1706,    13,    35,   125,   377,
     483,   708,  1311,  1716,   542,   249,  1574,  1666,  1311,   817,
    1074,   902,   902,   902,  1660,   902,  1678,  1660,   287,   349,
     542,   290,   372,   593,  1447,  1448,  1643,  1671,  1576,  1671,
     902,  1576,  1678,  1569,   902,  1576,   252,   560,   181,   194,
    1521,   828,  1574,  1569,   194,   877,  1569,  1573,  1573,  1569,
    1576,  1576,   379,   642,    88,   828,  1237,   828,   877,   125,
    1311,  1502,  1503,  1504,  1501,  1429,  1431,  1671,    21,   828,
     378,  1824,   558,  1825,   645,   258,   470,  1823,  1671,  1311,
     277,   280,   429,  1044,  1045,  1678,   136,   156,   838,   824,
     728,    48,   785,   455,  1190,  1190,   786,   787,   789,  1675,
    1762,   653,   728,  1762,   636,  1762,   455,   727,  1748,   455,
    1748,  1748,   455,  1748,  1748,    65,   256,   364,   534,   552,
     643,  1743,  1744,  1678,  1761,   636,  1197,  1663,  1665,  1663,
    1663,  1231,   666,   667,   669,  1304,  1305,  1306,   571,  1667,
    1667,  1675,   828,   502,  1311,  1442,  1655,  1288,  1288,  1288,
    1445,   197,  1478,  1661,  1671,  1514,  1223,  1675,   827,    87,
     108,  1285,  1485,  1486,  1507,  1512,   432,  1069,  1070,  1073,
    1080,  1081,  1082,  1133,   903,  1671,  1671,   194,   368,   315,
       7,   903,   823,   110,  1021,  1498,  1499,  1499,  1021,  1499,
    1499,   582,  1499,   828,  1077,   158,    74,    89,   199,   400,
     518,  1090,  1092,  1148,  1222,  1499,    64,    89,   235,  1222,
     400,  1499,  1499,  1222,  1499,   400,   400,  1499,  1499,  1499,
    1499,   582,   136,  1499,   261,   400,   563,    64,    89,   193,
     400,   417,  1148,  1222,   261,  1499,   400,   400,   563,   136,
    1499,  1499,  1499,  1499,  1499,  1222,   400,    48,  1499,  1499,
     400,    21,    74,   160,   582,  1148,  1226,   400,   400,  1499,
     584,  1499,  1499,  1499,   139,   331,  1499,  1499,   400,  1499,
     618,   618,  1499,   400,  1388,  1389,  1388,  1499,  1499,  1078,
      71,  1126,   449,  1043,  1207,   828,   828,   500,   709,  1839,
    1184,   491,   627,  1798,   144,   608,  1262,   125,  1278,  1671,
    1277,  1660,   823,   823,  1283,   824,   828,   457,   458,   459,
     460,   461,   462,   463,   855,   856,   853,  1660,   609,  1266,
      57,   447,   171,   882,   377,     7,   716,   111,   377,  1074,
    1021,   613,  1005,     7,    19,  1752,  1753,  1754,  1755,  1756,
    1757,  1758,  1759,   125,   828,   885,   591,   591,   614,  1163,
    1164,  1660,   200,  1074,  1074,  1074,  1074,  1074,  1798,   828,
     824,  1371,   824,  1311,   824,   824,   824,  1311,   150,   633,
    1378,    21,    25,   824,   614,   824,   824,   824,   614,   828,
    1374,   824,   817,   824,   828,   828,   824,   824,   824,   197,
     828,   824,   828,  1374,   824,   828,   828,   828,   816,   828,
     824,   824,   823,  1657,  1671,  1371,   824,   824,   824,  1371,
     824,   828,   824,   824,   824,   824,   828,   824,   249,   824,
     828,   828,   824,   828,   828,   824,   824,   824,   828,   197,
     828,  1371,   824,   824,   828,   828,   828,   824,   197,  1311,
     197,  1311,   197,  1311,   197,   824,   828,   824,   824,   824,
     824,   828,    21,   824,   828,   824,   828,   824,   824,   689,
    1349,  1349,   824,   828,  1342,   824,  1342,   828,  1675,   824,
    1349,  1349,  1349,   828,  1371,   824,   824,   828,  1374,   829,
     829,   829,  1675,  1708,  1311,   833,   179,   371,   588,   604,
    1784,    19,  1311,   165,  1315,   823,  1311,  1311,  1315,   823,
    1784,  1322,  1315,  1309,   824,   828,   823,   829,   829,  1660,
    1482,  1479,  1077,  1012,  1013,  1014,  1033,   828,    52,   469,
    1224,   192,  1845,  1477,   827,   848,   849,   287,   287,   287,
     287,   287,   287,   828,  1477,  1594,   115,   575,   578,   827,
     935,   945,  1366,  1648,  1657,  1675,   828,   160,   377,   824,
     828,   582,   817,  1671,  1680,  1745,   636,  1741,  1671,   160,
     186,   201,   214,   266,   267,   294,   362,   416,  1731,  1732,
    1423,  1424,  1660,  1665,   209,   652,  1826,  1828,  1829,  1665,
    1280,  1281,  1660,   282,  1614,  1421,   828,  1675,    31,   582,
    1608,  1678,  1678,   828,   582,   176,   428,   612,  1255,  1256,
    1257,  1388,   829,   829,    19,    13,  1603,  1600,   828,   160,
     828,  1734,  1678,  1746,  1737,  1671,   145,   699,   719,   823,
     832,  1294,  1295,  1380,  1382,  1390,  1391,  1392,  1393,  1394,
    1395,  1396,  1660,  1784,  1423,  1292,   582,   582,   582,    35,
    1131,  1675,   582,  1498,  1190,  1190,   432,   453,   495,  1715,
    1712,  1710,  1747,  1675,  1679,   194,   829,   829,   829,   829,
     829,  1707,  1311,  1716,   828,  1705,  1665,   197,  1575,   824,
    1671,   376,   828,   614,  1576,   427,  1445,  1520,  1575,  1576,
      60,  1576,  1660,  1660,  1576,   513,  1242,   607,  1250,  1249,
     824,   828,   824,   828,  1784,  1642,   404,   194,   829,   824,
      73,   823,    73,   823,   401,  1047,   216,   263,   830,  1499,
     403,   732,  1668,  1668,  1748,  1748,   788,   788,  1753,  1756,
      13,   364,  1747,   403,   144,  1675,  1753,  1668,   103,  1668,
    1668,   571,   571,   571,    19,  1742,   319,   320,   324,   325,
    1198,  1199,     5,   403,   738,   739,  1194,  1195,  1196,  1478,
     668,  1305,  1126,  1128,  1457,   341,    22,   131,  1443,  1444,
     828,  1478,  1660,  1671,   197,   828,   829,  1513,  1295,  1675,
     122,   188,   219,   290,   372,   593,  1451,  1454,  1455,  1675,
     379,  1070,    84,    77,    93,   265,   342,   368,   430,   532,
     905,   907,    60,   477,   263,   597,  1023,   108,   221,   393,
     403,   410,   514,   611,   887,   888,  1665,  1009,  1010,   219,
     290,   372,   593,  1038,  1453,  1454,  1662,  1665,  1009,  1038,
    1038,  1671,  1665,  1846,  1011,  1499,  1171,  1671,  1148,  1149,
    1269,  1149,    64,   193,   417,   603,  1091,  1147,  1162,  1171,
    1671,   823,  1671,   125,  1219,  1671,  1671,  1671,  1671,  1671,
    1269,   122,   188,   290,   372,   593,  1452,  1452,  1671,   122,
     188,   219,   290,   372,   593,  1450,    13,  1212,  1416,  1671,
    1269,  1665,  1665,  1665,  1665,  1126,  1499,  1450,  1212,  1671,
    1671,   263,  1416,   263,  1671,  1671,  1675,  1671,  1212,  1499,
     186,   266,   368,  1084,  1452,   125,  1221,  1671,  1452,  1452,
    1671,  1269,  1438,  1439,  1658,   125,  1079,  1450,  1665,  1269,
    1671,  1671,  1660,  1269,  1269,    80,    82,   125,   148,   187,
     439,  1083,  1079,  1079,   125,  1450,  1671,  1450,  1212,   823,
     371,  1675,   823,  1846,  1846,  1499,  1499,   402,     7,   144,
    1075,  1215,  1216,  1209,  1213,  1216,   717,   718,  1022,  1499,
     706,  1843,   377,   897,  1201,   127,   248,  1660,   672,   672,
    1212,   417,  1412,  1413,  1414,  1671,   249,  1311,   160,   160,
     160,   160,   160,   160,   160,   828,   877,   232,   444,   445,
     731,   735,   737,   740,   749,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   792,   868,   869,   876,  1071,  1072,  1073,
    1660,  1023,   708,   641,  1660,  1453,   286,    77,   177,   184,
     363,  1006,  1007,  1008,  1024,  1025,  1027,  1028,  1031,  1032,
    1033,  1034,  1035,  1036,  1037,  1021,  1753,  1752,   790,  1760,
     653,  1751,  1767,  1499,    47,   216,   485,  1166,  1166,   377,
      21,   231,   275,   455,   823,  1039,  1040,  1041,  1042,  1043,
    1076,  1078,  1494,  1621,  1074,   902,   902,  1671,   902,   902,
     245,  1311,   824,  1348,  1349,  1348,  1348,  1348,   574,  1311,
    1311,   154,    35,    62,   112,   115,   123,   142,   189,   205,
     260,   279,   346,   347,   348,   353,   356,   408,   409,   434,
     508,   578,   606,   649,  1101,  1105,  1372,   282,   578,  1127,
    1127,  1372,   824,  1348,   824,   245,   245,  1311,  1311,  1311,
     387,  1369,  1311,  1311,  1311,  1311,  1311,  1315,   824,  1348,
     824,  1348,  1311,  1311,  1311,  1311,  1311,  1311,  1374,  1348,
    1348,   245,  1311,  1311,  1311,   824,  1348,  1311,  1311,  1311,
    1311,   197,  1311,   197,  1311,   197,  1311,  1311,  1348,  1348,
    1311,    35,    62,  1450,  1371,  1348,   823,  1350,  1351,  1352,
    1671,   231,   693,  1346,  1343,   824,  1346,   824,  1322,  1349,
     596,  1641,   824,  1348,  1311,   824,   829,  1313,   824,   828,
    1322,  1322,  1417,  1417,    19,  1311,   165,  1335,  1373,   817,
    1671,  1671,  1217,  1218,  1220,  1453,  1484,  1077,  1678,  1224,
    1675,   828,   877,  1593,  1589,  1675,   943,   946,   947,   942,
     373,   484,   944,  1737,  1671,  1746,   829,   829,   582,   654,
    1423,   823,  1445,  1388,  1707,   828,   828,  1282,  1283,   236,
     795,   802,  1617,   432,   642,  1722,  1721,  1311,  1665,   582,
    1274,  1660,  1257,   500,   619,   620,   823,  1490,  1491,  1493,
    1494,  1495,  1671,  1671,   800,   877,   936,   935,   210,   377,
     197,   231,  1480,  1745,   823,  1784,  1295,  1382,  1391,  1392,
    1393,  1394,   730,   828,   100,   238,   258,   271,   354,   476,
     548,  1383,  1384,  1385,  1388,  1421,   212,  1435,  1423,  1747,
    1747,  1747,   732,  1668,  1748,  1748,    78,   594,   432,  1451,
    1695,  1696,  1498,  1700,  1452,  1445,   163,   630,  1448,  1448,
    1746,   372,  1445,  1663,  1569,  1569,   523,   524,   525,   876,
    1251,   611,  1243,  1504,  1671,   828,   335,   156,   823,  1315,
     823,  1315,  1451,   554,  1048,   823,    12,  1046,  1450,  1667,
     403,   500,     7,  1762,    21,    48,   343,  1748,   403,  1748,
    1748,  1743,  1450,  1450,  1450,  1450,  1199,   285,   605,   174,
     464,   703,   704,   696,  1451,  1451,    77,   746,  1193,  1196,
    1127,    73,  1622,  1655,   614,  1421,   829,  1295,  1661,   817,
    1671,   500,  1499,  1499,  1665,   532,   532,   809,  1671,   532,
     532,   532,   491,  1671,   377,  1665,  1018,  1019,  1020,  1024,
    1033,  1035,  1665,  1665,  1665,  1665,  1450,  1665,  1665,   824,
     828,  1675,  1171,   401,   823,  1171,   823,   263,   263,  1149,
     366,  1093,  1094,  1095,  1162,   823,   614,   591,  1086,  1087,
    1088,  1090,  1671,    34,    35,    40,    42,    44,    45,    62,
     112,   115,   123,   159,   187,   189,   205,   206,   247,   260,
     279,   288,   289,   291,   327,   328,   329,   346,   347,   348,
     353,   356,   374,   375,   408,   409,   496,   500,   512,   572,
     575,   578,   579,   580,   581,   621,   622,   649,   808,  1096,
    1099,  1100,  1101,  1102,  1103,  1104,  1105,  1107,  1095,  1095,
     655,   656,  1165,   144,   500,  1212,  1671,  1265,   828,  1451,
     125,  1127,  1665,   563,  1671,  1224,   636,   563,  1665,  1096,
    1212,   828,  1443,  1212,   582,   582,  1416,  1212,  1594,  1415,
    1416,  1131,  1127,  1012,   372,  1840,  1841,  1499,   137,   152,
    1844,    81,   487,   450,  1202,  1430,   377,   377,   824,   824,
     828,  1278,   823,   857,   857,   823,   862,   862,   823,   865,
     865,   823,   860,   856,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   828,   877,  1073,   823,   438,   598,  1015,  1016,  1017,
    1024,  1029,  1030,  1031,  1032,  1033,  1035,  1453,  1675,   823,
     884,   212,  1499,  1499,  1499,  1499,  1077,  1012,    19,   784,
    1747,  1197,   611,   708,  1838,  1660,  1494,  1660,   275,  1086,
    1041,  1040,  1077,  1042,  1671,   890,   823,   472,  1815,     9,
      31,  1002,  1311,   824,  1348,  1311,   574,   823,  1116,  1117,
    1117,   823,  1111,   823,  1109,  1110,  1116,   413,  1106,  1108,
    1116,    62,   247,  1111,   247,  1117,   720,  1323,    21,   750,
     824,   824,   824,  1348,  1348,  1311,  1311,   824,   824,   828,
     824,    48,   494,  1368,   828,   828,   824,   828,   824,   249,
    1330,  1331,  1348,  1348,   824,   824,   824,   824,   828,   824,
     824,  1311,   824,   194,   824,   824,   828,  1348,   824,   828,
     828,   824,  1311,   824,  1311,   824,  1311,   824,   824,   824,
     823,  1138,  1138,   828,   824,  1351,  1353,  1354,   687,   687,
    1349,   828,  1345,  1346,  1349,  1346,   824,   743,  1326,  1348,
     824,  1671,  1374,   824,  1313,   824,   828,  1322,   824,  1220,
    1218,  1014,   849,   194,   636,  1590,   160,   828,  1745,   636,
    1769,   817,   817,  1671,  1746,   384,  1445,  1503,   500,  1490,
    1491,  1498,  1828,  1281,  1660,  1283,   231,  1284,  1667,   282,
    1678,  1509,  1510,  1658,   824,  1492,  1653,  1658,   823,  1496,
    1500,  1602,   160,   384,  1737,  1746,   604,   197,  1311,  1421,
     828,   824,   824,   824,   824,   824,  1380,  1381,  1382,  1390,
    1380,   258,   258,   390,  1387,   238,   271,   476,  1386,  1387,
    1390,  1380,  1380,  1421,  1430,    48,   217,  1425,  1435,  1190,
    1190,  1077,  1716,   877,  1423,  1576,   160,   160,   828,   160,
     403,  1244,  1450,  1050,  1671,   824,  1050,   824,    48,   823,
    1052,  1315,   160,   823,   228,   791,  1762,   219,  1665,  1669,
     732,  1668,  1762,   125,   245,   360,   103,   125,  1451,   245,
    1666,  1666,   153,   164,   385,   570,  1623,  1624,   278,  1625,
    1295,  1388,  1671,  1423,   829,  1513,  1509,  1079,  1665,   111,
     111,   127,   248,   368,   162,  1077,   888,   823,  1451,   400,
    1053,  1054,   823,  1311,  1171,   729,   823,   823,  1168,  1169,
    1170,  1671,  1166,  1166,   824,   828,  1096,  1116,  1116,  1117,
      23,    35,    49,   600,   625,  1116,  1126,  1134,  1135,  1136,
    1111,   823,  1136,    62,   621,  1102,  1136,  1136,    62,   622,
     622,   625,   823,  1117,  1111,  1111,  1136,  1116,  1117,  1117,
     440,  1089,  1141,    27,    71,    75,    77,   125,   366,   371,
     377,   417,   496,   546,   603,   705,   747,   748,  1092,  1095,
    1119,  1120,  1121,  1132,  1140,  1165,  1318,    35,  1116,  1137,
    1116,  1116,  1117,   823,  1110,  1118,  1109,   125,   125,  1165,
    1096,  1671,  1132,  1132,   565,     9,   186,  1225,  1439,  1671,
    1671,   246,  1255,   824,   824,   815,  1077,   372,   815,  1842,
    1845,   366,   415,    25,   168,   891,   582,   137,   152,   893,
    1799,  1416,  1416,  1413,   824,   858,   859,  1671,   824,   863,
     864,  1671,  1680,   824,   866,   867,  1663,  1664,   823,   824,
     861,   823,  1663,  1450,  1663,   371,   872,  1677,  1450,   377,
     741,   742,   796,   873,  1451,   282,   571,   742,   874,  1450,
    1450,  1663,  1665,  1450,  1450,  1649,  1663,  1663,  1452,  1663,
    1450,  1663,  1450,  1450,  1663,  1663,  1663,  1663,  1663,  1663,
    1663,  1450,   371,   875,  1663,  1663,  1663,  1450,  1451,   869,
    1169,  1499,  1499,  1077,   884,   383,  1169,   352,   713,   714,
     715,  1671,  1665,  1038,  1038,  1451,  1008,  1753,   228,  1754,
    1755,  1757,  1194,  1839,   823,  1660,   824,  1078,   472,   377,
    1808,   123,   247,   434,   549,  1085,   823,   130,   241,   608,
    1003,  1417,  1311,   122,   290,   372,   593,  1136,   372,   372,
     824,  1372,   245,  1652,  1417,  1417,  1311,  1370,  1655,  1642,
     824,  1311,  1311,  1374,    44,   354,   824,   636,  1332,  1311,
    1417,  1311,  1311,  1311,  1311,   824,   824,   824,  1451,   824,
     824,  1450,  1348,   824,   400,  1355,  1311,  1349,  1349,   197,
    1347,  1372,   125,   162,   371,  1401,  1403,  1404,  1405,   824,
    1374,  1591,   432,    56,    66,    76,    90,    91,    92,   106,
     333,   350,   471,   488,   550,   567,   948,   947,   582,   210,
     636,  1768,   824,  1509,    21,  1505,   377,  1506,   377,  1311,
    1827,  1284,   269,  1618,  1662,   828,  1498,  1493,  1494,   824,
     828,  1502,   828,   582,  1604,   935,   197,  1745,  1480,   611,
    1746,   828,  1430,  1380,   833,   258,  1387,  1387,   258,   258,
     377,   614,   377,   614,   192,   231,   613,  1407,  1408,  1409,
    1410,  1411,   101,   478,  1311,  1436,  1656,  1311,   697,  1432,
    1425,  1748,  1748,  1451,  1665,  1665,   876,  1665,   160,   126,
    1245,   824,   828,   824,  1045,  1053,   824,  1451,  1049,  1050,
      48,    21,  1753,   403,  1753,  1451,   125,   722,   125,  1451,
      48,    48,   153,    48,  1624,   536,   570,  1626,  1627,  1423,
    1423,  1423,   477,  1020,  1169,  1671,   824,   828,  1169,   824,
     823,  1169,  1311,   824,   828,   823,  1443,  1087,  1089,    35,
      23,   600,  1126,    35,  1136,  1127,  1172,  1642,  1136,   625,
    1172,  1136,   508,   606,   650,  1113,  1114,  1115,  1660,  1225,
    1131,   125,   148,   187,  1122,  1665,   115,   575,   578,   815,
     816,   823,  1124,  1125,  1644,  1645,  1646,  1647,   608,   125,
     125,   139,   331,  1123,   263,  1453,  1499,  1499,  1091,    71,
    1121,   203,  1097,   263,   371,   723,  1137,  1136,  1137,  1113,
     372,  1113,  1113,   823,  1645,  1225,  1660,  1671,   823,   372,
    1841,   372,   415,  1311,  1311,   377,   897,   902,   377,    77,
     898,    21,   614,   636,  1260,  1261,   824,   828,   824,   828,
     829,   824,   828,   859,   824,   828,   870,   871,  1450,   824,
    1038,  1038,  1017,   823,   824,  1663,  1663,  1663,  1663,   636,
    1193,  1843,  1169,   824,  1039,  1085,   487,   910,   911,   912,
    1671,   515,  1816,   377,   824,   824,   824,   824,   824,   824,
     828,  1323,  1666,   824,   824,   824,   828,  1348,   824,   828,
     824,   341,   265,   427,   824,   824,   824,   824,   824,   824,
    1139,   828,    48,   387,  1356,   186,   266,  1346,  1644,   824,
    1404,  1405,   377,   824,   175,   285,  1746,   384,   210,    21,
    1771,  1423,  1505,  1671,  1506,   147,   249,  1619,   372,  1510,
    1504,  1493,  1494,  1653,   824,  1500,  1453,  1746,   197,  1480,
    1641,   824,   258,   258,  1311,   823,  1311,   823,  1148,  1148,
    1408,   807,  1340,   823,   823,   638,   828,  1437,  1351,  1433,
    1434,   803,  1426,  1432,  1665,   160,   405,  1246,  1671,   216,
     263,   824,   824,  1665,  1669,   120,   120,  1642,  1642,    48,
    1642,    48,    48,  1627,  1440,  1440,   377,   824,   619,  1055,
    1054,   824,  1167,  1168,   824,   824,    77,   262,   747,   748,
    1158,  1159,  1160,  1161,  1164,  1165,  1170,   372,  1127,  1137,
     824,   828,   824,  1115,   823,  1142,  1649,  1649,  1311,  1124,
     620,  1846,  1846,  1131,    15,    21,  1311,  1210,  1211,  1053,
    1417,   510,   752,  1665,   143,  1203,  1494,  1800,   111,   372,
     804,   805,  1259,   859,   864,  1671,   867,   828,   823,   824,
     828,   636,  1152,  1153,  1154,  1161,   887,  1155,  1156,  1157,
    1161,   228,  1675,  1844,   824,   515,   891,   824,   828,  1099,
    1665,   239,   249,   392,   913,   914,   915,   916,  1660,   372,
     824,    21,  1655,  1311,   341,   173,   824,  1450,  1436,    48,
     429,   481,   681,  1357,  1363,  1349,   377,   162,   698,  1768,
     384,  1678,  1445,  1506,  1430,   263,   417,  1620,  1621,  1480,
    1746,    73,  1397,  1415,  1415,   194,  1406,  1406,   708,   806,
    1338,  1436,  1436,  1656,    21,   828,  1311,  1426,  1665,   160,
    1238,   823,  1046,   111,   464,  1836,  1837,  1642,  1642,  1642,
     276,  1449,  1449,   162,  1152,   249,   272,    77,   111,   235,
     321,   339,   363,   563,  1066,  1067,  1068,  1568,  1155,   824,
     828,  1158,  1443,  1665,  1499,  1499,  1499,  1160,   824,  1136,
    1642,  1136,  1143,  1671,   318,  1144,   824,   823,   824,   824,
     892,   899,   900,   636,  1801,  1666,   673,   608,   608,   859,
     859,   871,   397,  1217,  1154,   824,  1217,  1157,    48,  1158,
    1665,   896,   897,  1809,   912,  1132,   824,   828,  1671,   194,
     824,   112,   824,   824,  1442,    33,   103,   245,   696,  1358,
    1359,  1360,  1643,  1649,  1771,   636,  1770,   608,   263,   246,
    1480,   823,   824,   824,   824,   212,   258,   387,   823,   823,
     823,   824,   824,  1352,  1434,  1665,   877,  1315,   823,   136,
     368,   534,  1448,   823,  1057,  1059,   573,  1499,   136,   136,
    1499,  1499,  1499,  1499,   823,  1063,  1068,   158,  1141,  1168,
    1450,  1846,  1846,  1443,   824,   828,   198,   399,   509,   377,
    1145,  1311,   537,   894,    54,    68,   182,   230,   257,   270,
     380,   473,   901,   952,   954,   955,   956,   958,   959,   960,
     961,   962,   963,   965,   973,   974,   977,   988,   991,   993,
     994,  1662,  1673,  1684,  1685,  1686,  1689,    53,    64,   282,
     824,   828,  1662,  1453,  1217,   893,   472,  1817,   915,  1099,
     149,  1111,   245,   696,  1359,  1361,  1643,  1649,   483,  1311,
     691,   678,  1362,   691,   691,   653,  1509,   387,   565,   700,
    1398,  1399,  1671,  1421,    48,    48,  1412,  1414,   827,  1339,
    1643,  1649,   824,  1050,  1499,   534,   823,  1058,  1059,  1060,
     326,  1056,  1059,  1665,  1499,  1499,  1453,  1453,  1451,  1671,
     554,  1064,  1065,  1499,  1671,   130,   608,   824,  1311,   155,
     895,   975,   978,  1671,   197,   362,   966,   953,  1673,  1673,
    1671,   957,   840,   292,   454,   635,   997,    32,   995,   830,
      64,   384,    64,   859,   898,  1099,   904,  1132,   483,   824,
    1311,   680,    19,   680,   680,  1417,   103,   212,   368,   695,
      13,   125,   364,  1747,  1660,   702,   824,   828,   194,  1099,
     824,   824,  1675,   824,   553,  1051,   824,  1667,   824,   828,
     326,  1061,  1062,  1315,  1665,  1665,  1675,   824,   828,  1675,
      52,   368,   469,   500,  1146,  1146,   547,   628,  1098,  1311,
    1311,   633,   980,   984,   197,  1671,   968,   969,  1311,   918,
     951,   952,   954,   956,   958,   960,   961,   962,   963,   965,
     973,   988,   991,   993,   918,   998,   996,   989,   992,   384,
     384,   824,   143,  1132,   134,   905,   906,  1318,  1818,   191,
     412,  1802,  1803,  1417,  1361,   691,   483,   688,  1693,  1388,
    1641,  1399,   701,  1132,  1451,  1051,  1837,  1059,   824,   828,
    1066,  1065,     6,   125,   371,   377,   377,  1119,   976,   985,
     150,   984,   987,   246,   154,  1311,   154,   951,   826,   607,
    1311,   919,   997,   995,   899,  1810,   134,    21,   951,  1813,
    1675,  1805,   680,  1128,  1397,   171,  1400,  1062,   608,   130,
     633,   979,   981,  1311,   918,   154,   964,   230,   970,   292,
     826,  1000,   999,   124,   917,   920,   990,  1673,   990,   904,
     797,  1666,  1812,   951,    83,  1638,   702,  1146,  1146,   982,
     981,   987,   986,    54,   967,  1671,   574,  1311,   143,    95,
     172,   923,   949,  1671,   154,   951,   826,  1811,   160,   481,
    1628,  1641,  1311,   154,   574,   828,   918,  1001,   918,   215,
     828,  1099,    86,   105,   826,  1813,  1665,   228,  1622,  1401,
    1402,  1404,   983,    54,   918,  1671,   971,   154,   154,   194,
    1671,  1132,   194,   194,    48,  1625,  1403,  1405,   574,   150,
     151,   972,   454,   635,   921,   125,   950,   926,   927,  1450,
     922,  1642,   231,  1629,   377,   918,   918,   968,   520,   522,
     924,   925,   926,   929,  1318,  1671,  1311,  1285,   372,   823,
    1631,   828,   951,   196,   278,   481,  1630,   824,   827,  1632,
    1633,  1658,   500,  1634,   925,  1675,   824,   828,  1635,  1636,
    1658,   801,  1639,  1633,   828,  1498,   160,   331,  1640,  1636,
    1504,   372,   160,    12,  1637,  1038,   160,   794
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_int16 yyr1[] =
{
       0,   834,   835,   835,   835,   835,   835,   835,   836,   837,
     836,   836,   838,   838,   839,   839,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   840,   840,   840,   840,   840,   840,   840,   840,
     840,   840,   841,   842,   842,   843,   844,   844,   846,   845,
     847,   847,   848,   848,   849,   851,   850,   853,   852,   854,
     852,   855,   855,   856,   856,   856,   856,   856,   856,   856,
     857,   857,   858,   858,   859,   860,   860,   861,   861,   862,
     862,   863,   863,   864,   865,   865,   866,   866,   867,   868,
     868,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   869,   869,   869,   869,   869,
     869,   869,   869,   869,   869,   870,   870,   870,   871,   872,
     872,   873,   873,   873,   873,   874,   874,   874,   875,   875,
     876,   876,   876,   876,   877,   877,   878,   878,   878,   878,
     879,   880,   882,   881,   881,   881,   881,   881,   881,   881,
     883,   883,   884,   884,   884,   884,   884,   885,   885,   886,
     886,   886,   887,   887,   888,   888,   888,   888,   888,   888,
     888,   890,   889,   892,   891,   891,   893,   893,   893,   893,
     893,   894,   894,   895,   895,   896,   896,   897,   897,   898,
     898,   900,   899,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   902,   902,   903,   903,
     904,   904,   905,   905,   905,   905,   905,   905,   905,   905,
     905,   906,   906,   906,   907,   907,   908,   909,   909,   910,
     910,   911,   911,   912,   913,   913,   914,   914,   915,   916,
     916,   916,   916,   917,   917,   918,   918,   919,   919,   920,
     920,   921,   920,   922,   920,   923,   923,   924,   924,   925,
     926,   926,   927,   928,   928,   929,   929,   929,   929,   929,
     930,   931,   931,   932,   932,   933,   933,   934,   934,   935,
     935,   935,   936,   936,   936,   936,   936,   936,   936,   936,
     936,   936,   936,   936,   937,   938,   939,   939,   939,   940,
     940,   941,   941,   942,   943,   943,   944,   944,   945,   946,
     946,   947,   948,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   949,   949,   950,   950,   951,
     951,   951,   951,   951,   951,   951,   951,   951,   951,   951,
     951,   951,   953,   952,   955,   954,   957,   956,   959,   958,
     960,   961,   962,   964,   963,   965,   966,   966,   966,   967,
     967,   969,   970,   971,   968,   972,   972,   972,   973,   973,
     975,   976,   974,   978,   977,   979,   979,   980,   980,   982,
     983,   981,   985,   986,   984,   987,   987,   989,   988,   990,
     990,   992,   991,   994,   993,   996,   995,   997,   998,   999,
     997,  1000,  1001,   997,  1002,  1002,  1003,  1003,  1003,  1004,
    1004,  1005,  1005,  1006,  1006,  1007,  1007,  1008,  1008,  1008,
    1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1009,  1009,
    1010,  1010,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1012,
    1012,  1013,  1013,  1014,  1015,  1015,  1016,  1016,  1017,  1017,
    1017,  1017,  1017,  1017,  1017,  1018,  1018,  1019,  1019,  1020,
    1020,  1020,  1021,  1022,  1022,  1023,  1024,  1025,  1026,  1027,
    1028,  1029,  1030,  1031,  1032,  1033,  1034,  1035,  1035,  1036,
    1037,  1038,  1038,  1039,  1039,  1040,  1040,  1041,  1041,  1041,
    1042,  1042,  1043,  1044,  1044,  1044,  1044,  1044,  1044,  1045,
    1045,  1046,  1046,  1047,  1047,  1048,  1048,  1048,  1049,  1049,
    1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,  1054,  1055,
    1055,  1055,  1056,  1056,  1057,  1057,  1058,  1058,  1060,  1059,
    1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1066,
    1066,  1067,  1067,  1068,  1068,  1068,  1068,  1068,  1068,  1068,
    1068,  1069,  1069,  1070,  1070,  1071,  1071,  1072,  1072,  1073,
    1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,  1077,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,
    1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,  1078,
    1078,  1078,  1078,  1078,  1078,  1079,  1079,  1080,  1081,  1082,
    1083,  1083,  1083,  1083,  1083,  1083,  1084,  1084,  1084,  1085,
    1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1089,  1089,
    1090,  1090,  1090,  1090,  1090,  1090,  1091,  1092,  1092,  1093,
    1093,  1094,  1094,  1095,  1096,  1096,  1097,  1097,  1098,  1098,
    1098,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,
    1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,
    1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,
    1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1099,  1100,
    1100,  1100,  1100,  1100,  1100,  1100,  1100,  1101,  1101,  1102,
    1102,  1103,  1103,  1103,  1103,  1103,  1104,  1104,  1104,  1104,
    1104,  1105,  1105,  1106,  1106,  1107,  1107,  1107,  1107,  1108,
    1108,  1109,  1109,  1109,  1110,  1111,  1111,  1112,  1112,  1112,
    1113,  1113,  1114,  1114,  1115,  1115,  1115,  1116,  1116,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1120,  1120,  1121,
    1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
    1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,  1121,
    1122,  1122,  1122,  1123,  1123,  1123,  1124,  1125,  1125,  1126,
    1126,  1127,  1127,  1128,  1128,  1129,  1129,  1130,  1130,  1131,
    1131,  1132,  1132,  1133,  1133,  1134,  1134,  1134,  1135,  1135,
    1135,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1137,  1137,
    1139,  1138,  1140,  1140,  1141,  1142,  1142,  1143,  1143,  1144,
    1144,  1144,  1144,  1145,  1145,  1145,  1145,  1145,  1146,  1146,
    1146,  1146,  1146,  1147,  1147,  1148,  1148,  1149,  1149,  1150,
    1150,  1150,  1151,  1151,  1152,  1152,  1153,  1153,  1154,  1154,
    1155,  1155,  1156,  1156,  1157,  1158,  1158,  1159,  1159,  1160,
    1160,  1161,  1161,  1161,  1161,  1161,  1162,  1162,  1162,  1163,
    1163,  1164,  1164,  1165,  1165,  1166,  1166,  1166,  1167,  1167,
    1168,  1168,  1169,  1169,  1170,  1170,  1171,  1171,  1172,  1172,
    1173,  1173,  1175,  1174,  1177,  1176,  1179,  1178,  1181,  1180,
    1182,  1180,  1184,  1183,  1185,  1186,  1186,  1186,  1186,  1187,
    1188,  1189,  1189,  1189,  1189,  1189,  1189,  1189,  1189,  1189,
    1190,  1190,  1191,  1192,  1193,  1193,  1193,  1194,  1194,  1195,
    1195,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,  1196,
    1196,  1196,  1196,  1196,  1196,  1196,  1196,  1197,  1197,  1198,
    1198,  1199,  1199,  1199,  1199,  1200,  1201,  1201,  1201,  1201,
    1202,  1202,  1203,  1203,  1204,  1204,  1205,  1205,  1206,  1206,
    1207,  1207,  1208,  1208,  1208,  1208,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,  1209,
    1209,  1209,  1209,  1209,  1209,  1209,  1210,  1210,  1211,  1211,
    1212,  1212,  1213,  1213,  1213,  1213,  1213,  1214,  1214,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1216,  1216,  1216,  1217,
    1217,  1217,  1217,  1217,  1218,  1219,  1219,  1220,  1221,  1221,
    1222,  1222,  1223,  1223,  1224,  1224,  1224,  1225,  1225,  1225,
    1226,  1226,  1226,  1226,  1227,  1227,  1228,  1229,  1229,  1230,
    1230,  1231,  1231,  1231,  1232,  1233,  1234,  1235,  1237,  1238,
    1236,  1239,  1240,  1240,  1241,  1241,  1242,  1242,  1242,  1243,
    1243,  1244,  1244,  1245,  1245,  1246,  1246,  1247,  1247,  1248,
    1248,  1249,  1249,  1250,  1250,  1251,  1251,  1251,  1251,  1251,
    1252,  1253,  1253,  1253,  1254,  1255,  1255,  1256,  1256,  1257,
    1257,  1257,  1258,  1259,  1259,  1259,  1260,  1260,  1261,  1261,
    1262,  1262,  1262,  1263,  1264,  1265,  1265,  1266,  1266,  1267,
    1267,  1267,  1267,  1267,  1267,  1268,  1269,  1269,  1269,  1271,
    1270,  1270,  1272,  1272,  1273,  1273,  1274,  1275,  1275,  1276,
    1276,  1277,  1278,  1278,  1279,  1279,  1280,  1280,  1281,  1282,
    1283,  1283,  1284,  1284,  1285,  1285,  1285,  1286,  1286,  1286,
    1286,  1287,  1287,  1288,  1288,  1288,  1288,  1288,  1289,  1289,
    1290,  1290,  1290,  1291,  1291,  1292,  1292,  1293,  1294,  1294,
    1295,  1295,  1296,  1297,  1298,  1298,  1299,  1299,  1300,  1300,
    1301,  1301,  1302,  1302,  1302,  1303,  1303,  1304,  1305,  1305,
    1306,  1306,  1307,  1307,  1307,  1308,  1308,  1309,  1309,  1309,
    1309,  1309,  1310,  1310,  1311,  1311,  1311,  1311,  1311,  1311,
    1311,  1311,  1311,  1311,  1311,  1312,  1312,  1312,  1312,  1312,
    1313,  1313,  1313,  1313,  1313,  1313,  1313,  1313,  1313,  1313,
    1313,  1313,  1313,  1313,  1313,  1313,  1313,  1314,  1314,  1315,
    1315,  1315,  1315,  1315,  1315,  1315,  1315,  1315,  1315,  1315,
    1315,  1315,  1315,  1315,  1316,  1316,  1317,  1317,  1318,  1318,
    1319,  1319,  1320,  1320,  1320,  1320,  1320,  1320,  1320,  1321,
    1321,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1323,  1323,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1325,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,
    1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,  1325,
    1325,  1326,  1326,  1327,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,  1327,
    1327,  1327,  1327,  1327,  1327,  1327,  1328,  1328,  1328,  1328,
    1328,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,  1332,
    1332,  1333,  1333,  1334,  1334,  1335,  1336,  1336,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,  1337,
    1337,  1338,  1338,  1339,  1339,  1339,  1340,  1340,  1341,  1341,
    1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1341,  1342,
    1342,  1343,  1343,  1344,  1344,  1344,  1345,  1345,  1346,  1346,
    1346,  1347,  1347,  1347,  1348,  1348,  1349,  1350,  1350,  1351,
    1352,  1353,  1354,  1354,  1355,  1355,  1356,  1356,  1357,  1357,
    1358,  1358,  1359,  1359,  1359,  1359,  1359,  1360,  1361,  1361,
    1361,  1361,  1361,  1362,  1362,  1362,  1362,  1362,  1363,  1363,
    1363,  1364,  1365,  1366,  1366,  1367,  1367,  1368,  1368,  1369,
    1369,  1370,  1370,  1371,  1372,  1372,  1372,  1372,  1372,  1372,
    1372,  1372,  1372,  1372,  1372,  1372,  1372,  1372,  1372,  1372,
    1372,  1372,  1372,  1372,  1372,  1372,  1373,  1373,  1374,  1374,
    1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,  1379,
    1380,  1380,  1380,  1381,  1381,  1382,  1382,  1382,  1382,  1382,
    1382,  1383,  1383,  1383,  1384,  1384,  1384,  1384,  1385,  1385,
    1386,  1386,  1387,  1387,  1388,  1388,  1389,  1390,  1390,  1390,
    1390,  1390,  1390,  1391,  1391,  1392,  1392,  1393,  1394,  1394,
    1395,  1395,  1396,  1397,  1398,  1398,  1399,  1399,  1399,  1400,
    1400,  1401,  1401,  1401,  1401,  1402,  1402,  1403,  1404,  1405,
    1405,  1405,  1406,  1406,  1406,  1406,  1407,  1407,  1408,  1408,
    1409,  1409,  1410,  1410,  1411,  1412,  1412,  1413,  1413,  1414,
    1414,  1415,  1416,  1416,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1418,  1418,  1418,  1418,
    1418,  1418,  1418,  1418,  1418,  1419,  1419,  1419,  1419,  1420,
    1420,  1421,  1421,  1422,  1422,  1423,  1423,  1424,  1425,  1425,
    1426,  1426,  1427,  1427,  1428,  1428,  1429,  1430,  1430,  1431,
    1431,  1432,  1432,  1433,  1433,  1434,  1435,  1435,  1435,  1435,
    1436,  1436,  1437,  1437,  1438,  1438,  1439,  1440,  1440,  1441,
    1442,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1446,  1447,
    1447,  1447,  1448,  1448,  1448,  1448,  1448,  1449,  1449,  1450,
    1450,  1450,  1450,  1450,  1450,  1451,  1451,  1451,  1451,  1451,
    1452,  1452,  1452,  1452,  1452,  1453,  1453,  1453,  1453,  1453,
    1454,  1455,  1455,  1456,  1456,  1457,  1457,  1458,  1459,  1459,
    1459,  1460,  1461,  1462,  1463,  1464,  1464,  1465,  1466,  1467,
    1468,  1469,  1470,  1471,  1472,  1473,  1474,  1475,  1476,  1477,
    1477,  1478,  1478,  1479,  1479,  1480,  1480,  1481,  1481,  1482,
    1482,  1483,  1483,  1484,  1484,  1485,  1485,  1485,  1486,  1486,
    1486,  1487,  1487,  1487,  1487,  1488,  1488,  1489,  1489,  1490,
    1490,  1490,  1491,  1491,  1491,  1492,  1492,  1493,  1494,  1494,
    1495,  1495,  1496,  1496,  1497,  1497,  1498,  1498,  1499,  1499,
    1500,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,  1505,
    1506,  1506,  1507,  1508,  1508,  1509,  1509,  1510,  1511,  1511,
    1512,  1512,  1512,  1513,  1513,  1514,  1514,  1515,  1515,  1515,
    1516,  1517,  1517,  1518,  1518,  1519,  1519,  1520,  1520,  1520,
    1520,  1520,  1520,  1520,  1520,  1520,  1521,  1521,  1522,  1523,
    1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
    1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1551,  1551,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1565,  1566,  1567,  1567,  1568,  1568,  1569,
    1569,  1570,  1570,  1571,  1571,  1572,  1572,  1572,  1572,  1573,
    1573,  1574,  1574,  1575,  1575,  1576,  1576,  1576,  1577,  1578,
    1579,  1579,  1579,  1579,  1579,  1579,  1580,  1580,  1581,  1581,
    1582,  1582,  1583,  1583,  1584,  1584,  1585,  1585,  1585,  1587,
    1586,  1589,  1588,  1588,  1590,  1590,  1591,  1590,  1592,  1592,
    1593,  1593,  1593,  1593,  1593,  1593,  1593,  1593,  1593,  1593,
    1593,  1594,  1594,  1596,  1595,  1595,  1597,  1597,  1598,  1598,
    1599,  1599,  1599,  1601,  1600,  1602,  1600,  1603,  1603,  1604,
    1604,  1606,  1605,  1607,  1608,  1608,  1609,  1610,  1610,  1610,
    1611,  1612,  1613,  1613,  1614,  1614,  1615,  1615,  1616,  1616,
    1616,  1617,  1617,  1617,  1618,  1618,  1619,  1619,  1620,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1624,  1624,
    1625,  1625,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1631,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1637,  1637,  1638,  1638,  1639,  1639,
    1640,  1640,  1641,  1641,  1641,  1641,  1642,  1642,  1642,  1643,
    1644,  1644,  1644,  1645,  1645,  1646,  1647,  1647,  1647,  1647,
    1647,  1647,  1647,  1647,  1647,  1648,  1648,  1649,  1649,  1649,
    1650,  1650,  1650,  1651,  1651,  1651,  1652,  1652,  1653,  1654,
    1654,  1655,  1656,  1657,  1657,  1658,  1658,  1659,  1659,  1660,
    1660,  1661,  1661,  1662,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1669,  1670,  1671,  1671,  1672,  1672,  1673,  1673,
    1674,  1674,  1675,  1675,  1675,  1676,  1676,  1676,  1677,  1677,
    1678,  1678,  1679,  1679,  1680,  1681,  1681,  1681,  1681,  1681,
    1682,  1682,  1682,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1684,  1684,
    1684,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,  1685,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,
    1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1686,  1687,
    1687,  1687,  1688,  1688,  1688,  1688,  1689,  1689,  1689,  1689,
    1689,  1690,  1691,  1691,  1691,  1691,  1691,  1691,  1691,  1692,
    1692,  1692,  1692,  1692,  1692,  1692,  1693,  1693,  1694,  1694,
    1695,  1695,  1696,  1697,  1697,  1698,  1698,  1699,  1699,  1700,
    1700,  1701,  1701,  1701,  1701,  1701,  1702,  1702,  1702,  1702,
    1703,  1703,  1703,  1703,  1704,  1704,  1704,  1704,  1704,  1704,
    1705,  1706,  1706,  1706,  1706,  1706,  1706,  1706,  1707,  1707,
    1707,  1708,  1708,  1709,  1709,  1710,  1711,  1711,  1712,  1713,
    1713,  1714,  1714,  1715,  1715,  1715,  1715,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1718,  1717,  1717,  1719,  1719,  1720,
    1720,  1721,  1722,  1722,  1722,  1724,  1723,  1723,  1725,  1726,
    1727,  1728,  1728,  1728,  1728,  1728,  1728,  1728,  1728,  1729,
    1729,  1729,  1729,  1729,  1730,  1730,  1731,  1731,  1731,  1731,
    1732,  1732,  1732,  1732,  1732,  1733,  1733,  1734,  1733,  1733,
    1733,  1735,  1735,  1736,  1735,  1735,  1737,  1737,  1737,  1737,
    1738,  1738,  1739,  1739,  1740,  1740,  1740,  1740,  1740,  1740,
    1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,
    1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,
    1740,  1740,  1740,  1740,  1740,  1740,  1740,  1740,  1741,  1741,
    1742,  1742,  1743,  1743,  1744,  1744,  1744,  1745,  1745,  1745,
    1745,  1745,  1746,  1746,  1747,  1747,  1748,  1748,  1749,  1749,
    1750,  1750,  1750,  1751,  1751,  1751,  1752,  1752,  1752,  1753,
    1753,  1753,  1753,  1753,  1753,  1754,  1755,  1756,  1757,  1758,
    1759,  1760,  1760,  1760,  1761,  1761,  1761,  1761,  1761,  1761,
    1761,  1761,  1761,  1761,  1761,  1761,  1761,  1761,  1761,  1761,
    1762,  1763,  1763,  1764,  1764,  1765,  1765,  1766,  1766,  1767,
    1767,  1767,  1767,  1767,  1768,  1768,  1769,  1769,  1770,  1770,
    1770,  1770,  1770,  1771,  1771,  1773,  1772,  1774,  1774,  1775,
    1775,  1775,  1776,  1776,  1776,  1777,  1777,  1778,  1779,  1779,
    1780,  1781,  1782,  1782,  1782,  1783,  1784,  1785,  1786,  1786,
    1786,  1786,  1786,  1786,  1786,  1786,  1787,  1788,  1788,  1788,
    1789,  1789,  1789,  1789,  1789,  1790,  1790,  1790,  1790,  1790,
    1790,  1791,  1791,  1792,  1793,  1794,  1794,  1794,  1795,  1796,
    1796,  1796,  1797,  1797,  1797,  1799,  1798,  1800,  1801,  1801,
    1801,  1801,  1802,  1802,  1803,  1803,  1805,  1804,  1806,  1806,
    1808,  1809,  1810,  1811,  1807,  1812,  1812,  1813,  1813,  1815,
    1816,  1817,  1818,  1814,  1819,  1819,  1819,  1819,  1819,  1819,
    1820,  1820,  1821,  1821,  1821,  1822,  1822,  1823,  1823,  1823,
    1824,  1824,  1825,  1825,  1825,  1826,  1826,  1826,  1827,  1827,
    1828,  1829,  1829,  1830,  1830,  1831,  1831,  1832,  1832,  1833,
    1833,  1834,  1835,  1835,  1836,  1836,  1837,  1837,  1837,  1838,
    1838,  1839,  1839,  1840,  1840,  1841,  1841,  1842,  1842,  1843,
    1843,  1844,  1844,  1844,  1845,  1845,  1846
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     7,     0,
       6,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     3,     1,     3,     1,     2,     3,     5,     7,     2,
       3,     1,     3,     3,     2,     3,     1,     3,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     5,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     1,     0,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     0,     3,     9,     6,     7,     9,
       4,    10,     0,     6,     2,     9,     7,     6,     7,    11,
       8,     7,     0,     3,     3,     6,     3,     0,     3,    12,
      11,    11,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     0,    12,     0,     6,     2,     0,     1,     3,     3,
       1,     0,     2,     0,     2,     0,     1,     3,     4,     0,
       2,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     2,     2,     3,     3,
       1,     1,     1,     2,     3,     3,     3,     0,     3,     0,
       1,     3,     1,     3,     0,     1,     3,     1,     4,     0,
       1,     1,     1,     0,     3,     2,     3,     0,     3,     5,
       5,     0,     7,     0,     6,     1,     1,     1,     3,     1,
       1,     1,     3,     0,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     4,     0,     1,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     0,     8,     1,     1,     1,     1,     1,     0,
       2,     0,     4,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     1,     3,     1,
       1,     1,     2,     1,     1,     2,     3,     1,     3,     3,
       3,     3,     3,     3,     3,     4,     3,     1,     1,     3,
       3,     1,     1,     2,     1,     2,     1,     0,     2,     1,
       2,     1,     6,     6,     5,     4,     5,     4,     5,     0,
       1,     0,     3,     0,     2,     0,     8,     9,     0,     1,
       1,     3,     0,     2,     0,     3,     1,     3,     5,     0,
       4,     3,     1,     1,     1,     3,     1,     3,     0,     4,
       1,     3,     1,     1,     0,     3,     1,     3,     3,     0,
       1,     2,     1,     3,     4,     3,     3,     3,     4,     4,
       3,     1,     2,     1,     4,     0,     1,     1,     2,     1,
       1,     1,     0,     3,     1,     2,     1,     3,     0,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       5,     1,     1,     3,     4,     4,     3,     2,     2,     3,
       3,     2,     3,     3,     1,     1,     1,     4,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     3,     0,     1,
       6,     7,     7,     7,     8,     3,     4,     0,     2,     0,
       1,     0,     1,     2,     2,     9,     0,     2,     0,     1,
       1,     3,     3,     3,     1,     2,     1,     1,     3,     2,
       3,     2,     2,     1,     3,     3,     2,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     2,     4,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     1,     3,
       4,     4,     0,     5,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     7,     6,     6,     6,     4,     7,
       7,     6,     5,     5,     5,     5,     5,     5,     3,     3,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     2,     2,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     4,     0,     0,
      11,     3,     0,     1,     1,     3,     3,     2,     2,     0,
       3,     0,     3,     0,     3,     0,     3,     0,     1,     1,
       3,     1,     1,     0,     2,     1,     3,     3,     3,     1,
       4,     0,     1,     1,     5,     0,     1,     1,     2,     1,
       1,     1,     5,     0,     2,     2,     0,     3,     2,     3,
       0,     5,     4,     2,     4,     0,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     4,     0,     1,     1,     0,
       4,     3,     3,     5,     1,     3,     3,     5,     7,     1,
       3,     2,     1,     1,     8,     5,     1,     3,     3,     4,
       0,     4,     0,     2,     1,     2,     1,     3,     2,     3,
       3,     3,     4,     1,     1,     4,     4,     4,     3,     3,
       1,     1,     1,    10,     9,     0,     1,     2,     1,     1,
       1,     3,     2,     2,     0,     1,     2,     1,     1,     1,
       2,     1,     3,     4,     4,     1,     1,     2,     0,     1,
       2,     1,     3,     1,     1,     1,     2,     0,     2,     2,
       1,     1,     0,     2,     3,     3,     3,     2,     3,     4,
       3,     4,     3,     4,     1,     3,     4,     3,     4,     1,
       3,     4,     5,     7,     6,     8,     6,     5,     6,     4,
       3,     5,     4,     6,     3,     4,     1,     1,     0,     3,
       3,     3,     3,     3,     3,     5,     5,     3,     3,     3,
       3,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     3,     2,     2,     2,     2,     1,     3,
       5,     6,     2,     4,     7,     2,     7,     9,    12,     5,
       6,     6,     4,     4,     5,     3,     3,     0,     1,     4,
       6,     2,     4,     4,     4,    10,     6,     8,     8,     6,
       4,     4,     6,     4,     4,     4,     6,     4,     7,     7,
       7,     6,     6,     6,     6,     3,     4,     6,     8,     2,
       2,     8,     8,     6,     6,     4,     6,     1,     6,     6,
       8,     8,     6,     8,     6,     2,     8,     8,     2,     2,
       2,     0,     2,     4,     4,     4,     4,     3,     8,     6,
       8,     4,     6,     4,     6,     8,     4,     3,     6,     4,
       6,     4,     7,     7,    10,     1,     4,     4,     4,     4,
       4,     6,     4,     4,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     2,     1,     1,     5,     6,
       5,     5,     5,     7,     5,     6,     5,     6,     5,     6,
       5,     6,     5,     6,     5,     5,     5,     5,     5,     6,
       8,     1,     1,     1,     2,     1,     0,     5,     4,     4,
       4,     4,     4,     5,     7,     7,     6,     6,     9,     0,
       3,     1,     1,     1,     1,     2,     0,     2,     0,     2,
       2,     0,     2,     2,     0,     1,     2,     1,     1,     1,
       3,     4,     0,     1,     0,     3,     0,     3,     0,     3,
       1,     1,     2,     2,     2,     4,     2,     4,     1,     2,
       2,     2,     4,     0,     3,     2,     2,     3,     1,     1,
       1,     4,     4,     2,     4,     0,     1,     0,     2,     0,
       3,     3,     1,     2,     2,     3,     2,     1,     2,     1,
       2,     1,     1,     2,     2,     2,     1,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     4,     1,     1,     5,     7,     5,     7,     3,
       3,     3,     4,     4,     1,     2,     2,     1,     3,     3,
       0,     1,     0,     1,     0,     1,     4,     1,     1,     1,
       1,     1,     1,     3,     5,     3,     3,     5,     3,     3,
       3,     4,     8,     4,     1,     3,     3,     7,     4,     0,
       1,     0,     1,     1,     2,     1,     2,     3,     3,     1,
       1,     2,     0,     2,     3,     3,     1,     1,     6,     6,
       1,     2,     0,     1,     1,     0,     1,     1,     1,     1,
       3,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     2,     0,     1,     0,     1,     2,     0,     2,
       0,     2,     2,     3,     3,     1,     4,     0,     3,     1,
       3,     0,     2,     1,     3,     3,     0,     4,     6,     6,
       3,     1,     0,     1,     3,     1,     2,     0,     1,     3,
       3,     1,     0,     1,     1,     1,     0,     1,     2,     1,
       3,     3,     1,     1,     1,     1,     1,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     2,     1,     2,     5,     2,
       1,     2,     6,     6,     4,     6,     4,     5,     4,     4,
       5,     4,     4,     4,     5,     5,     4,     6,     4,     1,
       3,     1,     3,     0,     2,     0,     3,     0,     1,     0,
       1,     1,     3,     1,     1,     9,    10,     8,     6,     7,
       6,     0,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     4,     1,     3,     4,     3,     1,     2,     1,     2,
       1,     1,     3,     1,     3,     1,     1,     1,     0,     1,
       3,     4,     0,     1,     3,     1,     1,     1,     0,     3,
       0,     5,    10,     0,     1,     3,     1,     3,     0,     1,
      10,     7,     8,     0,     2,     0,     2,     1,     1,     1,
       3,     0,     1,     0,     1,     1,     3,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     0,     3,     3,     5,
       5,     4,     5,     5,     2,     4,     4,     4,     7,     3,
       2,     6,     7,     7,     3,     6,     6,     3,     3,     2,
       5,     4,     3,     4,     3,     3,     2,     2,     4,     6,
       5,     4,     4,     4,     4,     4,     4,     4,     4,     4,
       4,     4,     4,     4,     3,     1,     1,     0,     1,     0,
       2,     0,     1,     0,     1,     0,     1,     1,     2,     1,
       1,     0,     2,     0,     2,     0,     2,     1,     3,     3,
       2,     2,     2,     2,     2,     3,     1,     1,     0,     3,
       2,     2,     0,     3,     0,     3,     0,     1,     1,     0,
       4,     0,     4,     1,     0,     3,     0,     3,     3,     1,
       2,     2,     2,     2,     2,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     3,     3,     3,     1,     0,     2,
       1,     3,     3,     0,     4,     0,     6,     0,     1,     0,
       2,     0,     3,     3,     2,     2,     3,     0,     1,     1,
       2,    25,     1,     1,     0,     1,     0,     1,     0,     1,
       1,     1,     1,     1,     0,     2,     0,     4,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     0,     3,     0,     3,     0,     3,
       0,     3,     1,     1,     2,     2,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     2,     0,     1,     1,     3,
       5,     2,     1,     1,     1,     1,     1,     3,     5,     1,
       3,     2,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     5,     5,     7,     7,     3,
       3,     3,     6,     6,     6,     4,     0,     2,     4,     6,
       1,     3,     1,     2,     2,     0,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     2,     1,     3,
       3,     1,     3,     2,     2,     1,     0,     2,     3,     0,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     4,     1,     1,     1,
       3,     3,     1,     1,     2,     0,     3,     2,     1,     1,
       3,     4,     2,     6,     5,     9,     3,     3,     2,     4,
       3,     6,     7,    10,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     6,     9,     0,    11,    10,
       8,     5,     9,     0,    11,     7,     0,     1,     1,     1,
       0,     1,     1,     3,     2,     3,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     2,     2,     0,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     3,     1,     3,     1,     3,     0,     3,     0,     3,
       3,     2,     7,     3,     3,     2,     0,     2,     4,     1,
       1,     1,     1,     1,     1,     3,     4,     3,     5,     5,
       6,     3,     3,     3,     5,     5,     3,     3,     5,     2,
       3,     3,     3,     2,     4,     7,     4,     7,     3,     5,
       2,     1,     3,     1,     3,     0,     3,     1,     3,     0,
       2,     2,     2,     2,     0,     3,     0,     3,     0,     3,
       4,     3,     3,     0,     3,     0,     3,     0,     1,     0,
       3,     2,     0,     1,     2,     0,     1,     4,     4,     5,
       2,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     2,     1,     2,     3,
       3,     3,     0,     3,     3,     0,     7,     2,     0,     3,
       4,     4,     1,     1,     0,     2,     0,    13,     8,     7,
       0,     0,     0,     0,    15,     1,     1,     2,     1,     0,
       0,     0,     0,    12,     4,     4,     3,     4,     3,     3,
       0,     2,     1,     3,     5,     1,     1,     0,     1,     1,
       0,     2,     0,     1,     3,     0,     1,     1,     1,     1,
       4,     1,     3,     0,     2,     5,     4,     3,     3,     1,
       3,     4,     6,    10,     1,     5,     0,     2,     3,     1,
       1,     0,     3,     1,     3,     1,     3,     1,     2,     0,
       3,     0,     1,     1,     0,     1,     1
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = MY_SQL_PARSER_EMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == MY_SQL_PARSER_EMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use MY_SQL_PARSER_error or MY_SQL_PARSER_UNDEF. */
#define YYERRCODE MY_SQL_PARSER_UNDEF

/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if MY_SQL_PARSER_DEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

# ifndef YY_LOCATION_PRINT
#  if defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static int
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  int res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#   define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

#  else
#   define YY_LOCATION_PRINT(File, Loc) ((void) 0)
#  endif
# endif /* !defined YY_LOCATION_PRINT */


# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (yylocationp);
  YY_USE (YYTHD);
  YY_USE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yykind < YYNTOKENS)
    YYPRINT (yyo, yytoknum[yykind], *yyvaluep);
# endif
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  YY_LOCATION_PRINT (yyo, *yylocationp);
  YYFPRINTF (yyo, ": ");
  yy_symbol_value_print (yyo, yykind, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp,
                 int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)],
                       &(yylsp[(yyi + 1) - (yynrhs)]), YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !MY_SQL_PARSER_DEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !MY_SQL_PARSER_DEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YY_USE (yyvaluep);
  YY_USE (yylocationp);
  YY_USE (YYTHD);
  YY_USE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined MY_SQL_PARSER_LTYPE_IS_TRIVIAL && MY_SQL_PARSER_LTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

    /* The location stack: array, bottom, top.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls = yylsa;
    YYLTYPE *yylsp = yyls;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[3];



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = MY_SQL_PARSER_EMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    goto yyexhaustedlab;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yyls1, yysize * YYSIZEOF (*yylsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
        yyls = yyls1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == MY_SQL_PARSER_EMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= MY_SQL_PARSER_EOF)
    {
      yychar = MY_SQL_PARSER_EOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == MY_SQL_PARSER_error)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = MY_SQL_PARSER_UNDEF;
      yytoken = YYSYMBOL_YYerror;
      yyerror_range[1] = yylloc;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;

  /* Discard the shifted token.  */
  yychar = MY_SQL_PARSER_EMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location. */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  yyerror_range[1] = yyloc;
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 3: /* start_entry: GRAMMAR_SELECTOR_EXPR bit_expr END_OF_INPUT  */
#line 2308 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 26030 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 4: /* start_entry: GRAMMAR_SELECTOR_PART partition_clause END_OF_INPUT  */
#line 2313 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 26044 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 5: /* start_entry: GRAMMAR_SELECTOR_GCOL IDENT_sys '(' expr ')' END_OF_INPUT  */
#line 2323 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == nullptr)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 26066 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 6: /* start_entry: GRAMMAR_SELECTOR_CTE table_subquery END_OF_INPUT  */
#line 2341 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 26074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 7: /* start_entry: GRAMMAR_SELECTOR_DERIVED_EXPR expr END_OF_INPUT  */
#line 2345 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
         {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 26083 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 8: /* sql_statement: END_OF_INPUT  */
#line 2353 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= nullptr;
          }
#line 26099 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 9: /* $@1: %empty  */
#line 2365 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= nullptr;
            }
          }
#line 26126 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 11: /* sql_statement: simple_statement_or_begin END_OF_INPUT  */
#line 2390 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= nullptr;
          }
#line 26135 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 14: /* simple_statement_or_begin: simple_statement  */
#line 2402 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { *parse_tree= (yyvsp[0].top_level_node); }
#line 26141 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 16: /* simple_statement: alter_database_stmt  */
#line 2408 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26147 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 17: /* simple_statement: alter_event_stmt  */
#line 2409 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 18: /* simple_statement: alter_function_stmt  */
#line 2410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26159 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 20: /* simple_statement: alter_logfile_stmt  */
#line 2412 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26165 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 21: /* simple_statement: alter_procedure_stmt  */
#line 2413 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26171 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 23: /* simple_statement: alter_server_stmt  */
#line 2415 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26177 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 24: /* simple_statement: alter_tablespace_stmt  */
#line 2416 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26183 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 25: /* simple_statement: alter_undo_tablespace_stmt  */
#line 2417 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26189 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 27: /* simple_statement: alter_user_stmt  */
#line 2419 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26195 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 28: /* simple_statement: alter_view_stmt  */
#line 2420 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26201 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 30: /* simple_statement: binlog_base64_event  */
#line 2422 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26207 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 32: /* simple_statement: change_replication_stmt  */
#line 2424 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26213 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 34: /* simple_statement: checksum  */
#line 2426 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 35: /* simple_statement: clone_stmt  */
#line 2427 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26225 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 36: /* simple_statement: commit  */
#line 2428 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26231 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 37: /* simple_statement: create  */
#line 2429 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26237 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 43: /* simple_statement: deallocate  */
#line 2435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26243 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 47: /* simple_statement: drop_database_stmt  */
#line 2439 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26249 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 48: /* simple_statement: drop_event_stmt  */
#line 2440 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26255 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 49: /* simple_statement: drop_function_stmt  */
#line 2441 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26261 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 51: /* simple_statement: drop_logfile_stmt  */
#line 2443 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26267 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 52: /* simple_statement: drop_procedure_stmt  */
#line 2444 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26273 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 55: /* simple_statement: drop_server_stmt  */
#line 2447 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26279 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 57: /* simple_statement: drop_tablespace_stmt  */
#line 2449 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26285 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 58: /* simple_statement: drop_undo_tablespace_stmt  */
#line 2450 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26291 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 59: /* simple_statement: drop_table_stmt  */
#line 2451 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26297 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 60: /* simple_statement: drop_trigger_stmt  */
#line 2452 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26303 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 61: /* simple_statement: drop_user_stmt  */
#line 2453 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26309 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 62: /* simple_statement: drop_view_stmt  */
#line 2454 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26315 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 63: /* simple_statement: execute  */
#line 2455 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26321 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 65: /* simple_statement: flush  */
#line 2457 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26327 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 66: /* simple_statement: get_diagnostics  */
#line 2458 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26333 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 67: /* simple_statement: group_replication  */
#line 2459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26339 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 68: /* simple_statement: grant  */
#line 2460 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26345 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 70: /* simple_statement: help  */
#line 2462 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26351 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 71: /* simple_statement: import_stmt  */
#line 2463 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26357 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 74: /* simple_statement: kill  */
#line 2466 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26363 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 76: /* simple_statement: lock  */
#line 2468 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26369 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 80: /* simple_statement: prepare  */
#line 2472 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26375 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 81: /* simple_statement: purge  */
#line 2473 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26381 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 82: /* simple_statement: release  */
#line 2474 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26387 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 83: /* simple_statement: rename  */
#line 2475 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26393 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 86: /* simple_statement: reset  */
#line 2478 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26399 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 87: /* simple_statement: resignal_stmt  */
#line 2479 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26405 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 89: /* simple_statement: revoke  */
#line 2481 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26411 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 90: /* simple_statement: rollback  */
#line 2482 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26417 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 91: /* simple_statement: savepoint  */
#line 2483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26423 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 93: /* simple_statement: set  */
#line 2485 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 26429 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 142: /* simple_statement: signal_stmt  */
#line 2534 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26435 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 143: /* simple_statement: start  */
#line 2535 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26441 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 144: /* simple_statement: start_replica_stmt  */
#line 2536 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26447 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 145: /* simple_statement: stop_replica_stmt  */
#line 2537 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26453 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 147: /* simple_statement: uninstall  */
#line 2539 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26459 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 148: /* simple_statement: unlock  */
#line 2540 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26465 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 150: /* simple_statement: use  */
#line 2542 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26471 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 151: /* simple_statement: xa  */
#line 2543 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.top_level_node)= nullptr; }
#line 26477 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 152: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2548 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26488 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 155: /* prepare: PREPARE_SYM ident FROM prepare_src  */
#line 2563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 26509 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 156: /* prepare_src: TEXT_STRING_sys  */
#line 2583 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 26520 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 157: /* prepare_src: '@' ident_or_text  */
#line 2590 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 26531 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 158: /* $@2: %empty  */
#line 2600 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 26542 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 159: /* execute: EXECUTE_SYM ident $@2 execute_using  */
#line 2607 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 26548 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 164: /* execute_var_ident: '@' ident_or_text  */
#line 2622 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 26559 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 165: /* $@3: %empty  */
#line 2634 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 26571 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 166: /* help: HELP_SYM $@3 ident_or_text  */
#line 2642 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 26581 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 167: /* $@4: %empty  */
#line 2653 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_SOURCE;
            /*
              Clear LEX_SOURCE_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 26596 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 168: /* change_replication_stmt: CHANGE REPLICATION SOURCE_SYM TO_SYM $@4 source_defs opt_channel  */
#line 2664 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 26605 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 169: /* $@5: %empty  */
#line 2669 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(lex->m_sql_cmd == nullptr);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 26619 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 170: /* change_replication_stmt: CHANGE REPLICATION FILTER_SYM $@5 filter_defs opt_channel  */
#line 2679 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 26628 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 173: /* filter_def: REPLICATE_DO_DB EQ opt_filter_db_list  */
#line 2691 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 26639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 174: /* filter_def: REPLICATE_IGNORE_DB EQ opt_filter_db_list  */
#line 2698 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 26650 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 175: /* filter_def: REPLICATE_DO_TABLE EQ opt_filter_table_list  */
#line 2705 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 26661 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 176: /* filter_def: REPLICATE_IGNORE_TABLE EQ opt_filter_table_list  */
#line 2712 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 26672 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 177: /* filter_def: REPLICATE_WILD_DO_TABLE EQ opt_filter_string_list  */
#line 2719 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 26683 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 178: /* filter_def: REPLICATE_WILD_IGNORE_TABLE EQ opt_filter_string_list  */
#line 2726 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 26695 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 179: /* filter_def: REPLICATE_REWRITE_DB EQ opt_filter_db_pair_list  */
#line 2734 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd != nullptr);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 26706 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 180: /* opt_filter_db_list: '(' ')'  */
#line 2743 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26716 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 181: /* opt_filter_db_list: '(' filter_db_list ')'  */
#line 2749 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26724 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 182: /* filter_db_list: filter_db_ident  */
#line 2756 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26735 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 183: /* filter_db_list: filter_db_list ',' filter_db_ident  */
#line 2763 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26744 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 184: /* filter_db_ident: ident  */
#line 2771 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 26755 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 185: /* opt_filter_db_pair_list: '(' ')'  */
#line 2780 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26765 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 186: /* opt_filter_db_pair_list: '(' filter_db_pair_list ')'  */
#line 2786 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26773 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 187: /* filter_db_pair_list: '(' filter_db_ident ',' filter_db_ident ')'  */
#line 2792 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 26785 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 188: /* filter_db_pair_list: filter_db_pair_list ',' '(' filter_db_ident ',' filter_db_ident ')'  */
#line 2800 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 26795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 189: /* opt_filter_table_list: '(' ')'  */
#line 2808 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26805 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 190: /* opt_filter_table_list: '(' filter_table_list ')'  */
#line 2814 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26813 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 191: /* filter_table_list: filter_table_ident  */
#line 2821 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26824 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 192: /* filter_table_list: filter_table_list ',' filter_table_ident  */
#line 2828 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26833 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 193: /* filter_table_ident: schema '.' ident  */
#line 2836 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 26846 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 194: /* opt_filter_string_list: '(' ')'  */
#line 2848 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
          }
#line 26856 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 195: /* opt_filter_string_list: '(' filter_string_list ')'  */
#line 2854 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 26864 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 196: /* filter_string_list: filter_string  */
#line 2861 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 26875 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 197: /* filter_string_list: filter_string_list ',' filter_string  */
#line 2868 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 26884 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 198: /* filter_string: filter_wild_db_table_string  */
#line 2876 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 26895 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 201: /* source_def: SOURCE_HOST_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2891 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 26903 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 202: /* source_def: NETWORK_NAMESPACE_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2895 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 26911 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 203: /* source_def: SOURCE_BIND_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2899 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 26919 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 204: /* source_def: SOURCE_USER_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2903 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26927 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 205: /* source_def: SOURCE_PASSWORD_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2907 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_SOURCE_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26941 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 206: /* source_def: SOURCE_PORT_SYM EQ ulong_num  */
#line 2917 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26949 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 207: /* source_def: SOURCE_CONNECT_RETRY_SYM EQ ulong_num  */
#line 2921 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26957 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 208: /* source_def: SOURCE_RETRY_COUNT_SYM EQ ulong_num  */
#line 2925 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_SOURCE_INFO::LEX_MI_ENABLE;
          }
#line 26966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 209: /* source_def: SOURCE_DELAY_SYM EQ ulong_num  */
#line 2930 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > SOURCE_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, SOURCE_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26981 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 210: /* source_def: SOURCE_SSL_SYM EQ ulong_num  */
#line 2941 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE : LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 26990 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 211: /* source_def: SOURCE_SSL_CA_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2946 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 212: /* source_def: SOURCE_SSL_CAPATH_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2950 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27006 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 213: /* source_def: SOURCE_TLS_VERSION_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2954 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 27014 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 215: /* source_def: SOURCE_SSL_CERT_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2959 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 27022 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 216: /* source_def: SOURCE_SSL_CIPHER_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2963 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 27030 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 217: /* source_def: SOURCE_SSL_KEY_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2967 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 27038 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 218: /* source_def: SOURCE_SSL_VERIFY_SERVER_CERT_SYM EQ ulong_num  */
#line 2971 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE : LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27047 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 219: /* source_def: SOURCE_SSL_CRL_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2976 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 27055 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 220: /* source_def: SOURCE_SSL_CRLPATH_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 27063 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 221: /* source_def: SOURCE_PUBLIC_KEY_PATH_SYM EQ TEXT_STRING_sys_nonewline  */
#line 2984 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 27071 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 222: /* source_def: GET_SOURCE_PUBLIC_KEY_SYM EQ ulong_num  */
#line 2988 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE :
              LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27081 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 223: /* source_def: SOURCE_HEARTBEAT_PERIOD_SYM EQ NUM_literal  */
#line 2994 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > REPLICA_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(REPLICA_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, REPLICA_MAX_HEARTBEAT_PERIOD);
               my_error(ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_SOURCE_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_SOURCE_INFO::LEX_MI_ENABLE;
          }
#line 27119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 224: /* source_def: IGNORE_SERVER_IDS_SYM EQ '(' ignore_server_id_list ')'  */
#line 3028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_SOURCE_INFO::LEX_MI_ENABLE;
           }
#line 27127 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 225: /* source_def: SOURCE_COMPRESSION_ALGORITHM_SYM EQ TEXT_STRING_sys  */
#line 3032 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 27135 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 226: /* source_def: SOURCE_ZSTD_COMPRESSION_LEVEL_SYM EQ ulong_num  */
#line 3036 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 27143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 227: /* source_def: SOURCE_AUTO_POSITION_SYM EQ ulong_num  */
#line 3040 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_SOURCE_INFO::LEX_MI_ENABLE :
              LEX_SOURCE_INFO::LEX_MI_DISABLE;
          }
#line 27153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 229: /* source_def: REQUIRE_ROW_FORMAT_SYM EQ ulong_num  */
#line 3047 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 27173 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 231: /* source_def: SOURCE_CONNECTION_AUTO_FAILOVER_SYM EQ real_ulong_num  */
#line 3064 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 27193 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 233: /* source_def: GTID_ONLY_SYM EQ real_ulong_num  */
#line 3081 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_SOURCE_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_SOURCE_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 27214 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 238: /* ignore_server_id: ulong_num  */
#line 3108 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 27222 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 239: /* privilege_check_def: user_ident_or_text  */
#line 3114 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 27232 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 240: /* privilege_check_def: NULL_SYM  */
#line 3120 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= nullptr;
            Lex->mi.privilege_checks_hostname= nullptr;
          }
#line 27242 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 241: /* table_primary_key_check_def: STREAM_SYM  */
#line 3129 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 27250 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 242: /* table_primary_key_check_def: ON_SYM  */
#line 3133 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 27258 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 243: /* table_primary_key_check_def: OFF_SYM  */
#line 3137 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 27266 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 244: /* table_primary_key_check_def: GENERATE_SYM  */
#line 3141 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.require_table_primary_key_check= LEX_SOURCE_INFO::LEX_MI_PK_CHECK_GENERATE;
          }
#line 27274 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 245: /* assign_gtids_to_anonymous_transactions_def: OFF_SYM  */
#line 3148 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 27282 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 246: /* assign_gtids_to_anonymous_transactions_def: LOCAL_SYM  */
#line 3152 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 27290 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 247: /* assign_gtids_to_anonymous_transactions_def: TEXT_STRING  */
#line 3156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_SOURCE_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!mysql::gtid::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, mysql::gtid::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27304 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 248: /* source_tls_ciphersuites_def: TEXT_STRING_sys_nonewline  */
#line 3170 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.tls_ciphersuites = LEX_SOURCE_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 27313 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 249: /* source_tls_ciphersuites_def: NULL_SYM  */
#line 3175 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.tls_ciphersuites = LEX_SOURCE_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = nullptr;
          }
#line 27322 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 250: /* source_file_def: SOURCE_LOG_FILE_SYM EQ TEXT_STRING_sys_nonewline  */
#line 3183 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27330 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 251: /* source_file_def: SOURCE_LOG_POS_SYM EQ ulonglong_num  */
#line 3187 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               SOURCE_LOG_POS has been explicitely specified. On the contrary
               in change_master() (rpl_replica.cc) we cannot distinguish between 0
               (SOURCE_LOG_POS_SYM explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 27350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 252: /* source_file_def: RELAY_LOG_FILE_SYM EQ TEXT_STRING_sys_nonewline  */
#line 3203 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 27358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 253: /* source_file_def: RELAY_LOG_POS_SYM EQ ulong_num  */
#line 3207 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 27369 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 254: /* opt_channel: %empty  */
#line 3216 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = {}; }
#line 27375 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 255: /* opt_channel: FOR_SYM CHANNEL_SYM TEXT_STRING_sys_nonewline  */
#line 3218 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27381 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 256: /* create_table_stmt: CREATE opt_temporary TABLE_SYM opt_if_not_exists table_ident '(' table_element_list ')' opt_create_table_options_etc  */
#line 3224 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 257: /* create_table_stmt: CREATE opt_temporary TABLE_SYM opt_if_not_exists table_ident opt_create_table_options_etc  */
#line 3234 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             nullptr,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 27407 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 258: /* create_table_stmt: CREATE opt_temporary TABLE_SYM opt_if_not_exists table_ident LIKE table_ident  */
#line 3244 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 27415 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 259: /* create_table_stmt: CREATE opt_temporary TABLE_SYM opt_if_not_exists table_ident '(' LIKE table_ident ')'  */
#line 3249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 27423 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 260: /* create_role_stmt: CREATE ROLE_SYM opt_if_not_exists role_list  */
#line 3256 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_role((yyloc), !!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 27431 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 261: /* create_resource_group_stmt: CREATE RESOURCE_SYM GROUP_SYM ident TYPE_SYM opt_equal resource_group_types opt_resource_group_vcpu_list opt_resource_group_priority opt_resource_group_enable_disable  */
#line 3266 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group((yyloc), to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 27441 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 262: /* $@6: %empty  */
#line 3275 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= nullptr;
            Lex->create_info->used_fields= 0;
          }
#line 27453 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 263: /* create: CREATE DATABASE opt_if_not_exists ident $@6 opt_create_database_options  */
#line 3283 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 27464 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 264: /* create: CREATE view_or_trigger_or_sp_or_event  */
#line 3290 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 27470 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 265: /* create: CREATE USER opt_if_not_exists create_user_list default_role_clause require_clause connect_options opt_account_lock_password_expire_options opt_user_attribute  */
#line 3295 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            MAKE_CMD_DCL_DUMMY();
          }
#line 27485 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 266: /* create: CREATE LOGFILE_SYM GROUP_SYM ident ADD lg_undofile opt_logfile_group_options  */
#line 3307 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27508 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 267: /* create: CREATE TABLESPACE_SYM ident opt_ts_datafile_name opt_logfile_group_name opt_tablespace_options  */
#line 3327 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27530 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 268: /* create: CREATE UNDO_SYM TABLESPACE_SYM ident ADD ts_datafile opt_undo_tablespace_options  */
#line 3346 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 27553 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 269: /* create: CREATE SERVER_SYM ident_or_text FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 3366 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 27570 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 270: /* create_srs_stmt: CREATE OR_SYM REPLACE_SYM SPATIAL_SYM REFERENCE_SYM SYSTEM_SYM real_ulonglong_num srs_attributes  */
#line 3383 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyloc), (yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 27578 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 271: /* create_srs_stmt: CREATE SPATIAL_SYM REFERENCE_SYM SYSTEM_SYM opt_if_not_exists real_ulonglong_num srs_attributes  */
#line 3388 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyloc), (yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 27586 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 272: /* srs_attributes: %empty  */
#line 3395 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 27596 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 273: /* srs_attributes: srs_attributes NAME_SYM TEXT_STRING_sys_nonewline  */
#line 3401 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27612 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 274: /* srs_attributes: srs_attributes DEFINITION_SYM TEXT_STRING_sys_nonewline  */
#line 3413 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27628 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 275: /* srs_attributes: srs_attributes ORGANIZATION_SYM TEXT_STRING_sys_nonewline IDENTIFIED_SYM BY real_ulonglong_num  */
#line 3426 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 27645 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 276: /* srs_attributes: srs_attributes DESCRIPTION_SYM TEXT_STRING_sys_nonewline  */
#line 3439 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 27661 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 277: /* default_role_clause: %empty  */
#line 3454 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= nullptr;
          }
#line 27669 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 278: /* default_role_clause: DEFAULT_SYM ROLE_SYM role_list  */
#line 3459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 27677 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 279: /* create_index_stmt: CREATE opt_unique INDEX_SYM ident opt_index_type_clause ON_SYM table_ident '(' key_list_with_expression ')' opt_index_options opt_index_lock_and_algorithm  */
#line 3468 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27688 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 280: /* create_index_stmt: CREATE FULLTEXT_SYM INDEX_SYM ident ON_SYM table_ident '(' key_list_with_expression ')' opt_fulltext_index_options opt_index_lock_and_algorithm  */
#line 3476 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             nullptr, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27699 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 281: /* create_index_stmt: CREATE SPATIAL_SYM INDEX_SYM ident ON_SYM table_ident '(' key_list_with_expression ')' opt_spatial_index_options opt_index_lock_and_algorithm  */
#line 3484 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt((yyloc), YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             nullptr, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 27710 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 284: /* server_option: USER TEXT_STRING_sys  */
#line 3499 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 27718 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 285: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 3503 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 27726 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 286: /* server_option: DATABASE TEXT_STRING_sys  */
#line 3507 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 27734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 287: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 3511 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 27742 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 288: /* server_option: PASSWORD TEXT_STRING_sys  */
#line 3515 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 27751 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 289: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 3520 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 27759 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 290: /* server_option: PORT_SYM ulong_num  */
#line 3524 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 27767 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 291: /* $@7: %empty  */
#line 3531 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
            MAKE_CMD_DDL_DUMMY();
          }
#line 27788 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 292: /* event_tail: EVENT_SYM opt_if_not_exists sp_name $@7 ON_SYM SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 3552 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
            assert(Lex->m_sql_cmd->sql_cmd_type() == SQL_CMD_DDL);
            assert(Lex->m_sql_cmd->sql_command_code() == SQLCOM_CREATE_EVENT);
          }
#line 27802 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 293: /* $@8: %empty  */
#line 3565 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 27813 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 295: /* ev_schedule_time: AT_SYM expr  */
#line 3574 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 27823 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 296: /* opt_ev_status: %empty  */
#line 3582 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27829 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 297: /* opt_ev_status: ENABLE_SYM  */
#line 3584 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27839 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 298: /* opt_ev_status: DISABLE_SYM ON_SYM SLAVE  */
#line 3590 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "<CREATE|ALTER> EVENT ... DISABLE ON SLAVE",
                                        "<CREATE|ALTER> EVENT ... DISABLE ON REPLICA");
            Lex->event_parse_data->status= Event_parse_data::REPLICA_SIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27851 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 299: /* opt_ev_status: DISABLE_SYM ON_SYM REPLICA_SYM  */
#line 3598 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::REPLICA_SIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27861 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 300: /* opt_ev_status: DISABLE_SYM  */
#line 3604 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 27871 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 301: /* ev_starts: %empty  */
#line 3613 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == nullptr)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 27882 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 302: /* ev_starts: STARTS_SYM expr  */
#line 3620 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 27892 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 304: /* ev_ends: ENDS_SYM expr  */
#line 3630 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 27902 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 305: /* opt_ev_on_completion: %empty  */
#line 3638 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27908 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 307: /* ev_on_completion: ON_SYM COMPLETION_SYM PRESERVE_SYM  */
#line 3644 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 27918 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 308: /* ev_on_completion: ON_SYM COMPLETION_SYM NOT_SYM PRESERVE_SYM  */
#line 3650 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 27928 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 309: /* opt_ev_comment: %empty  */
#line 3658 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 27934 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 310: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 3660 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27943 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 311: /* $@9: %empty  */
#line 3667 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27996 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 312: /* ev_sql_stmt: $@9 ev_sql_stmt_inner  */
#line 3716 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 28010 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 326: /* sp_name: ident '.' ident  */
#line 3745 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == nullptr)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 28028 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 327: /* sp_name: ident  */
#line 3759 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == nullptr)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 28048 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 328: /* sp_a_chistics: %empty  */
#line 3777 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 28054 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 329: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 3778 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   {}
#line 28060 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 330: /* sp_c_chistics: %empty  */
#line 3782 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 28066 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 331: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3783 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     {}
#line 28072 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 332: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3789 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 28078 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 333: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3791 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.language= {"SQL",3}; }
#line 28084 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 334: /* sp_chistic: LANGUAGE_SYM JAVASCRIPT_SYM  */
#line 3793 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.language= {"JAVASCRIPT",10};
            Lex->sp_chistics.daccess= SP_NO_SQL;
          }
#line 28092 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 335: /* sp_chistic: LANGUAGE_SYM ident  */
#line 3797 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.language= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 28098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 336: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3799 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 28104 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 337: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3801 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 28110 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 338: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3803 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 28116 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 339: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3805 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 28122 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 340: /* sp_chistic: sp_suid  */
#line 3807 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 28128 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 341: /* sp_c_chistic: sp_chistic  */
#line 3812 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { }
#line 28134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 342: /* sp_c_chistic: DETERMINISTIC_SYM  */
#line 3813 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { Lex->sp_chistics.detistic= true; }
#line 28140 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 343: /* sp_c_chistic: not DETERMINISTIC_SYM  */
#line 3814 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { Lex->sp_chistics.detistic= false; }
#line 28146 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 344: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3819 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 28154 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 345: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3823 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 28162 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 346: /* call_stmt: CALL_SYM sp_name opt_paren_expr_list  */
#line 3830 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_call((yyloc), (yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 28170 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 347: /* opt_paren_expr_list: %empty  */
#line 3836 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   { (yyval.item_list2)= nullptr; }
#line 28176 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 348: /* opt_paren_expr_list: '(' opt_expr_list ')'  */
#line 3838 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 28184 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 353: /* sp_fdparam: ident type opt_collate  */
#line 3856 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      nullptr, nullptr, &NULL_CSTR, nullptr,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 28236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 358: /* sp_pdparam: sp_opt_inout ident type opt_collate  */
#line 3918 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      nullptr, nullptr, &NULL_CSTR, nullptr,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 28287 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 359: /* sp_opt_inout: %empty  */
#line 3967 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_IN; }
#line 28293 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 360: /* sp_opt_inout: IN_SYM  */
#line 3968 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_IN; }
#line 28299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 361: /* sp_opt_inout: OUT_SYM  */
#line 3969 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_OUT; }
#line 28305 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 362: /* sp_opt_inout: INOUT_SYM  */
#line 3970 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num)= sp_variable::MODE_INOUT; }
#line 28311 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 363: /* sp_proc_stmts: %empty  */
#line 3974 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 28317 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 365: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3979 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           {}
#line 28323 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 367: /* sp_decls: %empty  */
#line 3985 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28331 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 368: /* sp_decls: sp_decls sp_decl ';'  */
#line 3989 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 28356 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 369: /* sp_decl: DECLARE_SYM sp_decl_idents type opt_collate sp_opt_default  */
#line 4017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == nullptr)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        nullptr, nullptr, &NULL_CSTR, nullptr,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 28455 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 370: /* sp_decl: DECLARE_SYM ident CONDITION_SYM FOR_SYM sp_cond  */
#line 4112 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 28476 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 371: /* $@10: %empty  */
#line 4129 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 28521 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 372: /* sp_decl: DECLARE_SYM sp_handler_type HANDLER_SYM FOR_SYM $@10 sp_hcond_list sp_proc_stmt  */
#line 4170 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == nullptr ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 28559 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 373: /* $@11: %empty  */
#line 4207 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 28572 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 374: /* sp_decl: DECLARE_SYM ident CURSOR_SYM FOR_SYM $@11 select_stmt  */
#line 4216 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 28638 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 375: /* sp_handler_type: EXIT_SYM  */
#line 4280 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.num)= sp_handler::EXIT; }
#line 28644 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 376: /* sp_handler_type: CONTINUE_SYM  */
#line 4281 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.num)= sp_handler::CONTINUE; }
#line 28650 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 377: /* sp_hcond_list: sp_hcond_element  */
#line 4287 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 28656 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 378: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 4289 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 28662 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 379: /* sp_hcond_element: sp_hcond  */
#line 4294 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 28686 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 380: /* sp_cond: ulong_num  */
#line 4317 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28701 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 382: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 4332 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28724 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 383: /* opt_value: %empty  */
#line 4353 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 28730 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 384: /* opt_value: VALUE_SYM  */
#line 4354 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       {}
#line 28736 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 385: /* sp_hcond: sp_cond  */
#line 4359 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 28744 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 386: /* sp_hcond: ident  */
#line 4363 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == nullptr)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 28761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 387: /* sp_hcond: SQLWARNING_SYM  */
#line 4376 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28771 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 388: /* sp_hcond: not FOUND_SYM  */
#line 4382 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28781 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 389: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 4388 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == nullptr)
              MYSQL_YYABORT;
          }
#line 28791 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 390: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 4397 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 28805 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 391: /* signal_value: ident  */
#line 4410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 28835 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 392: /* signal_value: sqlstate  */
#line 4436 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28841 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 393: /* opt_signal_value: %empty  */
#line 4440 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.spcondvalue)= nullptr; }
#line 28847 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 394: /* opt_signal_value: signal_value  */
#line 4442 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 28853 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 395: /* opt_set_signal_information: %empty  */
#line 4446 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 28859 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 396: /* opt_set_signal_information: SET_SYM signal_information_item_list  */
#line 4448 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 28865 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 397: /* signal_information_item_list: signal_condition_information_item_name EQ signal_allowed_expr  */
#line 4453 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28875 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 398: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name EQ signal_allowed_expr  */
#line 4460 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 28885 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 399: /* signal_allowed_expr: literal_or_null  */
#line 4472 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28891 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 400: /* signal_allowed_expr: rvalue_system_or_user_variable  */
#line 4474 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28897 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 401: /* signal_allowed_expr: simple_ident  */
#line 4476 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 28903 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 402: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 4482 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 28909 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 403: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 4484 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 28915 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 404: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 4486 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 28921 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 405: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 4488 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 28927 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 406: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 4490 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 28933 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 407: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 4492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 28939 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 408: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 4494 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 28945 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 409: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 4496 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28951 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 410: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 4498 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28957 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 411: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 4500 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 28963 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 412: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 4502 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 28969 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 413: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 4504 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 28975 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 414: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 4509 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 28990 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 415: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM diagnostics_information  */
#line 4523 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 29007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 416: /* which_area: %empty  */
#line 4539 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29013 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 417: /* which_area: CURRENT_SYM  */
#line 4541 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 29019 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 418: /* which_area: STACKED_SYM  */
#line 4543 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 29025 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 419: /* diagnostics_information: statement_information  */
#line 4548 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == nullptr)
              MYSQL_YYABORT;
          }
#line 29035 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 420: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 4554 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == nullptr)
              MYSQL_YYABORT;
          }
#line 29045 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 421: /* statement_information: statement_information_item  */
#line 4563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == nullptr || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 29055 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 422: /* statement_information: statement_information ',' statement_information_item  */
#line 4569 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 29065 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 423: /* statement_information_item: simple_target_specification EQ statement_information_item_name  */
#line 4578 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 424: /* simple_target_specification: ident  */
#line 4586 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is nullptr if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29107 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 425: /* simple_target_specification: '@' ident_or_text  */
#line 4614 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 29116 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 426: /* statement_information_item_name: NUMBER_SYM  */
#line 4622 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 29122 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 427: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 4624 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 29128 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 428: /* condition_number: signal_allowed_expr  */
#line 4633 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 29134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 429: /* condition_information: condition_information_item  */
#line 4638 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == nullptr || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 29144 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 430: /* condition_information: condition_information ',' condition_information_item  */
#line 4644 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 29154 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 431: /* condition_information_item: simple_target_specification EQ condition_information_item_name  */
#line 4653 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == nullptr)
              MYSQL_YYABORT;
          }
#line 29164 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 432: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 4661 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 29170 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 433: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 4663 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 29176 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 434: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 4665 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 29182 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 435: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 4667 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 29188 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 436: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 4669 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 29194 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 437: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 4671 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 29200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 438: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 4673 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 29206 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 439: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 4675 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 29212 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 440: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 4677 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 29218 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 441: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 4679 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 29224 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 442: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 4681 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 29230 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 443: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 4683 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 29236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 444: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 4685 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 29242 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 445: /* sp_decl_idents: ident  */
#line 4690 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 29266 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 446: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 4710 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 29290 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 447: /* sp_opt_default: %empty  */
#line 4733 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sp_default).expr_start= nullptr;
            (yyval.sp_default).expr = nullptr;
          }
#line 29299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 448: /* sp_opt_default: DEFAULT_SYM expr  */
#line 4738 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 29308 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 462: /* $@12: %empty  */
#line 4762 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 29314 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 463: /* sp_proc_stmt_if: IF $@12 sp_if END IF  */
#line 4764 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29324 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 464: /* $@13: %empty  */
#line 4772 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 29337 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 465: /* sp_proc_stmt_statement: $@13 simple_statement  */
#line 4781 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != nullptr)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 29389 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 466: /* $@14: %empty  */
#line 4832 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29401 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 467: /* sp_proc_stmt_return: RETURN_SYM $@14 expr  */
#line 4840 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29451 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 468: /* $@15: %empty  */
#line 4888 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 29466 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 469: /* sp_proc_stmt_unlabeled: $@15 sp_unlabeled_control  */
#line 4899 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 29479 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 470: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 4911 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29537 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 471: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 4968 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29585 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 472: /* sp_proc_stmt_open: OPEN_SYM ident  */
#line 5015 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29609 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 473: /* $@16: %empty  */
#line 5038 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29633 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 474: /* sp_proc_stmt_fetch: FETCH_SYM sp_opt_fetch_noise ident INTO $@16 sp_fetch_list  */
#line 5058 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 29639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 475: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 5063 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29663 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 479: /* sp_fetch_list: ident  */
#line 5092 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29685 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 480: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 5110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 29707 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 481: /* $@17: %empty  */
#line 5130 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29719 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 482: /* $@18: %empty  */
#line 5138 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == nullptr ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29760 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 483: /* $@19: %empty  */
#line 5176 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 29782 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 484: /* sp_if: $@17 expr $@18 THEN_SYM sp_proc_stmts1 $@19 sp_elseifs  */
#line 5194 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 29795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 490: /* $@20: %empty  */
#line 5217 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 29809 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 491: /* $@21: %empty  */
#line 5227 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == nullptr ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29855 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 492: /* simple_case_stmt: CASE_SYM $@20 expr $@21 simple_when_clause_list else_clause_opt END CASE_SYM  */
#line 5272 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 29863 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 493: /* $@22: %empty  */
#line 5279 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            case_stmt_action_case(YYTHD);
          }
#line 29871 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 494: /* searched_case_stmt: CASE_SYM $@22 searched_when_clause_list else_clause_opt END CASE_SYM  */
#line 5286 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            case_stmt_action_end_case(Lex, false);
          }
#line 29879 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 499: /* $@23: %empty  */
#line 5303 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29891 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 500: /* $@24: %empty  */
#line 5311 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == nullptr ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29936 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 501: /* simple_when_clause: WHEN_SYM $@23 expr $@24 THEN_SYM sp_proc_stmts1  */
#line 5353 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29945 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 502: /* $@25: %empty  */
#line 5361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29957 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 503: /* $@26: %empty  */
#line 5369 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == nullptr ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 504: /* searched_when_clause: WHEN_SYM $@25 expr $@26 THEN_SYM sp_proc_stmts1  */
#line 5407 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 30007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 505: /* else_clause_opt: %empty  */
#line 5415 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30025 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 507: /* $@27: %empty  */
#line 5433 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 30047 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 508: /* sp_labeled_control: label_ident ':' $@27 sp_unlabeled_control sp_opt_label  */
#line 5451 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 30068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 509: /* sp_opt_label: %empty  */
#line 5470 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_cstr)= NULL_CSTR; }
#line 30074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 510: /* sp_opt_label: label_ident  */
#line 5471 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 30080 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 511: /* $@28: %empty  */
#line 5476 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 30100 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 512: /* sp_labeled_block: label_ident ':' $@28 sp_block_content sp_opt_label  */
#line 5492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 30119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 513: /* $@29: %empty  */
#line 5509 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 30134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 514: /* sp_unlabeled_block: $@29 sp_block_content  */
#line 5520 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 30143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 515: /* $@30: %empty  */
#line 5528 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 30160 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 516: /* sp_block_content: BEGIN_SYM $@30 sp_decls sp_proc_stmts END  */
#line 5543 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 30194 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 517: /* sp_unlabeled_control: LOOP_SYM sp_proc_stmts1 END LOOP_SYM  */
#line 5577 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 30211 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 518: /* $@31: %empty  */
#line 5590 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30223 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 519: /* $@32: %empty  */
#line 5598 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == nullptr ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 30265 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 520: /* sp_unlabeled_control: WHILE_SYM $@31 expr $@32 DO_SYM sp_proc_stmts1 END WHILE_SYM  */
#line 5639 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 30284 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 521: /* $@33: %empty  */
#line 5656 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 30296 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 522: /* $@34: %empty  */
#line 5664 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == nullptr ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 30338 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 524: /* trg_action_time: BEFORE_SYM  */
#line 5707 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.num)= TRG_ACTION_BEFORE; }
#line 30344 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 525: /* trg_action_time: AFTER_SYM  */
#line 5709 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.num)= TRG_ACTION_AFTER; }
#line 30350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 526: /* trg_event: INSERT_SYM  */
#line 5714 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_INSERT; }
#line 30356 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 527: /* trg_event: UPDATE_SYM  */
#line 5716 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_UPDATE; }
#line 30362 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 528: /* trg_event: DELETE_SYM  */
#line 5718 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.num)= TRG_EVENT_DELETE; }
#line 30368 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 529: /* opt_ts_datafile_name: %empty  */
#line 5732 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
             { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 30374 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 530: /* opt_ts_datafile_name: ADD ts_datafile  */
#line 5734 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
      {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 30382 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 531: /* opt_logfile_group_name: %empty  */
#line 5740 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 30388 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 532: /* opt_logfile_group_name: USE_SYM LOGFILE_SYM GROUP_SYM ident  */
#line 5742 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 30396 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 533: /* opt_tablespace_options: %empty  */
#line 5748 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30402 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 535: /* tablespace_option_list: tablespace_option  */
#line 5754 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 536: /* tablespace_option_list: tablespace_option_list opt_comma tablespace_option  */
#line 5760 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30422 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 548: /* opt_alter_tablespace_options: %empty  */
#line 5782 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 550: /* alter_tablespace_option_list: alter_tablespace_option  */
#line 5788 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30438 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 551: /* alter_tablespace_option_list: alter_tablespace_option_list opt_comma alter_tablespace_option  */
#line 5794 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30448 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 559: /* opt_undo_tablespace_options: %empty  */
#line 5812 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30454 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 561: /* undo_tablespace_option_list: undo_tablespace_option  */
#line 5818 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30464 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 562: /* undo_tablespace_option_list: undo_tablespace_option_list opt_comma undo_tablespace_option  */
#line 5824 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30474 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 564: /* opt_logfile_group_options: %empty  */
#line 5836 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30480 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 566: /* logfile_group_option_list: logfile_group_option  */
#line 5842 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30490 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 567: /* logfile_group_option_list: logfile_group_option_list opt_comma logfile_group_option  */
#line 5848 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30500 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 575: /* opt_alter_logfile_group_options: %empty  */
#line 5866 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ts_options)= nullptr; }
#line 30506 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 577: /* alter_logfile_group_option_list: alter_logfile_group_option  */
#line 5872 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30516 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 578: /* alter_logfile_group_option_list: alter_logfile_group_option_list opt_comma alter_logfile_group_option  */
#line 5878 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 30526 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 582: /* ts_datafile: DATAFILE_SYM TEXT_STRING_sys  */
#line 5892 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                       { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30532 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 583: /* undo_tablespace_state: ACTIVE_SYM  */
#line 5896 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 30538 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 584: /* undo_tablespace_state: INACTIVE_SYM  */
#line 5897 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 30544 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 585: /* lg_undofile: UNDOFILE_SYM TEXT_STRING_sys  */
#line 5901 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                       { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30550 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 586: /* ts_option_initial_size: INITIAL_SIZE_SYM opt_equal size_number  */
#line 5906 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30558 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 587: /* ts_option_autoextend_size: option_autoextend_size  */
#line 5913 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30566 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 588: /* option_autoextend_size: AUTOEXTEND_SIZE_SYM opt_equal size_number  */
#line 5919 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 30572 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 589: /* ts_option_max_size: MAX_SIZE_SYM opt_equal size_number  */
#line 5924 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30580 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 590: /* ts_option_extent_size: EXTENT_SIZE_SYM opt_equal size_number  */
#line 5931 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30588 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 591: /* ts_option_undo_buffer_size: UNDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5938 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30596 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 592: /* ts_option_redo_buffer_size: REDO_BUFFER_SIZE_SYM opt_equal size_number  */
#line 5945 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30604 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 593: /* ts_option_nodegroup: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5952 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyloc), (yyvsp[0].ulong_num));
          }
#line 30612 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 594: /* ts_option_comment: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5959 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 30620 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 595: /* ts_option_engine: opt_storage ENGINE_SYM opt_equal ident_or_text  */
#line 5966 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30628 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 596: /* ts_option_file_block_size: FILE_BLOCK_SIZE_SYM opt_equal size_number  */
#line 5973 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 30636 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 597: /* ts_option_wait: WAIT_SYM  */
#line 5980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed((yyloc), true);
          }
#line 30644 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 598: /* ts_option_wait: NO_WAIT_SYM  */
#line 5984 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed((yyloc), false);
          }
#line 30652 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 599: /* ts_option_encryption: ENCRYPTION_SYM opt_equal TEXT_STRING_sys  */
#line 5991 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 30660 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 600: /* ts_option_engine_attribute: ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 5998 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30668 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 601: /* size_number: real_ulonglong_num  */
#line 6004 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 30674 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 602: /* size_number: IDENT_sys  */
#line 6006 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 30724 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 603: /* opt_create_table_options_etc: create_table_options opt_create_partitioning_etc  */
#line 6082 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 30733 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 605: /* opt_create_partitioning_etc: partition_clause opt_duplicate_as_qe  */
#line 6091 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 30742 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 607: /* opt_duplicate_as_qe: %empty  */
#line 6100 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= nullptr;
          }
#line 30753 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 608: /* opt_duplicate_as_qe: duplicate as_create_query_expression  */
#line 6108 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 30764 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 609: /* opt_duplicate_as_qe: as_create_query_expression  */
#line 6115 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_tail).opt_create_table_options= nullptr;
            (yyval.create_table_tail).opt_partitioning= nullptr;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_expression_body);
          }
#line 30775 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 610: /* as_create_query_expression: AS query_expression_with_opt_locking_clauses  */
#line 6124 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                       { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 30781 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 611: /* as_create_query_expression: query_expression_with_opt_locking_clauses  */
#line 6125 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                       { (yyval.query_expression_body) = (yyvsp[0].query_expression_body); }
#line 30787 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 612: /* partition_clause: PARTITION_SYM BY part_type_def opt_num_parts opt_sub_part opt_part_defs  */
#line 6141 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyloc), (yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 30795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 613: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' opt_name_list ')'  */
#line 6148 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 30803 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 614: /* part_type_def: opt_linear HASH_SYM '(' bit_expr ')'  */
#line 6152 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyloc), (yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30811 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 615: /* part_type_def: RANGE_SYM '(' bit_expr ')'  */
#line 6156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yyloc), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30819 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 616: /* part_type_def: RANGE_SYM COLUMNS '(' name_list ')'  */
#line 6160 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyloc), (yyvsp[-1].name_list));
          }
#line 30827 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 617: /* part_type_def: LIST_SYM '(' bit_expr ')'  */
#line 6164 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yyloc), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 30835 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 618: /* part_type_def: LIST_SYM COLUMNS '(' name_list ')'  */
#line 6168 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyloc), (yyvsp[-1].name_list));
          }
#line 30843 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 619: /* opt_linear: %empty  */
#line 6174 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 30849 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 620: /* opt_linear: LINEAR_SYM  */
#line 6175 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 30855 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 621: /* opt_key_algo: %empty  */
#line 6179 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 30861 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 622: /* opt_key_algo: ALGORITHM_SYM EQ real_ulong_num  */
#line 6181 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 30879 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 623: /* opt_num_parts: %empty  */
#line 6197 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 30885 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 624: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 6199 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 625: /* opt_sub_part: %empty  */
#line 6210 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.opt_sub_part)= nullptr; }
#line 30904 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 626: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM '(' bit_expr ')' opt_num_subparts  */
#line 6213 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyloc), (yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 30912 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 627: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' name_list ')' opt_num_subparts  */
#line 6218 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyloc), (yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 30920 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 628: /* opt_name_list: %empty  */
#line 6225 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.name_list)= nullptr; }
#line 30926 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 630: /* name_list: ident  */
#line 6232 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == nullptr || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30936 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 631: /* name_list: name_list ',' ident  */
#line 6238 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30946 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 632: /* opt_num_subparts: %empty  */
#line 6246 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 30952 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 633: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 6248 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30965 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 634: /* opt_part_defs: %empty  */
#line 6259 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.part_def_list)= nullptr; }
#line 30971 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 635: /* opt_part_defs: '(' part_def_list ')'  */
#line 6260 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 30977 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 636: /* part_def_list: part_definition  */
#line 6265 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == nullptr || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30987 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 637: /* part_def_list: part_def_list ',' part_definition  */
#line 6271 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30997 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 638: /* part_definition: PARTITION_SYM ident opt_part_values opt_part_options opt_sub_partition  */
#line 6280 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yyloc), (yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 31006 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 639: /* opt_part_values: %empty  */
#line 6288 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 31014 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 640: /* opt_part_values: VALUES LESS_SYM THAN_SYM part_func_max  */
#line 6292 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 31023 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 641: /* opt_part_values: VALUES IN_SYM part_values_in  */
#line 6297 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 31032 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 642: /* part_func_max: MAX_VALUE_SYM  */
#line 6304 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.part_value_item_list_paren)= nullptr; }
#line 31038 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 644: /* part_values_in: part_value_item_list_paren  */
#line 6310 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yyloc), (yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 31046 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 645: /* part_values_in: '(' part_value_list ')'  */
#line 6314 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yyloc), (yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 31054 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 646: /* part_value_list: part_value_item_list_paren  */
#line 6321 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == nullptr || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 31065 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 647: /* part_value_list: part_value_list ',' part_value_item_list_paren  */
#line 6328 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 31075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 648: /* $@35: %empty  */
#line 6337 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 31090 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 649: /* part_value_item_list_paren: '(' $@35 part_value_item_list ')'  */
#line 6348 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyloc), (yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 31098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 650: /* part_value_item_list: part_value_item  */
#line 6355 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == nullptr || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 31108 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 651: /* part_value_item_list: part_value_item_list ',' part_value_item  */
#line 6361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 31118 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 652: /* part_value_item: MAX_VALUE_SYM  */
#line 6369 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yyloc)); }
#line 31124 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 653: /* part_value_item: bit_expr  */
#line 6370 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yyloc), (yyvsp[0].item)); }
#line 31130 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 654: /* opt_sub_partition: %empty  */
#line 6375 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.sub_part_list)= nullptr; }
#line 31136 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 655: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 6376 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 31142 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 656: /* sub_part_list: sub_part_definition  */
#line 6381 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == nullptr || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31152 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 657: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 6387 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 31162 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 658: /* sub_part_definition: SUBPARTITION_SYM ident_or_text opt_part_options  */
#line 6396 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yyloc), (yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 31170 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 659: /* opt_part_options: %empty  */
#line 6402 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                { (yyval.partition_option_list)= nullptr; }
#line 31176 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 661: /* part_option_list: part_option_list part_option  */
#line 6408 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31186 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 662: /* part_option_list: part_option  */
#line 6414 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == nullptr || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31196 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 663: /* part_option: TABLESPACE_SYM opt_equal ident  */
#line 6423 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31202 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 664: /* part_option: opt_storage ENGINE_SYM opt_equal ident_or_text  */
#line 6425 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_engine((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 31208 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 665: /* part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 6427 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyloc), (yyvsp[0].ulong_num)); }
#line 31214 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 666: /* part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 6429 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyloc), (yyvsp[0].ulonglong_number)); }
#line 31220 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 667: /* part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 6431 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyloc), (yyvsp[0].ulonglong_number)); }
#line 31226 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 668: /* part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6433 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31232 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 669: /* part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31238 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 670: /* part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 6437 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyloc), (yyvsp[0].lexer.lex_str).str); }
#line 31244 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 674: /* alter_database_option: READ_SYM ONLY_SYM opt_equal ternary_option  */
#line 6452 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 31266 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 675: /* opt_create_database_options: %empty  */
#line 6472 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 31272 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 676: /* opt_create_database_options: create_database_options  */
#line 6473 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                  {}
#line 31278 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 677: /* create_database_options: create_database_option  */
#line 6477 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 {}
#line 31284 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 678: /* create_database_options: create_database_options create_database_option  */
#line 6478 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                         {}
#line 31290 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 679: /* create_database_option: default_collation  */
#line 6483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 31299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 680: /* create_database_option: default_charset  */
#line 6488 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 31308 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 681: /* create_database_option: default_encryption  */
#line 6493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 31324 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 682: /* opt_if_not_exists: %empty  */
#line 6507 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 31330 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 683: /* opt_if_not_exists: IF not EXISTS  */
#line 6508 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= true; }
#line 31336 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 684: /* create_table_options_space_separated: create_table_option  */
#line 6513 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == nullptr || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31346 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 685: /* create_table_options_space_separated: create_table_options_space_separated create_table_option  */
#line 6519 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31356 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 686: /* create_table_options: create_table_option  */
#line 6528 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == nullptr || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31366 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 687: /* create_table_options: create_table_options opt_comma create_table_option  */
#line 6534 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 31376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 690: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 6548 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31384 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 691: /* create_table_option: SECONDARY_ENGINE_SYM opt_equal NULL_SYM  */
#line 6552 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option((yyloc));
          }
#line 31392 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 692: /* create_table_option: SECONDARY_ENGINE_SYM opt_equal ident_or_text  */
#line 6556 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 693: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 6560 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 694: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 6564 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31416 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 695: /* create_table_option: AVG_ROW_LENGTH opt_equal ulonglong_num  */
#line 6568 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31433 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 696: /* create_table_option: PASSWORD opt_equal TEXT_STRING_sys  */
#line 6581 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31441 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 697: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 6585 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31449 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 698: /* create_table_option: COMPRESSION_SYM opt_equal TEXT_STRING_sys  */
#line 6589 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31457 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 699: /* create_table_option: ENCRYPTION_SYM opt_equal TEXT_STRING_sys  */
#line 6593 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31465 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 700: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 6597 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31473 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 701: /* create_table_option: PACK_KEYS_SYM opt_equal ternary_option  */
#line 6601 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31481 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 702: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ternary_option  */
#line 6605 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31489 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 703: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ternary_option  */
#line 6609 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyloc), (yyvsp[0].ternary_option));
          }
#line 31497 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 704: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 6613 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyloc), (yyvsp[0].ulong_num));
          }
#line 31519 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 705: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT_SYM  */
#line 6631 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyloc));
          }
#line 31527 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 706: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 6635 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31535 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 707: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 6639 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31543 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 708: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 6643 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31551 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 709: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 6647 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyloc), (yyvsp[0].row_type));
          }
#line 31559 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 710: /* create_table_option: UNION_SYM opt_equal '(' opt_table_list ')'  */
#line 6651 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyloc), (yyvsp[-1].table_list));
          }
#line 31567 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 711: /* create_table_option: default_charset  */
#line 6655 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyloc), (yyvsp[0].lexer.charset));
          }
#line 31575 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 712: /* create_table_option: default_collation  */
#line 6659 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyloc), (yyvsp[0].lexer.charset));
          }
#line 31583 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 713: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 6663 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyloc), (yyvsp[0].ulong_num));
          }
#line 31591 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 714: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6667 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 715: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 6671 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31607 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 716: /* create_table_option: TABLESPACE_SYM opt_equal ident  */
#line 6675 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 31615 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 717: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 6679 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option((yyloc), HA_SM_DISK);
          }
#line 31623 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 718: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 6683 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option((yyloc), HA_SM_MEMORY);
          }
#line 31631 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 719: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 6687 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 31639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 720: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulonglong_num  */
#line 6691 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option((yyloc), static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 31657 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 721: /* create_table_option: START_SYM TRANSACTION_SYM  */
#line 6705 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option((yyloc), true);
	  }
#line 31665 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 722: /* create_table_option: ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 6709 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31673 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 723: /* create_table_option: SECONDARY_ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 6713 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31681 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 724: /* create_table_option: option_autoextend_size  */
#line 6717 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyloc), (yyvsp[0].ulonglong_number));
          }
#line 31689 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 725: /* ternary_option: ulong_num  */
#line 6724 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 31707 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 726: /* ternary_option: DEFAULT_SYM  */
#line 6737 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 31713 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 727: /* default_charset: opt_default character_set opt_equal charset_name  */
#line 6741 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                           { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 31719 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 728: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name  */
#line 6745 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                           { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 31725 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 729: /* default_encryption: opt_default ENCRYPTION_SYM opt_equal TEXT_STRING_sys  */
#line 6749 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                               { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 31731 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 730: /* row_types: DEFAULT_SYM  */
#line 6753 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 31737 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 731: /* row_types: FIXED_SYM  */
#line 6754 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 31743 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 732: /* row_types: DYNAMIC_SYM  */
#line 6755 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 31749 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 733: /* row_types: COMPRESSED_SYM  */
#line 6756 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 31755 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 734: /* row_types: REDUNDANT_SYM  */
#line 6757 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 31761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 735: /* row_types: COMPACT_SYM  */
#line 6758 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 31767 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 736: /* merge_insert_types: NO_SYM  */
#line 6762 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 31773 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 737: /* merge_insert_types: FIRST_SYM  */
#line 6763 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 31779 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 738: /* merge_insert_types: LAST_SYM  */
#line 6764 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 31785 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 739: /* udf_type: STRING_SYM  */
#line 6768 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 31791 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 740: /* udf_type: REAL_SYM  */
#line 6769 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   {(yyval.num) = (int) REAL_RESULT; }
#line 31797 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 741: /* udf_type: DECIMAL_SYM  */
#line 6770 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 31803 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 742: /* udf_type: INT_SYM  */
#line 6771 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 31809 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 743: /* table_element_list: table_element  */
#line 6776 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == nullptr || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31819 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 744: /* table_element_list: table_element_list ',' table_element  */
#line 6782 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 31829 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 745: /* table_element: column_def  */
#line 6790 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.table_element)= (yyvsp[0].column_def); }
#line 31835 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 746: /* table_element: table_constraint_def  */
#line 6791 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 31841 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 747: /* column_def: ident field_def opt_references  */
#line 6796 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_def)= NEW_PTN PT_column_def((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 31849 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 748: /* opt_references: %empty  */
#line 6802 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.table_constraint_def)= nullptr; }
#line 31855 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 749: /* opt_references: references  */
#line 6804 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= nullptr;
          }
#line 31864 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 750: /* table_constraint_def: key_or_index opt_index_name_and_type '(' key_list_with_expression ')' opt_index_options  */
#line 6813 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31873 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 751: /* table_constraint_def: FULLTEXT_SYM opt_key_or_index opt_ident '(' key_list_with_expression ')' opt_fulltext_index_options  */
#line 6819 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), nullptr,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31882 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 752: /* table_constraint_def: SPATIAL_SYM opt_key_or_index opt_ident '(' key_list_with_expression ')' opt_spatial_index_options  */
#line 6825 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), nullptr, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 753: /* table_constraint_def: opt_constraint_name constraint_key_type opt_index_name_and_type '(' key_list_with_expression ')' opt_index_options  */
#line 6830 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != nullptr ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyloc), (yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 31903 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 754: /* table_constraint_def: opt_constraint_name FOREIGN KEY_SYM opt_ident '(' key_list ')' references  */
#line 6839 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyloc), (yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 31915 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 755: /* table_constraint_def: opt_constraint_name check_constraint opt_constraint_enforcement  */
#line 6847 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 31924 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 756: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 6854 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.item)= (yyvsp[-1].item); }
#line 31930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 757: /* opt_constraint_name: %empty  */
#line 6858 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= NULL_STR; }
#line 31936 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 758: /* opt_constraint_name: CONSTRAINT opt_ident  */
#line 6859 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31942 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 759: /* opt_not: %empty  */
#line 6863 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.is_not_empty)= false; }
#line 31948 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 760: /* opt_not: NOT_SYM  */
#line 6864 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.is_not_empty)= true; }
#line 31954 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 761: /* opt_constraint_enforcement: %empty  */
#line 6868 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= true; }
#line 31960 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 762: /* opt_constraint_enforcement: constraint_enforcement  */
#line 6869 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 31966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 763: /* constraint_enforcement: opt_not ENFORCED_SYM  */
#line 6873 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 31972 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 764: /* field_def: type opt_column_attribute_list  */
#line 6878 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_def)= NEW_PTN PT_field_def((yyloc), (yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31980 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 765: /* field_def: type opt_collate opt_generated_always AS '(' expr ')' opt_stored_attribute opt_column_attribute_list  */
#line 6884 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != nullptr)
            {
              if (opt_attrs == nullptr)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyloc), (yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 32001 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 768: /* opt_stored_attribute: %empty  */
#line 6908 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 32007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 769: /* opt_stored_attribute: VIRTUAL_SYM  */
#line 6909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 32013 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 770: /* opt_stored_attribute: STORED_SYM  */
#line 6910 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 32019 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 771: /* type: int_type opt_field_length field_options  */
#line 6915 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 32027 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 772: /* type: real_type opt_precision field_options  */
#line 6919 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 32035 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 773: /* type: numeric_type float_options field_options  */
#line 6923 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_numeric_type((yyloc), YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 32043 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 774: /* type: BIT_SYM  */
#line 6927 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_bit_type((yyloc));
          }
#line 32051 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 775: /* type: BIT_SYM field_length  */
#line 6931 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_bit_type((yyloc), (yyvsp[0].c_str));
          }
#line 32059 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 776: /* type: BOOL_SYM  */
#line 6935 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_boolean_type((yyloc));
          }
#line 32067 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 777: /* type: BOOLEAN_SYM  */
#line 6939 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_boolean_type((yyloc));
          }
#line 32075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 778: /* type: CHAR_SYM field_length opt_charset_with_opt_binary  */
#line 6943 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32084 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 779: /* type: CHAR_SYM opt_charset_with_opt_binary  */
#line 6948 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32093 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 780: /* type: nchar field_length opt_bin_mod  */
#line 6953 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32106 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 781: /* type: nchar opt_bin_mod  */
#line 6962 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 782: /* type: BINARY_SYM field_length  */
#line 6971 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 32127 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 783: /* type: BINARY_SYM  */
#line 6975 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::CHAR, &my_charset_bin);
          }
#line 32135 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 784: /* type: varchar field_length opt_charset_with_opt_binary  */
#line 6979 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32144 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 785: /* type: nvarchar field_length opt_bin_mod  */
#line 6984 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == nullptr)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 32157 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 786: /* type: VARBINARY_SYM field_length  */
#line 6993 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 32165 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 787: /* type: VECTOR_SYM opt_field_length  */
#line 6997 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_vector_type((yyloc), (yyvsp[0].c_str));
          }
#line 32173 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 788: /* type: YEAR_SYM opt_field_length field_options  */
#line 7001 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), nullptr, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type((yyloc));
          }
#line 32200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 789: /* type: DATE_SYM  */
#line 7024 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_date_type((yyloc));
          }
#line 32208 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 790: /* type: TIME_SYM type_datetime_precision  */
#line 7028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_time_type((yyloc), Time_type::TIME, (yyvsp[0].c_str));
          }
#line 32216 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 791: /* type: TIMESTAMP_SYM type_datetime_precision  */
#line 7032 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyloc), (yyvsp[0].c_str));
          }
#line 32224 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 792: /* type: DATETIME_SYM type_datetime_precision  */
#line 7036 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_time_type((yyloc), Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 32232 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 793: /* type: TINYBLOB_SYM  */
#line 7040 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::TINY, &my_charset_bin);
          }
#line 32240 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 794: /* type: BLOB_SYM opt_field_length  */
#line 7044 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), (yyvsp[0].c_str));
          }
#line 32248 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 796: /* type: MEDIUMBLOB_SYM  */
#line 7049 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, &my_charset_bin);
          }
#line 32256 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 797: /* type: LONGBLOB_SYM  */
#line 7053 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::LONG, &my_charset_bin);
          }
#line 32264 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 798: /* type: LONG_SYM VARBINARY_SYM  */
#line 7057 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, &my_charset_bin);
          }
#line 32272 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 799: /* type: LONG_SYM varchar opt_charset_with_opt_binary  */
#line 7061 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32281 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 800: /* type: TINYTEXT_SYN opt_charset_with_opt_binary  */
#line 7066 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32290 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 801: /* type: TEXT_SYM opt_field_length opt_charset_with_opt_binary  */
#line 7071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_char_type((yyloc), Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 802: /* type: MEDIUMTEXT_SYM opt_charset_with_opt_binary  */
#line 7076 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32308 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 803: /* type: LONGTEXT_SYM opt_charset_with_opt_binary  */
#line 7081 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32317 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 804: /* type: ENUM_SYM '(' string_list ')' opt_charset_with_opt_binary  */
#line 7086 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_enum_type((yyloc), (yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32325 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 805: /* type: SET_SYM '(' string_list ')' opt_charset_with_opt_binary  */
#line 7090 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_set_type((yyloc), (yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32333 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 806: /* type: LONG_SYM opt_charset_with_opt_binary  */
#line 7094 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_blob_type((yyloc), Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 32342 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 807: /* type: SERIAL_SYM  */
#line 7099 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_serial_type((yyloc));
          }
#line 32350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 808: /* type: JSON_SYM  */
#line 7103 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.type)= NEW_PTN PT_json_type((yyloc));
          }
#line 32358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 809: /* spatial_type: GEOMETRY_SYM  */
#line 7110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_GEOMETRY); }
#line 32364 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 810: /* spatial_type: GEOMETRYCOLLECTION_SYM  */
#line 7112 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_GEOMETRYCOLLECTION); }
#line 32370 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 811: /* spatial_type: POINT_SYM  */
#line 7114 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_POINT); }
#line 32376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 812: /* spatial_type: MULTIPOINT_SYM  */
#line 7116 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTIPOINT); }
#line 32382 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 813: /* spatial_type: LINESTRING_SYM  */
#line 7118 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_LINESTRING); }
#line 32388 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 814: /* spatial_type: MULTILINESTRING_SYM  */
#line 7120 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTILINESTRING); }
#line 32394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 815: /* spatial_type: POLYGON_SYM  */
#line 7122 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_POLYGON); }
#line 32400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 816: /* spatial_type: MULTIPOLYGON_SYM  */
#line 7124 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.type)= NEW_PTN PT_spacial_type((yyloc), Field::GEOM_MULTIPOLYGON); }
#line 32406 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 817: /* nchar: NCHAR_SYM  */
#line 7128 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 32412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 818: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 7129 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                {}
#line 32418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 819: /* varchar: CHAR_SYM VARYING  */
#line 7133 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           {}
#line 32424 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 820: /* varchar: VARCHAR_SYM  */
#line 7134 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      {}
#line 32430 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 821: /* nvarchar: NATIONAL_SYM VARCHAR_SYM  */
#line 7138 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   {}
#line 32436 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 822: /* nvarchar: NVARCHAR_SYM  */
#line 7139 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       {}
#line 32442 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 823: /* nvarchar: NCHAR_SYM VARCHAR_SYM  */
#line 7140 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                {}
#line 32448 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 824: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 7141 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        {}
#line 32454 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 825: /* nvarchar: NCHAR_SYM VARYING  */
#line 7142 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            {}
#line 32460 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 826: /* int_type: INT_SYM  */
#line 7146 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::INT; }
#line 32466 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 827: /* int_type: TINYINT_SYM  */
#line 7147 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::TINYINT; }
#line 32472 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 828: /* int_type: SMALLINT_SYM  */
#line 7148 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::SMALLINT; }
#line 32478 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 829: /* int_type: MEDIUMINT_SYM  */
#line 7149 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 32484 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 830: /* int_type: BIGINT_SYM  */
#line 7150 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.int_type)=Int_type::BIGINT; }
#line 32490 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 831: /* real_type: REAL_SYM  */
#line 7155 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 32499 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 832: /* real_type: DOUBLE_SYM opt_PRECISION  */
#line 7160 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 32505 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 835: /* numeric_type: FLOAT_SYM  */
#line 7169 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 32511 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 836: /* numeric_type: DECIMAL_SYM  */
#line 7170 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32517 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 837: /* numeric_type: NUMERIC_SYM  */
#line 7171 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32523 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 838: /* numeric_type: FIXED_SYM  */
#line 7172 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 32529 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 839: /* standard_float_options: %empty  */
#line 7177 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 32538 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 840: /* standard_float_options: field_length  */
#line 7182 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 32547 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 841: /* float_options: %empty  */
#line 7190 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length= nullptr;
            (yyval.precision).dec= nullptr;
          }
#line 32556 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 842: /* float_options: field_length  */
#line 7195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= nullptr;
          }
#line 32565 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 844: /* precision: '(' NUM ',' NUM ')'  */
#line 7204 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 32574 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 845: /* type_datetime_precision: %empty  */
#line 7212 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.c_str)= nullptr; }
#line 32580 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 846: /* type_datetime_precision: '(' NUM ')'  */
#line 7213 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32586 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 847: /* func_datetime_precision: %empty  */
#line 7217 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 32592 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 848: /* func_datetime_precision: '(' ')'  */
#line 7218 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.ulong_num)= 0; }
#line 32598 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 849: /* func_datetime_precision: '(' NUM ')'  */
#line 7220 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
           {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
           }
#line 32607 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 850: /* field_options: %empty  */
#line 7227 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.field_option) = 0; }
#line 32613 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 852: /* field_opt_list: field_opt_list field_option  */
#line 7233 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 32621 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 854: /* field_option: SIGNED_SYM  */
#line 7240 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.field_option) = 0; }
#line 32627 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 855: /* field_option: UNSIGNED_SYM  */
#line 7241 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.field_option) = UNSIGNED_FLAG; }
#line 32633 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 856: /* field_option: ZEROFILL_SYM  */
#line 7242 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 32644 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 857: /* field_length: '(' LONG_NUM ')'  */
#line 7251 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32650 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 858: /* field_length: '(' ULONGLONG_NUM ')'  */
#line 7252 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32656 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 859: /* field_length: '(' DECIMAL_NUM ')'  */
#line 7253 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32662 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 860: /* field_length: '(' NUM ')'  */
#line 7254 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 32668 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 861: /* opt_field_length: %empty  */
#line 7257 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.c_str)= nullptr; /* use default length */ }
#line 32674 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 863: /* opt_precision: %empty  */
#line 7263 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.precision).length= nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 32683 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 865: /* opt_column_attribute_list: %empty  */
#line 7271 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.col_attr_list)= nullptr; }
#line 32689 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 867: /* column_attribute_list: column_attribute_list column_attribute  */
#line 7277 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 32712 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 868: /* column_attribute_list: column_attribute  */
#line 7296 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == nullptr || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 32732 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 869: /* column_attribute: NULL_SYM  */
#line 7315 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr((yyloc));
          }
#line 32740 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 870: /* column_attribute: not NULL_SYM  */
#line 7319 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr((yyloc));
          }
#line 32748 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 871: /* column_attribute: not SECONDARY_SYM  */
#line 7323 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr((yyloc));
          }
#line 32756 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 872: /* column_attribute: DEFAULT_SYM now_or_signed_literal  */
#line 7327 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyloc), (yyvsp[0].item));
          }
#line 32764 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 873: /* column_attribute: DEFAULT_SYM '(' expr ')'  */
#line 7331 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyloc), (yyvsp[-1].item));
          }
#line 32772 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 874: /* column_attribute: ON_SYM UPDATE_SYM now  */
#line 7335 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32780 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 875: /* column_attribute: AUTO_INC  */
#line 7339 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr((yyloc));
          }
#line 32788 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 876: /* column_attribute: SERIAL_SYM DEFAULT_SYM VALUE_SYM  */
#line 7343 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr((yyloc));
          }
#line 32796 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 877: /* column_attribute: opt_primary KEY_SYM  */
#line 7347 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr((yyloc));
          }
#line 32804 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 878: /* column_attribute: UNIQUE_SYM  */
#line 7351 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr((yyloc));
          }
#line 32812 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 879: /* column_attribute: UNIQUE_SYM KEY_SYM  */
#line 7355 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr((yyloc));
          }
#line 32820 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 880: /* column_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 7359 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32828 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 881: /* column_attribute: COLLATE_SYM collation_name  */
#line 7363 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yyloc), (yyvsp[0].lexer.charset));
          }
#line 32836 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 882: /* column_attribute: COLUMN_FORMAT_SYM column_format  */
#line 7367 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyloc), (yyvsp[0].column_format));
          }
#line 32844 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 883: /* column_attribute: STORAGE_SYM storage_media  */
#line 7371 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyloc), (yyvsp[0].storage_media));
          }
#line 32852 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 884: /* column_attribute: SRID_SYM real_ulonglong_num  */
#line 7375 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr((yyloc), static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 32865 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 885: /* column_attribute: opt_constraint_name check_constraint  */
#line 7385 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyloc), (yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 32873 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 886: /* column_attribute: constraint_enforcement  */
#line 7398 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyloc), (yyvsp[0].is_not_empty));
          }
#line 32881 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 887: /* column_attribute: ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 7402 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32889 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 888: /* column_attribute: SECONDARY_ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 7406 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32897 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 889: /* column_attribute: visibility  */
#line 7410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyloc), (yyvsp[0].visibility));
          }
#line 32905 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 890: /* column_format: DEFAULT_SYM  */
#line 7416 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 32911 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 891: /* column_format: FIXED_SYM  */
#line 7417 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 32917 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 892: /* column_format: DYNAMIC_SYM  */
#line 7418 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 32923 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 893: /* storage_media: DEFAULT_SYM  */
#line 7422 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 32929 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 894: /* storage_media: DISK_SYM  */
#line 7423 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_DISK; }
#line 32935 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 895: /* storage_media: MEMORY_SYM  */
#line 7424 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.storage_media)= HA_SM_MEMORY; }
#line 32941 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 896: /* now: NOW_SYM func_datetime_precision  */
#line 7429 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 32949 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 897: /* now_or_signed_literal: now  */
#line 7435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32957 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 901: /* charset_name: ident_or_text  */
#line 7448 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 32970 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 902: /* charset_name: BINARY_SYM  */
#line 7456 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 32976 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 903: /* opt_load_data_charset: %empty  */
#line 7460 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.charset)= nullptr; }
#line 32982 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 904: /* opt_load_data_charset: character_set charset_name  */
#line 7461 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32988 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 905: /* old_or_new_charset_name: ident_or_text  */
#line 7466 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 33001 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 906: /* old_or_new_charset_name: BINARY_SYM  */
#line 7474 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 33007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 907: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 7478 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                  { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 33013 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 908: /* old_or_new_charset_name_or_default: DEFAULT_SYM  */
#line 7479 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.lexer.charset)=nullptr; }
#line 33019 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 909: /* collation_name: ident_or_text  */
#line 7484 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 33029 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 910: /* collation_name: BINARY_SYM  */
#line 7489 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.lexer.charset)= &my_charset_bin; }
#line 33035 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 911: /* opt_collate: %empty  */
#line 7493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.charset) = nullptr; }
#line 33041 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 912: /* opt_collate: COLLATE_SYM collation_name  */
#line 7494 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 33047 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 913: /* opt_default: %empty  */
#line 7498 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 33053 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 914: /* opt_default: DEFAULT_SYM  */
#line 7499 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      {}
#line 33059 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 915: /* ascii: ASCII_SYM  */
#line 7504 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
#line 33068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 916: /* ascii: BINARY_SYM ASCII_SYM  */
#line 7508 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 33078 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 917: /* ascii: ASCII_SYM BINARY_SYM  */
#line 7513 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 33088 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 918: /* unicode: UNICODE_SYM  */
#line 7522 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 33101 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 919: /* unicode: UNICODE_SYM BINARY_SYM  */
#line 7531 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 33112 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 920: /* unicode: BINARY_SYM UNICODE_SYM  */
#line 7538 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 33123 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 921: /* opt_charset_with_opt_binary: %empty  */
#line 7548 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= nullptr;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33132 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 922: /* opt_charset_with_opt_binary: ascii  */
#line 7553 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33141 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 923: /* opt_charset_with_opt_binary: unicode  */
#line 7558 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33150 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 924: /* opt_charset_with_opt_binary: BYTE_SYM  */
#line 7563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33159 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 925: /* opt_charset_with_opt_binary: character_set charset_name opt_bin_mod  */
#line 7568 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == nullptr)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33170 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 926: /* opt_charset_with_opt_binary: BINARY_SYM  */
#line 7575 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= nullptr;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 33180 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 927: /* opt_charset_with_opt_binary: BINARY_SYM character_set charset_name  */
#line 7581 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == nullptr)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 33192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 928: /* opt_bin_mod: %empty  */
#line 7591 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 33198 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 929: /* opt_bin_mod: BINARY_SYM  */
#line 7592 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 33207 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 930: /* $@36: %empty  */
#line 7600 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
        {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 33219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 931: /* ws_num_codepoints: '(' real_ulong_num $@36 ')'  */
#line 7608 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 33225 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 934: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 7622 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 33237 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 935: /* opt_ref_list: %empty  */
#line 7632 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.reference_list)= nullptr; }
#line 33243 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 936: /* opt_ref_list: '(' reference_list ')'  */
#line 7633 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 33249 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 937: /* reference_list: reference_list ',' ident  */
#line 7638 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == nullptr || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 33260 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 938: /* reference_list: ident  */
#line 7645 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == nullptr || key == nullptr || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 33271 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 939: /* opt_match_clause: %empty  */
#line 7654 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 33277 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 940: /* opt_match_clause: MATCH FULL  */
#line 7655 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 33283 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 941: /* opt_match_clause: MATCH PARTIAL  */
#line 7656 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 33289 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 942: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 7657 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 33295 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 943: /* opt_on_update_delete: %empty  */
#line 7662 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33304 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 944: /* opt_on_update_delete: ON_SYM UPDATE_SYM delete_option  */
#line 7667 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 33313 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 945: /* opt_on_update_delete: ON_SYM DELETE_SYM delete_option  */
#line 7672 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33322 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 946: /* opt_on_update_delete: ON_SYM UPDATE_SYM delete_option ON_SYM DELETE_SYM delete_option  */
#line 7678 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 33331 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 947: /* opt_on_update_delete: ON_SYM DELETE_SYM delete_option ON_SYM UPDATE_SYM delete_option  */
#line 7684 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 33340 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 948: /* delete_option: RESTRICT  */
#line 7691 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 33346 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 949: /* delete_option: CASCADE  */
#line 7692 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 33352 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 950: /* delete_option: SET_SYM NULL_SYM  */
#line 7693 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 33358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 951: /* delete_option: NO_SYM ACTION  */
#line 7694 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 33364 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 952: /* delete_option: SET_SYM DEFAULT_SYM  */
#line 7695 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 33370 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 953: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 7699 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 33376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 954: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 7700 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 33382 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 955: /* key_or_index: KEY_SYM  */
#line 7704 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  {}
#line 33388 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 956: /* key_or_index: INDEX_SYM  */
#line 7705 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 33394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 957: /* opt_key_or_index: %empty  */
#line 7709 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 33400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 959: /* keys_or_index: KEYS  */
#line 7714 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
               {}
#line 33406 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 960: /* keys_or_index: INDEX_SYM  */
#line 7715 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 33412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 961: /* keys_or_index: INDEXES  */
#line 7716 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  {}
#line 33418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 962: /* opt_unique: %empty  */
#line 7720 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 33424 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 963: /* opt_unique: UNIQUE_SYM  */
#line 7721 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 33430 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 964: /* opt_fulltext_index_options: %empty  */
#line 7725 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33436 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 966: /* fulltext_index_options: fulltext_index_option  */
#line 7731 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33446 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 967: /* fulltext_index_options: fulltext_index_options fulltext_index_option  */
#line 7737 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33456 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 969: /* fulltext_index_option: WITH PARSER_SYM IDENT_sys  */
#line 7747 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33471 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 970: /* opt_spatial_index_options: %empty  */
#line 7760 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33477 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 972: /* spatial_index_options: spatial_index_option  */
#line 7766 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33487 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 973: /* spatial_index_options: spatial_index_options spatial_index_option  */
#line 7772 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33497 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 975: /* opt_index_options: %empty  */
#line 7784 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.index_options).init(YYMEM_ROOT); }
#line 33503 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 977: /* index_options: index_option  */
#line 7790 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 33513 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 978: /* index_options: index_options index_option  */
#line 7796 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 33523 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 979: /* index_option: common_index_option  */
#line 7804 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33529 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 980: /* index_option: index_type_clause  */
#line 7805 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.index_option)= (yyvsp[0].index_option); }
#line 33535 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 981: /* common_index_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7810 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                             { (yyval.index_option)= NEW_PTN PT_block_size((yyloc), (yyvsp[0].ulong_num)); }
#line 33541 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 982: /* common_index_option: COMMENT_SYM TEXT_STRING_sys  */
#line 7812 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_option)= NEW_PTN PT_index_comment((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33549 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 983: /* common_index_option: visibility  */
#line 7816 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyloc), (yyvsp[0].visibility));
          }
#line 33557 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 984: /* common_index_option: ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 7820 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33565 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 985: /* common_index_option: SECONDARY_ENGINE_ATTRIBUTE_SYM opt_equal json_attribute  */
#line 7824 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 33573 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 986: /* opt_index_name_and_type: opt_ident  */
#line 7847 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), nullptr}; }
#line 33579 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 987: /* opt_index_name_and_type: opt_ident USING index_type  */
#line 7848 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg))}; }
#line 33585 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 988: /* opt_index_name_and_type: ident TYPE_SYM index_type  */
#line 7849 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg))}; }
#line 33591 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 989: /* opt_index_type_clause: %empty  */
#line 7853 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.index_option) = nullptr; }
#line 33597 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 991: /* index_type_clause: USING index_type  */
#line 7858 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.index_option)= NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg)); }
#line 33603 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 992: /* index_type_clause: TYPE_SYM index_type  */
#line 7859 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.index_option)= NEW_PTN PT_index_type((yyloc), (yyvsp[0].key_alg)); }
#line 33609 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 993: /* visibility: VISIBLE_SYM  */
#line 7863 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.visibility)= true; }
#line 33615 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 994: /* visibility: INVISIBLE_SYM  */
#line 7864 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.visibility)= false; }
#line 33621 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 995: /* index_type: BTREE_SYM  */
#line 7868 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 33627 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 996: /* index_type: RTREE_SYM  */
#line 7869 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 33633 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 997: /* index_type: HASH_SYM  */
#line 7870 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 33639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 998: /* key_list: key_list ',' key_part  */
#line 7875 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33649 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 999: /* key_list: key_part  */
#line 7881 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == nullptr || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 33660 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1000: /* key_part: ident opt_ordering_direction  */
#line 7891 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT;
          }
#line 33670 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1001: /* key_part: ident '(' NUM ')' opt_ordering_direction  */
#line 7897 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33686 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1002: /* key_list_with_expression: key_list_with_expression ',' key_part_with_expression  */
#line 7912 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 33696 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1003: /* key_list_with_expression: key_part_with_expression  */
#line 7918 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == nullptr || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 33707 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1005: /* key_part_with_expression: '(' expr ')' opt_ordering_direction  */
#line 7929 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyloc), (yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == nullptr)
              MYSQL_YYABORT;
          }
#line 33717 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1006: /* opt_ident: %empty  */
#line 7937 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= NULL_STR; }
#line 33723 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1008: /* string_list: text_string  */
#line 7943 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == nullptr || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 33733 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1009: /* string_list: string_list ',' text_string  */
#line 7949 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 33742 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1010: /* alter_table_stmt: ALTER TABLE_SYM table_ident opt_alter_table_actions  */
#line 7961 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  (yyloc),
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 33757 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1011: /* alter_table_stmt: ALTER TABLE_SYM table_ident standalone_alter_table_action  */
#line 7972 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  (yyloc),
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 33772 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1012: /* $@37: %empty  */
#line 7986 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= nullptr;
            Lex->create_info->used_fields= 0;
          }
#line 33784 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1013: /* alter_database_stmt: ALTER DATABASE ident_or_empty $@37 alter_database_options  */
#line 7994 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == nullptr &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 33797 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1014: /* $@38: %empty  */
#line 8006 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33812 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1015: /* alter_procedure_stmt: ALTER PROCEDURE_SYM sp_name $@38 sp_a_chistics  */
#line 8017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 33824 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1016: /* $@39: %empty  */
#line 8028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 33839 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1017: /* alter_function_stmt: ALTER FUNCTION_SYM sp_name $@39 sp_a_chistics  */
#line 8039 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 33851 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1018: /* $@40: %empty  */
#line 8050 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33866 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1019: /* alter_view_stmt: ALTER view_algorithm definer_opt $@40 view_tail  */
#line 8061 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            MAKE_CMD_DDL_DUMMY();
          }
#line 33874 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1020: /* $@41: %empty  */
#line 8070 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 33890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1021: /* alter_view_stmt: ALTER definer_opt $@41 view_tail  */
#line 8082 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            MAKE_CMD_DDL_DUMMY();
          }
#line 33898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1022: /* $@42: %empty  */
#line 8089 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 33919 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1023: /* alter_event_stmt: ALTER definer_opt EVENT_SYM sp_name $@42 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 8110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;

            /*
              assert that even if sql_command was overwritten,
              m_sql_cmd was not changed to a different command-type.
            */
            assert(Lex->m_sql_cmd->sql_cmd_type() == SQL_CMD_DDL);
            assert(Lex->m_sql_cmd->sql_command_code() == SQLCOM_ALTER_EVENT);
          }
#line 33943 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1024: /* alter_logfile_stmt: ALTER LOGFILE_SYM GROUP_SYM ident ADD lg_undofile opt_alter_logfile_group_options  */
#line 8134 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1025: /* alter_tablespace_stmt: ALTER TABLESPACE_SYM ident ADD ts_datafile opt_alter_tablespace_options  */
#line 8156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33988 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1026: /* alter_tablespace_stmt: ALTER TABLESPACE_SYM ident DROP ts_datafile opt_alter_tablespace_options  */
#line 8175 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34011 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1027: /* alter_tablespace_stmt: ALTER TABLESPACE_SYM ident RENAME TO_SYM ident  */
#line 8194 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34023 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1028: /* alter_tablespace_stmt: ALTER TABLESPACE_SYM ident alter_tablespace_option_list  */
#line 8202 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34046 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1029: /* alter_undo_tablespace_stmt: ALTER UNDO_SYM TABLESPACE_SYM ident SET_SYM undo_tablespace_state opt_undo_tablespace_options  */
#line 8225 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 34070 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1030: /* alter_server_stmt: ALTER SERVER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 8248 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 34082 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1032: /* alter_user_stmt: alter_user_command user_func identified_by_random_password opt_replace_password opt_retain_current_password  */
#line 8263 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 34097 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1033: /* alter_user_stmt: alter_user_command user_func identified_by_password opt_replace_password opt_retain_current_password  */
#line 8275 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 34112 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1034: /* alter_user_stmt: alter_user_command user_func DISCARD_SYM OLD_SYM PASSWORD  */
#line 8286 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 34121 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1035: /* alter_user_stmt: alter_user_command user DEFAULT_SYM ROLE_SYM ALL  */
#line 8291 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 34137 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1036: /* alter_user_stmt: alter_user_command user DEFAULT_SYM ROLE_SYM NONE_SYM  */
#line 8303 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 34153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1037: /* alter_user_stmt: alter_user_command user DEFAULT_SYM ROLE_SYM role_list  */
#line 8315 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == nullptr || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role((yyloc), Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 34168 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1038: /* alter_user_stmt: alter_user_command user opt_user_registration  */
#line 8326 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 34179 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1039: /* alter_user_stmt: alter_user_command user_func opt_user_registration  */
#line 8333 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 34188 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1040: /* opt_replace_password: %empty  */
#line 8340 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 34194 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1041: /* opt_replace_password: REPLACE_SYM TEXT_STRING_password  */
#line 8341 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                            { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 34200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1042: /* alter_resource_group_stmt: ALTER RESOURCE_SYM GROUP_SYM ident opt_resource_group_vcpu_list opt_resource_group_priority opt_resource_group_enable_disable opt_force  */
#line 8348 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group((yyloc), to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 34209 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1043: /* alter_user_command: ALTER USER if_exists  */
#line 8356 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
            MAKE_CMD_DCL_DUMMY();
          }
#line 34220 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1044: /* opt_user_attribute: %empty  */
#line 8366 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 34230 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1045: /* opt_user_attribute: ATTRIBUTE_SYM TEXT_STRING_literal  */
#line 8372 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 34241 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1046: /* opt_user_attribute: COMMENT_SYM TEXT_STRING_literal  */
#line 8379 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 34252 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1047: /* opt_account_lock_password_expire_options: %empty  */
#line 8387 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 34258 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1051: /* opt_account_lock_password_expire_option: ACCOUNT_SYM UNLOCK_SYM  */
#line 8398 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 34268 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1052: /* opt_account_lock_password_expire_option: ACCOUNT_SYM LOCK_SYM  */
#line 8404 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 34278 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1053: /* opt_account_lock_password_expire_option: PASSWORD EXPIRE_SYM  */
#line 8410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 34290 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1054: /* opt_account_lock_password_expire_option: PASSWORD EXPIRE_SYM INTERVAL_SYM real_ulong_num DAY_SYM  */
#line 8418 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 34309 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1055: /* opt_account_lock_password_expire_option: PASSWORD EXPIRE_SYM NEVER_SYM  */
#line 8433 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 34321 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1056: /* opt_account_lock_password_expire_option: PASSWORD EXPIRE_SYM DEFAULT_SYM  */
#line 8441 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 34333 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1057: /* opt_account_lock_password_expire_option: PASSWORD HISTORY_SYM real_ulong_num  */
#line 8449 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 34344 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1058: /* opt_account_lock_password_expire_option: PASSWORD HISTORY_SYM DEFAULT_SYM  */
#line 8456 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 34355 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1059: /* opt_account_lock_password_expire_option: PASSWORD REUSE_SYM INTERVAL_SYM real_ulong_num DAY_SYM  */
#line 8463 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 34366 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1060: /* opt_account_lock_password_expire_option: PASSWORD REUSE_SYM INTERVAL_SYM DEFAULT_SYM  */
#line 8470 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 34377 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1061: /* opt_account_lock_password_expire_option: PASSWORD REQUIRE_SYM CURRENT_SYM  */
#line 8477 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 34387 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1062: /* opt_account_lock_password_expire_option: PASSWORD REQUIRE_SYM CURRENT_SYM DEFAULT_SYM  */
#line 8483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 34397 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1063: /* opt_account_lock_password_expire_option: PASSWORD REQUIRE_SYM CURRENT_SYM OPTIONAL_SYM  */
#line 8489 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 34407 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1064: /* opt_account_lock_password_expire_option: FAILED_LOGIN_ATTEMPTS_SYM real_ulong_num  */
#line 8495 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 34423 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1065: /* opt_account_lock_password_expire_option: PASSWORD_LOCK_TIME_SYM real_ulong_num  */
#line 8507 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 34439 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1066: /* opt_account_lock_password_expire_option: PASSWORD_LOCK_TIME_SYM UNBOUNDED_SYM  */
#line 8519 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 34449 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1067: /* connect_options: %empty  */
#line 8527 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 34455 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1069: /* connect_option_list: connect_option_list connect_option  */
#line 8532 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                             {}
#line 34461 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1070: /* connect_option_list: connect_option  */
#line 8533 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         {}
#line 34467 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1071: /* connect_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 8538 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 34477 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1072: /* connect_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 8544 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 34487 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1073: /* connect_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 8550 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 34497 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1074: /* connect_option: MAX_USER_CONNECTIONS_SYM ulong_num  */
#line 8556 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 34507 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1075: /* user_func: USER '(' ')'  */
#line 8565 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 34521 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1076: /* ev_alter_on_schedule_completion: %empty  */
#line 8577 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34527 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1077: /* ev_alter_on_schedule_completion: ON_SYM SCHEDULE_SYM ev_schedule_time  */
#line 8578 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                               { (yyval.num)= 1; }
#line 34533 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1078: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 8579 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 34539 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1079: /* ev_alter_on_schedule_completion: ON_SYM SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 8580 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                                { (yyval.num)= 1; }
#line 34545 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1080: /* opt_ev_rename_to: %empty  */
#line 8584 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34551 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1081: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 8586 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 34564 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1082: /* opt_ev_sql_stmt: %empty  */
#line 8597 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0;}
#line 34570 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1083: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 8598 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 34576 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1084: /* ident_or_empty: %empty  */
#line 8602 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str).str= nullptr; (yyval.lexer.lex_str).length= 0; }
#line 34582 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1085: /* ident_or_empty: ident  */
#line 8603 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 34588 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1087: /* opt_alter_table_actions: opt_alter_command_list alter_table_partition_options  */
#line 8609 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == nullptr)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == nullptr)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34604 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1088: /* standalone_alter_table_action: standalone_alter_commands  */
#line 8624 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34613 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1089: /* standalone_alter_table_action: alter_commands_modifier_list ',' standalone_alter_commands  */
#line 8629 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 34622 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1090: /* alter_table_partition_options: partition_clause  */
#line 8637 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyloc), (yyvsp[0].partition_clause));
          }
#line 34630 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1091: /* alter_table_partition_options: REMOVE_SYM PARTITIONING_SYM  */
#line 8641 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning((yyloc));
          }
#line 34638 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1092: /* opt_alter_command_list: %empty  */
#line 8648 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= nullptr;
          }
#line 34647 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1093: /* opt_alter_command_list: alter_commands_modifier_list  */
#line 8653 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= nullptr;
          }
#line 34656 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1095: /* opt_alter_command_list: alter_commands_modifier_list ',' alter_list  */
#line 8659 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 34666 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1096: /* standalone_alter_commands: DISCARD_SYM TABLESPACE_SYM  */
#line 8668 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace((yyloc));
          }
#line 34674 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1097: /* standalone_alter_commands: IMPORT TABLESPACE_SYM  */
#line 8672 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace((yyloc));
          }
#line 34682 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1098: /* standalone_alter_commands: ADD PARTITION_SYM opt_no_write_to_binlog  */
#line 8683 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyloc), (yyvsp[0].num));
          }
#line 34690 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1099: /* standalone_alter_commands: ADD PARTITION_SYM opt_no_write_to_binlog '(' part_def_list ')'  */
#line 8687 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyloc), (yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 34698 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1100: /* standalone_alter_commands: ADD PARTITION_SYM opt_no_write_to_binlog PARTITIONS_SYM real_ulong_num  */
#line 8691 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyloc), (yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 34706 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1101: /* standalone_alter_commands: DROP PARTITION_SYM ident_string_list  */
#line 8695 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition((yyloc), *(yyvsp[0].string_list));
          }
#line 34714 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1102: /* standalone_alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8700 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34722 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1103: /* standalone_alter_commands: OPTIMIZE PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8705 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34730 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1104: /* standalone_alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 8710 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 34738 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1105: /* standalone_alter_commands: CHECK_SYM PARTITION_SYM all_or_alt_part_name_list opt_mi_check_types  */
#line 8714 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyloc), (yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34747 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1106: /* standalone_alter_commands: REPAIR PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list opt_mi_repair_types  */
#line 8721 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyloc), (yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34756 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1107: /* standalone_alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 8726 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyloc), (yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 34764 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1108: /* standalone_alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 8730 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyloc), (yyvsp[0].string_list));
          }
#line 34772 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1109: /* standalone_alter_commands: REORGANIZE_SYM PARTITION_SYM opt_no_write_to_binlog  */
#line 8734 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyloc), (yyvsp[0].num));
          }
#line 34780 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1110: /* standalone_alter_commands: REORGANIZE_SYM PARTITION_SYM opt_no_write_to_binlog ident_string_list INTO '(' part_def_list ')'  */
#line 8739 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyloc), (yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 34788 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1111: /* standalone_alter_commands: EXCHANGE_SYM PARTITION_SYM ident WITH TABLE_SYM table_ident opt_with_validation  */
#line 8744 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyloc), (yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 34796 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1112: /* standalone_alter_commands: DISCARD_SYM PARTITION_SYM all_or_alt_part_name_list TABLESPACE_SYM  */
#line 8749 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyloc), (yyvsp[-1].string_list));
          }
#line 34804 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1113: /* standalone_alter_commands: IMPORT PARTITION_SYM all_or_alt_part_name_list TABLESPACE_SYM  */
#line 8754 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyloc), (yyvsp[-1].string_list));
          }
#line 34812 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1114: /* standalone_alter_commands: SECONDARY_LOAD_SYM opt_use_partition  */
#line 8758 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load((yyloc), (yyvsp[0].string_list));
          }
#line 34820 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1115: /* standalone_alter_commands: SECONDARY_UNLOAD_SYM opt_use_partition  */
#line 8762 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload((yyloc), (yyvsp[0].string_list));
          }
#line 34828 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1116: /* opt_with_validation: %empty  */
#line 8768 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 34834 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1118: /* with_validation: WITH VALIDATION_SYM  */
#line 8774 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 34842 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1119: /* with_validation: WITHOUT_SYM VALIDATION_SYM  */
#line 8778 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 34850 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1120: /* all_or_alt_part_name_list: ALL  */
#line 8784 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.string_list)= nullptr; }
#line 34856 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1122: /* alter_list: alter_list_item  */
#line 8794 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == nullptr || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34867 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1123: /* alter_list: alter_list ',' alter_list_item  */
#line 8801 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 34876 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1124: /* alter_list: alter_list ',' alter_commands_modifier  */
#line 8806 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34884 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1125: /* alter_list: create_table_options_space_separated  */
#line 8810 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 34893 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1126: /* alter_list: alter_list ',' create_table_options_space_separated  */
#line 8815 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 34905 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1128: /* alter_commands_modifier_list: alter_commands_modifier_list ',' alter_commands_modifier  */
#line 8827 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 34914 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1129: /* alter_list_item: ADD opt_column ident field_def opt_references opt_place  */
#line 8835 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 34922 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1130: /* alter_list_item: ADD opt_column '(' table_element_list ')'  */
#line 8839 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyloc), (yyvsp[-1].table_element_list));
          }
#line 34930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1131: /* alter_list_item: ADD table_constraint_def  */
#line 8843 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyloc), (yyvsp[0].table_constraint_def));
          }
#line 34938 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1132: /* alter_list_item: CHANGE opt_column ident ident field_def opt_place  */
#line 8847 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34946 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1133: /* alter_list_item: MODIFY_SYM opt_column ident field_def opt_place  */
#line 8851 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 34954 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1134: /* alter_list_item: DROP opt_column ident opt_restrict  */
#line 8855 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyloc), (yyvsp[-1].lexer.lex_str).str);
          }
#line 34963 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1135: /* alter_list_item: DROP FOREIGN KEY_SYM ident  */
#line 8860 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 34971 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1136: /* alter_list_item: DROP PRIMARY_SYM KEY_SYM  */
#line 8864 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyloc), primary_key_name);
          }
#line 34979 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1137: /* alter_list_item: DROP key_or_index ident  */
#line 8868 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 34987 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1138: /* alter_list_item: DROP CHECK_SYM ident  */
#line 8872 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 34995 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1139: /* alter_list_item: DROP CONSTRAINT ident  */
#line 8876 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyloc), (yyvsp[0].lexer.lex_str).str);
          }
#line 35003 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1140: /* alter_list_item: DISABLE_SYM KEYS  */
#line 8880 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys((yyloc), false);
          }
#line 35011 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1141: /* alter_list_item: ENABLE_SYM KEYS  */
#line 8884 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys((yyloc), true);
          }
#line 35019 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1142: /* alter_list_item: ALTER opt_column ident SET_SYM DEFAULT_SYM signed_literal_or_null  */
#line 8888 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 35027 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1143: /* alter_list_item: ALTER opt_column ident SET_SYM DEFAULT_SYM '(' expr ')'  */
#line 8892 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 35035 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1144: /* alter_list_item: ALTER opt_column ident DROP DEFAULT_SYM  */
#line 8896 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyloc), (yyvsp[-2].lexer.lex_str).str, nullptr);
          }
#line 35043 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1145: /* alter_list_item: ALTER opt_column ident SET_SYM visibility  */
#line 8901 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 35051 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1146: /* alter_list_item: ALTER INDEX_SYM ident visibility  */
#line 8905 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 35059 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1147: /* alter_list_item: ALTER CHECK_SYM ident constraint_enforcement  */
#line 8909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 35067 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1148: /* alter_list_item: ALTER CONSTRAINT ident constraint_enforcement  */
#line 8913 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyloc), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 35075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1149: /* alter_list_item: RENAME opt_to table_ident  */
#line 8917 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyloc), (yyvsp[0].table));
          }
#line 35083 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1150: /* alter_list_item: RENAME key_or_index ident TO_SYM ident  */
#line 8921 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 35091 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1151: /* alter_list_item: RENAME COLUMN_SYM ident TO_SYM ident  */
#line 8925 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 35099 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1152: /* alter_list_item: CONVERT_SYM TO_SYM character_set charset_name opt_collate  */
#line 8929 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 35107 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1153: /* alter_list_item: CONVERT_SYM TO_SYM character_set DEFAULT_SYM opt_collate  */
#line 8933 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                (yyloc),
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 35118 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1154: /* alter_list_item: FORCE_SYM  */
#line 8940 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force((yyloc));
          }
#line 35126 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1155: /* alter_list_item: ORDER_SYM BY alter_order_list  */
#line 8944 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyloc), (yyvsp[0].order_list));
          }
#line 35134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1156: /* alter_commands_modifier: alter_algorithm_option  */
#line 8951 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1157: /* alter_commands_modifier: alter_lock_option  */
#line 8956 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35152 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1158: /* alter_commands_modifier: with_validation  */
#line 8961 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 35161 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1159: /* opt_index_lock_and_algorithm: %empty  */
#line 8968 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.opt_index_lock_and_algorithm).init(); }
#line 35167 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1160: /* opt_index_lock_and_algorithm: alter_lock_option  */
#line 8970 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35176 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1161: /* opt_index_lock_and_algorithm: alter_algorithm_option  */
#line 8975 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35185 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1162: /* opt_index_lock_and_algorithm: alter_lock_option alter_algorithm_option  */
#line 8980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 35195 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1163: /* opt_index_lock_and_algorithm: alter_algorithm_option alter_lock_option  */
#line 8986 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 35205 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1164: /* alter_algorithm_option: ALGORITHM_SYM opt_equal alter_algorithm_option_value  */
#line 8994 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                               { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 35211 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1165: /* alter_algorithm_option_value: DEFAULT_SYM  */
#line 8999 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 35219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1166: /* alter_algorithm_option_value: ident  */
#line 9003 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 35237 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1167: /* alter_lock_option: LOCK_SYM opt_equal alter_lock_option_value  */
#line 9019 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                     { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 35243 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1168: /* alter_lock_option_value: DEFAULT_SYM  */
#line 9024 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 35251 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1169: /* alter_lock_option_value: ident  */
#line 9028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 35269 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1172: /* opt_ignore: %empty  */
#line 9049 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= false; }
#line 35275 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1173: /* opt_ignore: IGNORE_SYM  */
#line 9050 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 35281 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1174: /* opt_restrict: %empty  */
#line 9054 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 35287 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1175: /* opt_restrict: RESTRICT  */
#line 9055 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 35293 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1176: /* opt_restrict: CASCADE  */
#line 9056 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.opt_restrict)= DROP_CASCADE; }
#line 35299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1177: /* opt_place: %empty  */
#line 9060 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= nullptr; }
#line 35305 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1178: /* opt_place: AFTER_SYM ident  */
#line 9061 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 35311 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1179: /* opt_place: FIRST_SYM  */
#line 9062 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.c_str)= first_keyword; }
#line 35317 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1180: /* opt_to: %empty  */
#line 9066 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35323 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1181: /* opt_to: TO_SYM  */
#line 9067 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35329 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1182: /* opt_to: EQ  */
#line 9068 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
             {}
#line 35335 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1183: /* opt_to: AS  */
#line 9069 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
             {}
#line 35341 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1185: /* group_replication: STOP_SYM GROUP_REPLICATION  */
#line 9075 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 35350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1186: /* group_replication_start: START_SYM GROUP_REPLICATION  */
#line 9083 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex = Lex;
            lex->replica_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 35360 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1194: /* group_replication_user: USER EQ TEXT_STRING_sys_nonewline  */
#line 9108 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35373 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1195: /* group_replication_password: PASSWORD EQ TEXT_STRING_sys_nonewline  */
#line 9120 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35387 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1196: /* group_replication_plugin_auth: DEFAULT_AUTH_SYM EQ TEXT_STRING_sys_nonewline  */
#line 9133 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 35395 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1197: /* stop_replica_stmt: STOP_SYM REPLICA_SYM opt_replica_thread_option_list opt_channel  */
#line 9139 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLICA_STOP;
            lex->type = 0;
            lex->replica_thd_opt= (yyvsp[-1].num);
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 35408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1198: /* $@43: %empty  */
#line 9151 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->replica_connection.reset();
            lex->sql_command = SQLCOM_REPLICA_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->replica_thd_opt= (yyvsp[0].num);
          }
#line 35423 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1199: /* $@44: %empty  */
#line 9164 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->replica_thd_opt & REPLICA_SQL) == REPLICA_SQL &&
                (Lex->replica_thd_opt & REPLICA_IO) != REPLICA_IO &&
                (Lex->replica_connection.user ||
                 Lex->replica_connection.password ||
                 Lex->replica_connection.plugin_auth ||
                 Lex->replica_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_REPLICA, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 35444 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1200: /* start_replica_stmt: START_SYM REPLICA_SYM opt_replica_thread_option_list $@43 opt_replica_until opt_user_option opt_password_option opt_default_auth_option opt_plugin_dir_option $@44 opt_channel  */
#line 9181 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 35453 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1201: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 9189 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 35470 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1202: /* opt_start_transaction_option_list: %empty  */
#line 9205 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 35478 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1203: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 9209 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35486 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1204: /* start_transaction_option_list: start_transaction_option  */
#line 9216 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35494 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1205: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 9220 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35502 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1206: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 9227 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 35510 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1207: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 9231 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 35518 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1208: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 9235 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 35526 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1209: /* opt_user_option: %empty  */
#line 9241 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35532 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1210: /* opt_user_option: USER EQ TEXT_STRING_sys  */
#line 9243 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 35540 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1211: /* opt_password_option: %empty  */
#line 9249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35546 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1212: /* opt_password_option: PASSWORD EQ TEXT_STRING_sys  */
#line 9251 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 35555 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1213: /* opt_default_auth_option: %empty  */
#line 9257 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35561 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1214: /* opt_default_auth_option: DEFAULT_AUTH_SYM EQ TEXT_STRING_sys  */
#line 9259 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 35569 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1215: /* opt_plugin_dir_option: %empty  */
#line 9265 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 35575 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1216: /* opt_plugin_dir_option: PLUGIN_DIR_SYM EQ TEXT_STRING_sys  */
#line 9267 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->replica_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 35583 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1217: /* opt_replica_thread_option_list: %empty  */
#line 9274 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 35591 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1218: /* opt_replica_thread_option_list: replica_thread_option_list  */
#line 9278 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1219: /* replica_thread_option_list: replica_thread_option  */
#line 9285 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 35607 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1220: /* replica_thread_option_list: replica_thread_option_list ',' replica_thread_option  */
#line 9289 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 35615 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1221: /* replica_thread_option: SQL_THREAD  */
#line 9296 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= REPLICA_SQL;
          }
#line 35623 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1222: /* replica_thread_option: RELAY_THREAD  */
#line 9300 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= REPLICA_IO;
          }
#line 35631 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1223: /* opt_replica_until: %empty  */
#line 9307 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->mi.replica_until= false;
          }
#line 35640 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1224: /* opt_replica_until: UNTIL_SYM replica_until  */
#line 9312 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_REPLICA_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.replica_until= true;
          }
#line 35666 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1227: /* replica_until: SQL_BEFORE_GTIDS EQ TEXT_STRING_sys  */
#line 9339 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_SOURCE_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 35675 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1228: /* replica_until: SQL_AFTER_GTIDS EQ TEXT_STRING_sys  */
#line 9344 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_SOURCE_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 35684 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1229: /* replica_until: SQL_AFTER_MTS_GAPS  */
#line 9349 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->mi.until_after_gaps= true;
          }
#line 35692 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1230: /* checksum: CHECKSUM_SYM table_or_tables table_list opt_checksum_type  */
#line 9356 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 35707 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1231: /* opt_checksum_type: %empty  */
#line 9369 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= 0; }
#line 35713 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1232: /* opt_checksum_type: QUICK  */
#line 9370 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= T_QUICK; }
#line 35719 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1233: /* opt_checksum_type: EXTENDED_SYM  */
#line 9371 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= T_EXTEND; }
#line 35725 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1234: /* repair_table_stmt: REPAIR opt_no_write_to_binlog table_or_tables table_list opt_mi_repair_types  */
#line 9377 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1235: /* opt_mi_repair_types: %empty  */
#line 9384 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35740 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1238: /* mi_repair_types: mi_repair_types mi_repair_type  */
#line 9391 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35749 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1239: /* mi_repair_type: QUICK  */
#line 9398 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 35755 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1240: /* mi_repair_type: EXTENDED_SYM  */
#line 9399 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 35761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1241: /* mi_repair_type: USE_FRM  */
#line 9400 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 35767 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1242: /* analyze_table_stmt: ANALYZE_SYM opt_no_write_to_binlog table_or_tables table_list opt_histogram  */
#line 9406 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].histogram).param) {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, (yyvsp[0].histogram).param->num_buckets,
                                                (yyvsp[0].histogram).columns, (yyvsp[0].histogram).param->data, (yyvsp[0].histogram).param->auto_update);
            } else {
              (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                                (yyvsp[0].histogram).command, 0,
                                                (yyvsp[0].histogram).columns, {nullptr, 0}, false);
            }
          }
#line 35783 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1243: /* opt_histogram_auto_update: %empty  */
#line 9421 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= false; }
#line 35789 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1244: /* opt_histogram_auto_update: MANUAL_SYM UPDATE_SYM  */
#line 9422 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= false; }
#line 35795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1245: /* opt_histogram_auto_update: AUTO_SYM UPDATE_SYM  */
#line 9423 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.is_not_empty)= true; }
#line 35801 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1246: /* opt_histogram_num_buckets: %empty  */
#line 9428 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS;
          }
#line 35809 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1247: /* opt_histogram_num_buckets: WITH NUM BUCKETS_SYM  */
#line 9432 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }
            (yyval.num)= num;
          }
#line 35827 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1248: /* opt_histogram_update_param: opt_histogram_num_buckets opt_histogram_auto_update  */
#line 9449 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.histogram_param).num_buckets= (yyvsp[-1].num);
            (yyval.histogram_param).auto_update= (yyvsp[0].is_not_empty);
            (yyval.histogram_param).data= { nullptr, 0 };
          }
#line 35837 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1249: /* opt_histogram_update_param: USING DATA_SYM TEXT_STRING_literal  */
#line 9455 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.histogram_param).num_buckets= 0;
            (yyval.histogram_param).auto_update= false;
            (yyval.histogram_param).data= (yyvsp[0].lexer.lex_str);
          }
#line 35847 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1250: /* opt_histogram: %empty  */
#line 9464 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).param= nullptr;
          }
#line 35857 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1251: /* opt_histogram: UPDATE_SYM HISTOGRAM_SYM ON_SYM ident_string_list opt_histogram_update_param  */
#line 9470 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).param= NEW_PTN YYSTYPE::Histogram_param((yyvsp[0].histogram_param));
            if ((yyval.histogram).param == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 35870 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1252: /* opt_histogram: DROP HISTOGRAM_SYM ON_SYM ident_string_list  */
#line 9479 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).param = nullptr;
          }
#line 35881 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1253: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 9489 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 35890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1254: /* check_table_stmt: CHECK_SYM table_or_tables table_list opt_mi_check_types  */
#line 9497 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 35899 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1255: /* opt_mi_check_types: %empty  */
#line 9504 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 35905 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1258: /* mi_check_types: mi_check_type mi_check_types  */
#line 9511 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 35914 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1259: /* mi_check_type: QUICK  */
#line 9519 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 35920 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1260: /* mi_check_type: FAST_SYM  */
#line 9521 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 35926 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1261: /* mi_check_type: MEDIUM_SYM  */
#line 9523 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 35932 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1262: /* mi_check_type: EXTENDED_SYM  */
#line 9525 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 35938 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1263: /* mi_check_type: CHANGED  */
#line 9527 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 35944 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1264: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 9529 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 35950 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1265: /* optimize_table_stmt: OPTIMIZE opt_no_write_to_binlog table_or_tables table_list  */
#line 9534 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt((yyloc), YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 35958 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1266: /* opt_no_write_to_binlog: %empty  */
#line 9540 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 35964 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1267: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 9541 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 35970 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1268: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 9542 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 35976 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1269: /* $@45: %empty  */
#line 9547 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 35984 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1270: /* rename: RENAME table_or_tables $@45 table_to_table_list  */
#line 9551 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 35990 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1271: /* rename: RENAME USER rename_list  */
#line 9553 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1272: /* rename_list: user TO_SYM user  */
#line 9560 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 36007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1273: /* rename_list: rename_list ',' user TO_SYM user  */
#line 9565 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 36016 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1276: /* table_to_table: table_ident TO_SYM table_ident  */
#line 9578 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),nullptr,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),nullptr,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 36030 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1277: /* keycache_stmt: CACHE_SYM INDEX_SYM keycache_list IN_SYM key_cache_name  */
#line 9591 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 36038 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1278: /* keycache_stmt: CACHE_SYM INDEX_SYM table_ident adm_partition opt_cache_key_list IN_SYM key_cache_name  */
#line 9596 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt((yyloc), YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 36047 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1279: /* keycache_list: assign_to_keycache  */
#line 9604 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == nullptr || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 36057 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1280: /* keycache_list: keycache_list ',' assign_to_keycache  */
#line 9610 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 36067 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1281: /* assign_to_keycache: table_ident opt_cache_key_list  */
#line 9619 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyloc), (yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 36075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1282: /* key_cache_name: ident  */
#line 9625 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36081 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1283: /* key_cache_name: DEFAULT_SYM  */
#line 9626 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.lex_cstr) = default_key_cache_base; }
#line 36087 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1284: /* preload_stmt: LOAD INDEX_SYM INTO CACHE_SYM table_ident adm_partition opt_cache_key_list opt_ignore_leaves  */
#line 9632 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 36095 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1285: /* preload_stmt: LOAD INDEX_SYM INTO CACHE_SYM preload_list  */
#line 9636 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 36103 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1286: /* preload_list: preload_keys  */
#line 9643 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 36113 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1287: /* preload_list: preload_list ',' preload_keys  */
#line 9649 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == nullptr || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 36123 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1288: /* preload_keys: table_ident opt_cache_key_list opt_ignore_leaves  */
#line 9658 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyloc), (yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 36131 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1289: /* adm_partition: PARTITION_SYM '(' all_or_alt_part_name_list ')'  */
#line 9665 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyloc), (yyvsp[-1].string_list));
          }
#line 36139 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1290: /* opt_cache_key_list: %empty  */
#line 9671 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.key_usage_list)= nullptr; }
#line 36145 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1291: /* opt_cache_key_list: key_or_index '(' opt_key_usage_list ')'  */
#line 9673 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36154 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1292: /* opt_ignore_leaves: %empty  */
#line 9680 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 36160 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1293: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 9681 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.is_not_empty)= true; }
#line 36166 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1294: /* select_stmt: query_expression  */
#line 9686 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), (yyvsp[0].query_expression));
          }
#line 36174 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1295: /* select_stmt: query_expression locking_clause_list  */
#line 9690 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 36183 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1297: /* select_stmt_with_into: '(' select_stmt_with_into ')'  */
#line 9731 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
            if ((yyval.top_level_node) != nullptr) (yyval.top_level_node)->m_pos = (yyloc);
          }
#line 36192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1298: /* select_stmt_with_into: query_expression into_clause  */
#line 9736 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 36200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1299: /* select_stmt_with_into: query_expression into_clause locking_clause_list  */
#line 9740 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 36208 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1300: /* select_stmt_with_into: query_expression locking_clause_list into_clause  */
#line 9744 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyloc), NEW_PTN PT_locking((yyloc), (yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 36216 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1301: /* query_expression: query_expression_body opt_order_clause opt_limit_clause  */
#line 9785 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyloc), (yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 36224 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1302: /* query_expression: with_clause query_expression_body opt_order_clause opt_limit_clause  */
#line 9792 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyloc), (yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body_opt_parens).body, (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 36232 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1303: /* query_expression_body: query_primary  */
#line 9799 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_primary), false};
          }
#line 36240 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1304: /* query_expression_body: query_expression_parens  */
#line 9803 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {(yyvsp[0].query_expression_body), true};
          }
#line 36248 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1305: /* query_expression_body: query_expression_body UNION_SYM union_option query_expression_body  */
#line 9807 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_union((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36257 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1306: /* query_expression_body: query_expression_body EXCEPT_SYM union_option query_expression_body  */
#line 9812 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_except((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36266 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1307: /* query_expression_body: query_expression_body INTERSECT_SYM union_option query_expression_body  */
#line 9817 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body_opt_parens) = {NEW_PTN PT_intersect((yyloc), (yyvsp[-3].query_expression_body_opt_parens).body, (yyvsp[-1].num), (yyvsp[0].query_expression_body_opt_parens).body, (yyvsp[0].query_expression_body_opt_parens).is_parenthesized),
                  false};
          }
#line 36275 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1308: /* query_expression_parens: '(' query_expression_parens ')'  */
#line 9825 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body);
            if ((yyval.query_expression_body) != nullptr) (yyval.query_expression_body)->m_pos = (yyloc);
          }
#line 36283 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1309: /* query_expression_parens: '(' query_expression_with_opt_locking_clauses ')'  */
#line 9829 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.query_expression_body) = (yyvsp[-1].query_expression_body);
            if ((yyval.query_expression_body) != nullptr) (yyval.query_expression_body)->m_pos = (yyloc);
          }
#line 36291 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1310: /* query_primary: query_specification  */
#line 9836 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 36300 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1311: /* query_primary: table_value_constructor  */
#line 9841 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyloc), (yyvsp[0].values_list));
          }
#line 36308 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1312: /* query_primary: explicit_table  */
#line 9845 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Pass empty position because asterisk is not user-supplied.
            auto item_list= NEW_PTN PT_select_item_list(POS());
            auto asterisk= NEW_PTN Item_asterisk(POS(), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table((yyloc), {}, item_list, (yyvsp[0].table_reference_list));
          }
#line 36322 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1313: /* query_specification: SELECT_SYM select_options select_item_list into_clause opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause opt_qualify_clause  */
#line 9867 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyloc),
                                      (yyvsp[-9].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-8].select_options),  // select_options
                                      (yyvsp[-7].item_list2),  // select_item_list
                                      (yyvsp[-6].into_destination),  // into_clause
                                      (yyvsp[-5].table_reference_list),  // from
                                      (yyvsp[-4].item),  // where
                                      (yyvsp[-3].group),  // group
                                      (yyvsp[-2].item),  // having
                                      (yyvsp[-1].windows),  // windows
                                      (yyvsp[0].item), // qualify
                                      (yylsp[-5]).raw.is_empty()); // implicit FROM
          }
#line 36342 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1314: /* query_specification: SELECT_SYM select_options select_item_list opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause opt_qualify_clause  */
#line 9891 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyloc),
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      nullptr,// no INTO clause
                                      (yyvsp[-5].table_reference_list),  // from
                                      (yyvsp[-4].item),  // where
                                      (yyvsp[-3].group),  // group
                                      (yyvsp[-2].item),  // having
                                      (yyvsp[-1].windows),  // windows
                                      (yyvsp[0].item),  // qualify
                                      (yylsp[-5]).raw.is_empty()); // implicit FROM
          }
#line 36362 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1315: /* opt_from_clause: %empty  */
#line 9909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                         { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 36368 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1317: /* from_clause: FROM from_tables  */
#line 9914 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 36374 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1318: /* from_tables: DUAL_SYM  */
#line 9918 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 36380 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1320: /* table_reference_list: table_reference  */
#line 9924 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36390 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1321: /* table_reference_list: table_reference_list ',' table_reference  */
#line 9930 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1322: /* table_value_constructor: VALUES values_row_list  */
#line 9939 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 36408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1323: /* explicit_table: TABLE_SYM table_ident  */
#line 9946 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyloc), (yyvsp[0].table), nullptr, NULL_CSTR, nullptr, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 36420 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1324: /* select_options: %empty  */
#line 9957 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_options).query_spec_options= 0;
          }
#line 36428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1326: /* select_option_list: select_option_list select_option  */
#line 9965 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 36437 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1328: /* select_option: query_spec_option  */
#line 9974 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 36445 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1329: /* select_option: SQL_NO_CACHE_SYM  */
#line 9978 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 36455 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1330: /* locking_clause_list: locking_clause_list locking_clause  */
#line 9987 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 36465 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1331: /* locking_clause_list: locking_clause  */
#line 9993 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list((yyloc), YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 36475 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1332: /* locking_clause: FOR_SYM lock_strength opt_locked_row_action  */
#line 10002 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyloc), (yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 36483 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1333: /* locking_clause: FOR_SYM lock_strength table_locking_list opt_locked_row_action  */
#line 10006 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyloc), (yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 36491 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1334: /* locking_clause: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM  */
#line 10010 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyloc), Lock_strength::SHARE);
          }
#line 36499 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1335: /* lock_strength: UPDATE_SYM  */
#line 10016 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 36505 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1336: /* lock_strength: SHARE_SYM  */
#line 10017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 36511 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1337: /* table_locking_list: OF_SYM table_alias_ref_list  */
#line 10021 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 36517 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1338: /* opt_locked_row_action: %empty  */
#line 10025 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 36523 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1340: /* locked_row_action: SKIP_SYM LOCKED_SYM  */
#line 10030 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 36529 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1341: /* locked_row_action: NOWAIT_SYM  */
#line 10031 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 36535 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1342: /* select_item_list: select_item_list ',' select_item  */
#line 10036 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 36546 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1343: /* select_item_list: select_item  */
#line 10043 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_select_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 36556 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1344: /* select_item_list: '*'  */
#line 10049 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 36567 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1345: /* select_item: table_wild  */
#line 10058 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.item)= (yyvsp[0].item); }
#line 36573 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1346: /* select_item: expr select_alias  */
#line 10060 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 36581 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1347: /* select_alias: %empty  */
#line 10067 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)=null_lex_str;}
#line 36587 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1348: /* select_alias: AS ident  */
#line 10068 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36593 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1349: /* select_alias: AS TEXT_STRING_validated  */
#line 10069 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1350: /* select_alias: ident  */
#line 10070 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36605 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1351: /* select_alias: TEXT_STRING_validated  */
#line 10071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 36611 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1352: /* optional_braces: %empty  */
#line 10075 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 36617 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1353: /* optional_braces: '(' ')'  */
#line 10076 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  {}
#line 36623 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1354: /* expr: expr or expr  */
#line 10082 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 36634 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1355: /* expr: expr XOR expr  */
#line 10089 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36643 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1356: /* expr: expr and expr  */
#line 10094 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 36654 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1357: /* expr: NOT_SYM expr  */
#line 10101 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36662 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1358: /* expr: bool_pri IS TRUE_SYM  */
#line 10105 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 36670 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1359: /* expr: bool_pri IS not TRUE_SYM  */
#line 10109 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 36678 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1360: /* expr: bool_pri IS FALSE_SYM  */
#line 10113 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 36686 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1361: /* expr: bool_pri IS not FALSE_SYM  */
#line 10117 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 36694 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1362: /* expr: bool_pri IS UNKNOWN_SYM  */
#line 10121 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36702 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1363: /* expr: bool_pri IS not UNKNOWN_SYM  */
#line 10125 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36710 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1365: /* bool_pri: bool_pri IS NULL_SYM  */
#line 10133 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 36718 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1366: /* bool_pri: bool_pri IS not NULL_SYM  */
#line 10137 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 36726 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1367: /* bool_pri: bool_pri comp_op predicate  */
#line 10141 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 36734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1368: /* bool_pri: bool_pri comp_op all_or_any table_subquery  */
#line 10145 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 36751 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1370: /* predicate: bit_expr IN_SYM table_subquery  */
#line 10162 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 36759 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1371: /* predicate: bit_expr not IN_SYM table_subquery  */
#line 10166 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36768 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1372: /* predicate: bit_expr IN_SYM '(' expr ')'  */
#line 10171 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), false, (yyvsp[-1].item));
          }
#line 36776 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1373: /* predicate: bit_expr IN_SYM '(' expr ',' expr_list ')'  */
#line 10175 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].item_list2) == nullptr || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 36787 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1374: /* predicate: bit_expr not IN_SYM '(' expr ')'  */
#line 10182 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), true, (yyvsp[-1].item));
          }
#line 36795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1375: /* predicate: bit_expr not IN_SYM '(' expr ',' expr_list ')'  */
#line 10186 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 36808 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1376: /* predicate: bit_expr MEMBER_SYM opt_of '(' simple_expr ')'  */
#line 10195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 36816 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1377: /* predicate: bit_expr BETWEEN_SYM bit_expr AND_SYM predicate  */
#line 10199 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 36824 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1378: /* predicate: bit_expr not BETWEEN_SYM bit_expr AND_SYM predicate  */
#line 10203 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 36832 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1379: /* predicate: bit_expr SOUNDS_SYM LIKE bit_expr  */
#line 10207 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == nullptr) || (item4 == nullptr))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 36844 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1380: /* predicate: bit_expr LIKE simple_expr  */
#line 10215 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36852 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1381: /* predicate: bit_expr LIKE simple_expr ESCAPE_SYM simple_expr  */
#line 10219 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36860 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1382: /* predicate: bit_expr not LIKE simple_expr  */
#line 10223 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36869 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1383: /* predicate: bit_expr not LIKE simple_expr ESCAPE_SYM simple_expr  */
#line 10228 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 36878 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1384: /* predicate: bit_expr REGEXP bit_expr  */
#line 10233 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto args= NEW_PTN PT_item_list((yyloc));
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 36890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1385: /* predicate: bit_expr not REGEXP bit_expr  */
#line 10241 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto args= NEW_PTN PT_item_list((yyloc));
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 36902 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1389: /* bit_expr: bit_expr '|' bit_expr  */
#line 10258 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36910 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1390: /* bit_expr: bit_expr '&' bit_expr  */
#line 10262 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36918 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1391: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 10266 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36926 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1392: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 10270 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36934 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1393: /* bit_expr: bit_expr '+' bit_expr  */
#line 10274 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36942 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1394: /* bit_expr: bit_expr '-' bit_expr  */
#line 10278 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36950 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1395: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 10282 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36958 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1396: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 10286 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1397: /* bit_expr: bit_expr '*' bit_expr  */
#line 10290 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36974 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1398: /* bit_expr: bit_expr '/' bit_expr  */
#line 10294 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36982 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1399: /* bit_expr: bit_expr '%' bit_expr  */
#line 10298 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36990 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1400: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 10302 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1401: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 10306 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37006 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1402: /* bit_expr: bit_expr '^' bit_expr  */
#line 10310 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37014 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1407: /* and: AND_AND_SYM  */
#line 10324 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
         {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 37022 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1410: /* not2: '!'  */
#line 10335 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
              { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 37028 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1412: /* comp_op: EQ  */
#line 10340 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 37034 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1413: /* comp_op: EQUAL_SYM  */
#line 10341 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 37040 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1414: /* comp_op: GE  */
#line 10342 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 37046 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1415: /* comp_op: GT_SYM  */
#line 10343 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 37052 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1416: /* comp_op: LE  */
#line 10344 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 37058 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1417: /* comp_op: LT  */
#line 10345 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 37064 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1418: /* comp_op: NE  */
#line 10346 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 37070 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1419: /* all_or_any: ALL  */
#line 10350 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 37076 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1420: /* all_or_any: ANY_SYM  */
#line 10351 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 37082 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1426: /* simple_expr: simple_expr COLLATE_SYM ident_or_text  */
#line 10361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            warn_on_deprecated_user_defined_collation(YYTHD, (yyvsp[0].lexer.lex_str));
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 37091 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1428: /* simple_expr: param_marker  */
#line 10366 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].param_marker); }
#line 37097 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1433: /* simple_expr: simple_expr OR_OR_SYM simple_expr  */
#line 10372 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 37105 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1434: /* simple_expr: '+' simple_expr  */
#line 10376 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 37114 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1435: /* simple_expr: '-' simple_expr  */
#line 10381 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 37122 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1436: /* simple_expr: '~' simple_expr  */
#line 10385 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 37130 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1437: /* simple_expr: not2 simple_expr  */
#line 10389 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 37138 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1438: /* simple_expr: row_subquery  */
#line 10393 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 37146 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1439: /* simple_expr: '(' expr ')'  */
#line 10397 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[-1].item);
            if ((yyval.item) != nullptr) (yyval.item)->m_pos = (yyloc);
          }
#line 37155 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1440: /* simple_expr: '(' expr ',' expr_list ')'  */
#line 10402 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 37163 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1441: /* simple_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 10406 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 37171 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1442: /* simple_expr: EXISTS table_subquery  */
#line 10410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 37179 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1443: /* simple_expr: '{' ident expr '}'  */
#line 10414 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 37187 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1444: /* simple_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 10418 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 37195 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1445: /* simple_expr: BINARY_SYM simple_expr  */
#line 10422 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37206 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1446: /* simple_expr: CAST_SYM '(' expr AS cast_type opt_array_cast ')'  */
#line 10429 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37216 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1447: /* simple_expr: CAST_SYM '(' expr AT_SYM LOCAL_SYM AS cast_type opt_array_cast ')'  */
#line 10435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 37224 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1448: /* simple_expr: CAST_SYM '(' expr AT_SYM TIME_SYM ZONE_SYM opt_interval TEXT_STRING_literal AS DATETIME_SYM type_datetime_precision ')'  */
#line 10440 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yyloc), datetime_factor, cast_type, false);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37237 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1449: /* simple_expr: CASE_SYM opt_expr when_list opt_else END  */
#line 10449 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 37245 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1450: /* simple_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 10453 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_cast(YYTHD, (yyloc), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
            if ((yyval.item) == nullptr)
              MYSQL_YYABORT;
          }
#line 37255 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1451: /* simple_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 10459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 37263 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1452: /* simple_expr: DEFAULT_SYM '(' simple_ident ')'  */
#line 10463 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 37271 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1453: /* simple_expr: VALUES '(' simple_ident_nospvar ')'  */
#line 10467 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 37279 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1454: /* simple_expr: INTERVAL_SYM expr interval '+' expr  */
#line 10472 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 37287 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1455: /* simple_expr: simple_ident JSON_SEPARATOR_SYM TEXT_STRING_literal  */
#line 10476 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item_string *path=
              NEW_PTN Item_string((yylsp[0]), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 37298 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1456: /* simple_expr: simple_ident JSON_UNQUOTED_SEPARATOR_SYM TEXT_STRING_literal  */
#line 10483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Item_string *path=
              NEW_PTN Item_string((yylsp[0]), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 37310 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1457: /* opt_array_cast: %empty  */
#line 10493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= false; }
#line 37316 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1458: /* opt_array_cast: ARRAY_SYM  */
#line 10494 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)= true; }
#line 37322 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1459: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10505 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 37330 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1460: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10509 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 37338 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1461: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10513 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 37346 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1462: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10517 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 37354 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1463: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10521 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 37362 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1464: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10525 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 37370 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1465: /* function_call_keyword: INSERT_SYM '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10529 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37378 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1466: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10533 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37386 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1467: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10537 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 37394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1468: /* function_call_keyword: JSON_VALUE_SYM '(' simple_expr ',' text_literal opt_returning_type opt_on_empty_or_error ')'  */
#line 10542 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 37404 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1469: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10548 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1470: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10552 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 37420 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1471: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10556 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 37428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1472: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10560 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37436 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1473: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10564 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 37444 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1474: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10568 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 37452 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1475: /* function_call_keyword: TIMESTAMP_SYM '(' expr ')'  */
#line 10572 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 37460 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1476: /* function_call_keyword: TIMESTAMP_SYM '(' expr ',' expr ')'  */
#line 10576 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 37468 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1477: /* function_call_keyword: TRIM '(' expr ')'  */
#line 10580 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 37477 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1478: /* function_call_keyword: TRIM '(' LEADING expr FROM expr ')'  */
#line 10585 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 37486 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1479: /* function_call_keyword: TRIM '(' TRAILING expr FROM expr ')'  */
#line 10590 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 37495 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1480: /* function_call_keyword: TRIM '(' BOTH expr FROM expr ')'  */
#line 10595 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 37503 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1481: /* function_call_keyword: TRIM '(' LEADING FROM expr ')'  */
#line 10599 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 37511 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1482: /* function_call_keyword: TRIM '(' TRAILING FROM expr ')'  */
#line 10603 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 37519 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1483: /* function_call_keyword: TRIM '(' BOTH FROM expr ')'  */
#line 10607 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 37527 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1484: /* function_call_keyword: TRIM '(' expr FROM expr ')'  */
#line 10611 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 37536 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1485: /* function_call_keyword: USER '(' ')'  */
#line 10616 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 37544 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1486: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10620 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 37552 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1487: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10639 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 37560 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1488: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10643 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37568 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1489: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10647 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 37576 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1490: /* function_call_nonkeyword: CURTIME func_datetime_precision  */
#line 10651 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37584 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1491: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10656 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 37592 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1492: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10661 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37600 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1493: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10665 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 37608 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1494: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10669 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 37616 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1495: /* function_call_nonkeyword: LOG_SYM '(' expr ')'  */
#line 10673 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_log((yyloc), (yyvsp[-1].item));
          }
#line 37624 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1496: /* function_call_nonkeyword: LOG_SYM '(' expr ',' expr ')'  */
#line 10677 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_log((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37632 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1497: /* function_call_nonkeyword: now  */
#line 10681 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37641 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1498: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10686 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 37649 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1499: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10690 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 37657 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1500: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10694 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 37665 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1501: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ',' expr ')'  */
#line 10698 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37673 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1502: /* function_call_nonkeyword: SUBSTRING '(' expr ',' expr ')'  */
#line 10702 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37681 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1503: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr FOR_SYM expr ')'  */
#line 10706 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37689 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1504: /* function_call_nonkeyword: SUBSTRING '(' expr FROM expr ')'  */
#line 10710 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37697 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1505: /* function_call_nonkeyword: SYSDATE func_datetime_precision  */
#line 10714 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37706 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1506: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10719 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 37714 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1507: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10723 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 37722 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1508: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10727 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 37730 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1509: /* function_call_nonkeyword: UTC_TIME_SYM func_datetime_precision  */
#line 10731 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37738 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1510: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM func_datetime_precision  */
#line 10735 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 37746 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1511: /* opt_returning_type: %empty  */
#line 10746 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 37754 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1512: /* opt_returning_type: RETURNING_SYM cast_type  */
#line 10750 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 37762 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1513: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10761 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 37770 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1514: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10765 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 37778 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1515: /* function_call_conflict: COALESCE '(' expr_list ')'  */
#line 10769 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 37786 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1516: /* function_call_conflict: COLLATION_SYM '(' expr ')'  */
#line 10773 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 37794 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1517: /* function_call_conflict: DATABASE '(' ')'  */
#line 10777 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 37802 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1518: /* function_call_conflict: IF '(' expr ',' expr ',' expr ')'  */
#line 10781 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37810 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1519: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ')'  */
#line 10785 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37818 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1520: /* function_call_conflict: FORMAT_SYM '(' expr ',' expr ',' expr ')'  */
#line 10789 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37826 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1521: /* function_call_conflict: MICROSECOND_SYM '(' expr ')'  */
#line 10793 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 37834 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1522: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10797 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37842 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1523: /* function_call_conflict: QUARTER_SYM '(' expr ')'  */
#line 10801 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 37850 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1524: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10805 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37858 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1525: /* function_call_conflict: REPLACE_SYM '(' expr ',' expr ',' expr ')'  */
#line 10809 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37866 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1526: /* function_call_conflict: REVERSE_SYM '(' expr ')'  */
#line 10813 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 37874 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1527: /* function_call_conflict: ROW_COUNT_SYM '(' ')'  */
#line 10817 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 37882 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1528: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 10821 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 37890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1529: /* function_call_conflict: WEEK_SYM '(' expr ')'  */
#line 10825 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), nullptr);
          }
#line 37898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1530: /* function_call_conflict: WEEK_SYM '(' expr ',' expr ')'  */
#line 10829 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 37906 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1531: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ')'  */
#line 10833 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 37914 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1532: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_num_codepoints ')'  */
#line 10837 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 37922 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1533: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY_SYM ws_num_codepoints ')'  */
#line 10841 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 37930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1534: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 10845 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 37938 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1536: /* geometry_function: GEOMETRYCOLLECTION_SYM '(' opt_expr_list ')'  */
#line 10853 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 37948 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1537: /* geometry_function: LINESTRING_SYM '(' expr_list ')'  */
#line 10859 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 37958 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1538: /* geometry_function: MULTILINESTRING_SYM '(' expr_list ')'  */
#line 10865 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 37968 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1539: /* geometry_function: MULTIPOINT_SYM '(' expr_list ')'  */
#line 10871 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 37978 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1540: /* geometry_function: MULTIPOLYGON_SYM '(' expr_list ')'  */
#line 10877 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 37988 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1541: /* geometry_function: POINT_SYM '(' expr ',' expr ')'  */
#line 10883 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37996 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1542: /* geometry_function: POLYGON_SYM '(' expr_list ')'  */
#line 10887 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 38006 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1543: /* function_call_generic: IDENT_sys '(' opt_udf_expr_list ')'  */
#line 10905 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 38014 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1544: /* function_call_generic: ident '.' ident '(' opt_expr_list ')'  */
#line 10909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 38022 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1545: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 10916 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 38028 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1546: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 10918 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 38042 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1547: /* opt_natural_language_mode: %empty  */
#line 10930 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= FT_NL; }
#line 38048 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1548: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 10931 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 38054 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1549: /* opt_query_expansion: %empty  */
#line 10935 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0;         }
#line 38060 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1550: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 10936 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 38066 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1551: /* opt_udf_expr_list: %empty  */
#line 10940 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.item_list2)= nullptr; }
#line 38072 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1552: /* opt_udf_expr_list: udf_expr_list  */
#line 10941 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38078 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1553: /* udf_expr_list: udf_expr  */
#line 10946 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38088 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1554: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 10952 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            // This will override earlier udf_expr_list, until
            // we get the whole location.
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 38101 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1555: /* udf_expr: expr select_alias  */
#line 10964 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 38109 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1558: /* sum_expr: AVG_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 10976 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 38117 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1559: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')' opt_windowing_clause  */
#line 10980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 38125 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1560: /* sum_expr: BIT_AND_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 10984 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38133 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1561: /* sum_expr: BIT_OR_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 10988 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38141 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1562: /* sum_expr: JSON_ARRAYAGG '(' in_sum_expr ')' opt_windowing_clause  */
#line 10992 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 38155 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1563: /* sum_expr: JSON_OBJECTAGG '(' in_sum_expr ',' in_sum_expr ')' opt_windowing_clause  */
#line 11002 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 38169 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1564: /* sum_expr: ST_COLLECT_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11012 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 38177 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1565: /* sum_expr: ST_COLLECT_SYM '(' DISTINCT in_sum_expr ')' opt_windowing_clause  */
#line 11016 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 38185 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1566: /* sum_expr: BIT_XOR_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11020 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38193 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1567: /* sum_expr: COUNT_SYM '(' opt_all '*' ')' opt_windowing_clause  */
#line 11024 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 38201 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1568: /* sum_expr: COUNT_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38209 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1569: /* sum_expr: COUNT_SYM '(' DISTINCT expr_list ')' opt_windowing_clause  */
#line 11032 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 38217 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1570: /* sum_expr: MIN_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11036 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38225 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1571: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')' opt_windowing_clause  */
#line 11045 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38233 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1572: /* sum_expr: MAX_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11049 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38241 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1573: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')' opt_windowing_clause  */
#line 11053 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38249 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1574: /* sum_expr: STD_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11057 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 38257 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1575: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11061 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 38265 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1576: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11065 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 38273 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1577: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11069 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 38281 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1578: /* sum_expr: SUM_SYM '(' in_sum_expr ')' opt_windowing_clause  */
#line 11073 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 38289 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1579: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')' opt_windowing_clause  */
#line 11077 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 38297 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1580: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct expr_list opt_gorder_clause opt_gconcat_separator ')' opt_windowing_clause  */
#line 11084 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 38305 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1581: /* sampling_method: SYSTEM_SYM  */
#line 11090 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.tablesample_type)= tablesample_type::SYSTEM_TABLESAMPLE_TYPE;    }
#line 38311 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1582: /* sampling_method: BERNOULLI_SYM  */
#line 11091 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.tablesample_type)= tablesample_type::BERNOULLI_TABLESAMPLE_TYPE; }
#line 38317 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1583: /* sampling_percentage: NUM_literal  */
#line 11095 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.item) = (yyvsp[0].item_num); }
#line 38323 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1584: /* sampling_percentage: '@' ident_or_text  */
#line 11096 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 38329 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1585: /* sampling_percentage: param_marker  */
#line 11097 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.item) = (yyvsp[0].param_marker); }
#line 38335 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1586: /* opt_tablesample_clause: %empty  */
#line 11102 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* empty */ { (yyval.tablesample)= nullptr; }
          }
#line 38343 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1587: /* opt_tablesample_clause: TABLESAMPLE_SYM sampling_method '(' sampling_percentage ')'  */
#line 11106 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.tablesample)= NEW_PTN PT_tablesample((yyloc),(yyvsp[-3].tablesample_type),(yyvsp[-1].item));
          }
#line 38351 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1588: /* window_func_call: ROW_NUMBER_SYM '(' ')' windowing_clause  */
#line 11113 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 38359 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1589: /* window_func_call: RANK_SYM '(' ')' windowing_clause  */
#line 11117 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 38367 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1590: /* window_func_call: DENSE_RANK_SYM '(' ')' windowing_clause  */
#line 11121 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 38375 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1591: /* window_func_call: CUME_DIST_SYM '(' ')' windowing_clause  */
#line 11125 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 38383 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1592: /* window_func_call: PERCENT_RANK_SYM '(' ')' windowing_clause  */
#line 11129 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 38391 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1593: /* window_func_call: NTILE_SYM '(' stable_integer ')' windowing_clause  */
#line 11133 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 38399 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1594: /* window_func_call: LEAD_SYM '(' expr opt_lead_lag_info ')' opt_null_treatment windowing_clause  */
#line 11137 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-4]), (yylsp[-3]));
            if (args == nullptr || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != nullptr && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != nullptr && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38414 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1595: /* window_func_call: LAG_SYM '(' expr opt_lead_lag_info ')' opt_null_treatment windowing_clause  */
#line 11148 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-4]), (yylsp[-3]));
            if (args == nullptr || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != nullptr && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != nullptr && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38429 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1596: /* window_func_call: FIRST_VALUE_SYM '(' expr ')' opt_null_treatment windowing_clause  */
#line 11159 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38437 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1597: /* window_func_call: LAST_VALUE_SYM '(' expr ')' opt_null_treatment windowing_clause  */
#line 11163 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38445 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1598: /* window_func_call: NTH_VALUE_SYM '(' expr ',' simple_expr ')' opt_from_first_last opt_null_treatment windowing_clause  */
#line 11167 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            PT_item_list *args= NEW_PTN PT_item_list((yylsp[-6]), (yylsp[-4]));
            if (args == nullptr ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 38458 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1599: /* opt_lead_lag_info: %empty  */
#line 11179 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lead_lag_info).offset= nullptr;
            (yyval.lead_lag_info).default_value= nullptr;
          }
#line 38467 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1600: /* opt_lead_lag_info: ',' stable_integer opt_ll_default  */
#line 11184 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 38476 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1601: /* stable_integer: int64_literal  */
#line 11195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.item) = (yyvsp[0].item_num); }
#line 38482 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1603: /* param_or_var: param_marker  */
#line 11200 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].param_marker); }
#line 38488 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1604: /* param_or_var: ident  */
#line 11201 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 38494 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1605: /* param_or_var: '@' ident_or_text  */
#line 11202 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 38500 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1606: /* opt_ll_default: %empty  */
#line 11207 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= nullptr;
          }
#line 38508 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1607: /* opt_ll_default: ',' expr  */
#line 11211 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 38516 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1608: /* opt_null_treatment: %empty  */
#line 11218 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_NONE;
          }
#line 38524 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1609: /* opt_null_treatment: RESPECT_SYM NULLS_SYM  */
#line 11222 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 38532 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1610: /* opt_null_treatment: IGNORE_SYM NULLS_SYM  */
#line 11226 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 38540 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1611: /* opt_from_first_last: %empty  */
#line 11234 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 38548 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1612: /* opt_from_first_last: FROM FIRST_SYM  */
#line 11238 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 38556 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1613: /* opt_from_first_last: FROM LAST_SYM  */
#line 11242 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 38564 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1614: /* opt_windowing_clause: %empty  */
#line 11249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= nullptr;
          }
#line 38572 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1615: /* opt_windowing_clause: windowing_clause  */
#line 11253 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38580 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1616: /* windowing_clause: OVER_SYM window_name_or_spec  */
#line 11260 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38588 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1617: /* window_name_or_spec: window_name  */
#line 11267 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= NEW_PTN PT_window((yyloc), (yyvsp[0].item_string));
          }
#line 38596 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1618: /* window_name_or_spec: window_spec  */
#line 11271 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
          }
#line 38604 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1619: /* window_name: ident  */
#line 11278 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 38612 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1620: /* window_spec: '(' window_spec_details ')'  */
#line 11285 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[-1].window);
            if ((yyval.window) != nullptr) (yyval.window)->m_pos = (yyloc);
          }
#line 38621 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1621: /* window_spec_details: opt_existing_window_name opt_partition_clause opt_window_order_by_clause opt_window_frame_clause  */
#line 11296 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
           {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(POS(), WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border(POS(), (yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(POS(), start_bound, end_bound);
               frame= NEW_PTN PT_frame(POS(), WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window(POS(), (yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 38639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1622: /* opt_existing_window_name: %empty  */
#line 11313 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_string)= nullptr;
          }
#line 38647 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1623: /* opt_existing_window_name: window_name  */
#line 11317 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 38655 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1624: /* opt_partition_clause: %empty  */
#line 11324 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= nullptr;
          }
#line 38663 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1625: /* opt_partition_clause: PARTITION_SYM BY group_list  */
#line 11328 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[0].order_list);
            if ((yyval.order_list) != nullptr) (yyval.order_list)->m_pos = (yyloc);
          }
#line 38672 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1626: /* opt_window_order_by_clause: %empty  */
#line 11336 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= nullptr;
          }
#line 38680 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1627: /* opt_window_order_by_clause: ORDER_SYM BY order_list  */
#line 11340 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[0].order_list);
            if ((yyval.order_list) != nullptr) (yyval.order_list)->m_pos = (yyloc);
          }
#line 38689 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1628: /* opt_window_frame_clause: %empty  */
#line 11348 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window_frame)= nullptr;
          }
#line 38697 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1629: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 11354 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window_frame)= NEW_PTN PT_frame((yyloc), (yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 38705 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1630: /* window_frame_extent: window_frame_start  */
#line 11361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto end_bound= NEW_PTN PT_border((yyloc), WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyloc), (yyvsp[0].bound), end_bound);
          }
#line 38714 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1631: /* window_frame_extent: window_frame_between  */
#line 11366 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 38722 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1632: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 11373 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_UNBOUNDED_PRECEDING);
          }
#line 38730 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1633: /* window_frame_start: NUM_literal PRECEDING_SYM  */
#line 11377 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 38738 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1634: /* window_frame_start: param_marker PRECEDING_SYM  */
#line 11381 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 38746 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1635: /* window_frame_start: INTERVAL_SYM expr interval PRECEDING_SYM  */
#line 11385 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38754 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1636: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 11389 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_CURRENT_ROW);
          }
#line 38762 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1637: /* window_frame_between: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 11396 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyloc), (yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 38770 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1638: /* window_frame_bound: window_frame_start  */
#line 11403 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 38778 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1639: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 11407 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_UNBOUNDED_FOLLOWING);
          }
#line 38786 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1640: /* window_frame_bound: NUM_literal FOLLOWING_SYM  */
#line 11411 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 38794 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1641: /* window_frame_bound: param_marker FOLLOWING_SYM  */
#line 11415 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 38802 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1642: /* window_frame_bound: INTERVAL_SYM expr interval FOLLOWING_SYM  */
#line 11419 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bound)= NEW_PTN PT_border((yyloc), WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 38810 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1643: /* opt_window_frame_exclusion: %empty  */
#line 11426 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= nullptr;
          }
#line 38818 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1644: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 11430 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_CURRENT_ROW);
          }
#line 38826 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1645: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 11434 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_GROUP);
          }
#line 38834 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1646: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 11438 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_TIES);
          }
#line 38842 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1647: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_SYM  */
#line 11442 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= NEW_PTN PT_exclusion((yyloc), WFX_NO_OTHERS);
          }
#line 38849 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1648: /* window_frame_units: ROWS_SYM  */
#line 11447 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_ROWS; }
#line 38855 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1649: /* window_frame_units: RANGE_SYM  */
#line 11448 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_RANGE; }
#line 38861 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1650: /* window_frame_units: GROUPS_SYM  */
#line 11449 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.frame_units)= WFU_GROUPS; }
#line 38867 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1651: /* grouping_operation: GROUPING_SYM '(' expr_list ')'  */
#line 11454 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 38875 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1652: /* in_expression_user_variable_assignment: '@' ident_or_text SET_VAR expr  */
#line 11461 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 38886 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1653: /* rvalue_system_or_user_variable: '@' ident_or_text  */
#line 11471 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 38894 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1654: /* rvalue_system_or_user_variable: '@' '@' opt_rvalue_system_variable_type rvalue_system_variable  */
#line 11475 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[-1].var_type),
                                                 (yylsp[0]), (yyvsp[0].bipartite_name).prefix, (yyvsp[0].bipartite_name).name);
          }
#line 38903 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1655: /* opt_distinct: %empty  */
#line 11482 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 38909 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1656: /* opt_distinct: DISTINCT  */
#line 11483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 38915 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1657: /* opt_gconcat_separator: %empty  */
#line 11488 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 38925 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1658: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 38931 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1659: /* opt_gorder_clause: %empty  */
#line 11497 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.order_list)= nullptr; }
#line 38937 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1660: /* opt_gorder_clause: ORDER_SYM BY gorder_list  */
#line 11498 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 38943 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1661: /* gorder_list: gorder_list ',' order_expr  */
#line 11503 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            // This will override earlier list, until
            // we get the whole location.
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 38955 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1662: /* gorder_list: order_expr  */
#line 11511 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_gorder_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 38966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1663: /* in_sum_expr: opt_all expr  */
#line 11521 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 38974 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1664: /* cast_type: BINARY_SYM opt_field_length  */
#line 11528 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= nullptr;
          }
#line 38985 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1665: /* cast_type: CHAR_SYM opt_field_length opt_charset_with_opt_binary  */
#line 11535 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= nullptr;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == nullptr)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 39008 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1666: /* cast_type: nchar opt_field_length  */
#line 11554 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= nullptr;
            warn_about_deprecated_national(YYTHD);
          }
#line 39020 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1667: /* cast_type: SIGNED_SYM  */
#line 11562 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39031 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1668: /* cast_type: SIGNED_SYM INT_SYM  */
#line 11569 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39042 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1669: /* cast_type: UNSIGNED_SYM  */
#line 11576 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39053 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1670: /* cast_type: UNSIGNED_SYM INT_SYM  */
#line 11583 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39064 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1671: /* cast_type: DATE_SYM  */
#line 11590 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39075 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1672: /* cast_type: YEAR_SYM  */
#line 11597 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39086 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1673: /* cast_type: TIME_SYM type_datetime_precision  */
#line 11604 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 39097 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1674: /* cast_type: DATETIME_SYM type_datetime_precision  */
#line 11611 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 39108 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1675: /* cast_type: DECIMAL_SYM float_options  */
#line 11618 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 39119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1676: /* cast_type: JSON_SYM  */
#line 11625 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= nullptr;
            (yyval.cast_type).length= nullptr;
            (yyval.cast_type).dec= nullptr;
          }
#line 39130 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1677: /* cast_type: real_type  */
#line 11632 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39142 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1678: /* cast_type: FLOAT_SYM standard_float_options  */
#line 11640 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 39153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1679: /* cast_type: POINT_SYM  */
#line 11647 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39164 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1680: /* cast_type: LINESTRING_SYM  */
#line 11654 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39175 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1681: /* cast_type: POLYGON_SYM  */
#line 11661 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39186 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1682: /* cast_type: MULTIPOINT_SYM  */
#line 11668 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39197 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1683: /* cast_type: MULTILINESTRING_SYM  */
#line 11675 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39208 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1684: /* cast_type: MULTIPOLYGON_SYM  */
#line 11682 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1685: /* cast_type: GEOMETRYCOLLECTION_SYM  */
#line 11689 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 39230 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1686: /* opt_expr_list: %empty  */
#line 11698 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.item_list2)= nullptr; }
#line 39236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1688: /* expr_list: expr  */
#line 11704 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39246 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1689: /* expr_list: expr_list ',' expr  */
#line 11710 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            // This will override location of earlier list, until we get the
            // whole location.
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 39259 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1690: /* ident_list_arg: ident_list  */
#line 11721 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 39265 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1691: /* ident_list_arg: '(' ident_list ')'  */
#line 11722 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39271 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1692: /* ident_list: simple_ident  */
#line 11727 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 39281 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1693: /* ident_list: ident_list ',' simple_ident  */
#line 11733 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2) == nullptr || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 39292 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1694: /* opt_expr: %empty  */
#line 11742 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.item)= nullptr; }
#line 39298 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1695: /* opt_expr: expr  */
#line 11743 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item); }
#line 39304 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1696: /* opt_else: %empty  */
#line 11747 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item)= nullptr; }
#line 39310 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1697: /* opt_else: ELSE expr  */
#line 11748 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item); }
#line 39316 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1698: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11753 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 39328 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1699: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11761 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 39338 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1700: /* table_reference: table_factor  */
#line 11769 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 39344 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1701: /* table_reference: joined_table  */
#line 11770 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 39350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1702: /* table_reference: '{' OJ_SYM esc_table_reference '}'  */
#line 11772 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 39364 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1703: /* esc_table_reference: table_factor  */
#line 11784 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 39370 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1704: /* esc_table_reference: joined_table  */
#line 11785 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 39376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1705: /* joined_table: table_reference inner_join_type table_reference ON_SYM expr  */
#line 11867 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyloc), (yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 39384 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1706: /* joined_table: table_reference inner_join_type table_reference USING '(' using_list ')'  */
#line 11872 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 39392 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1707: /* joined_table: table_reference outer_join_type table_reference ON_SYM expr  */
#line 11876 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyloc), (yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 39400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1708: /* joined_table: table_reference outer_join_type table_reference USING '(' using_list ')'  */
#line 11880 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 39408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1709: /* joined_table: table_reference inner_join_type table_reference  */
#line 11885 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto this_cross_join= NEW_PTN PT_cross_join((yyloc), (yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), nullptr);

            if ((yyvsp[0].table_reference) == nullptr)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 39421 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1710: /* joined_table: table_reference natural_join_type table_factor  */
#line 11894 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyloc), (yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 39429 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1711: /* natural_join_type: NATURAL opt_inner JOIN_SYM  */
#line 11900 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 39435 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1712: /* natural_join_type: NATURAL RIGHT opt_outer JOIN_SYM  */
#line 11901 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 39441 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1713: /* natural_join_type: NATURAL LEFT opt_outer JOIN_SYM  */
#line 11902 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 39447 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1714: /* inner_join_type: JOIN_SYM  */
#line 11906 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39453 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1715: /* inner_join_type: INNER_SYM JOIN_SYM  */
#line 11907 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39459 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1716: /* inner_join_type: CROSS JOIN_SYM  */
#line 11908 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_INNER; }
#line 39465 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1717: /* inner_join_type: STRAIGHT_JOIN  */
#line 11909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 39471 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1718: /* outer_join_type: LEFT opt_outer JOIN_SYM  */
#line 11912 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_LEFT; }
#line 39477 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1719: /* outer_join_type: RIGHT opt_outer JOIN_SYM  */
#line 11913 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                           { (yyval.join_type)= JTT_RIGHT; }
#line 39483 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1724: /* opt_use_partition: %empty  */
#line 11931 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.string_list)= nullptr; }
#line 39489 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1726: /* use_partition: PARTITION_SYM '(' using_list ')'  */
#line 11937 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 39497 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1729: /* table_factor: derived_table  */
#line 11967 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 39503 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1730: /* table_factor: joined_table_parens  */
#line 11969 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyloc), (yyvsp[0].join_table)); }
#line 39509 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1731: /* table_factor: table_reference_list_parens  */
#line 11971 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyloc), (yyvsp[0].table_reference_list)); }
#line 39515 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1732: /* table_factor: table_function  */
#line 11972 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 39521 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1733: /* table_reference_list_parens: '(' table_reference_list_parens ')'  */
#line 11976 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                              { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 39527 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1734: /* table_reference_list_parens: '(' table_reference_list ',' table_reference ')'  */
#line 11978 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 39537 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1735: /* single_table_parens: '(' single_table_parens ')'  */
#line 11986 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 39543 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1736: /* single_table_parens: '(' single_table ')'  */
#line 11987 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 39549 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1737: /* single_table: table_ident opt_use_partition opt_table_alias opt_key_definition opt_tablesample_clause  */
#line 11992 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyloc), (yyvsp[-4].table), (yyvsp[-3].string_list), (yyvsp[-2].lex_cstr), (yyvsp[-1].key_usage_list), (yyvsp[0].tablesample));
          }
#line 39557 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1738: /* joined_table_parens: '(' joined_table_parens ')'  */
#line 11998 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39563 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1739: /* joined_table_parens: '(' joined_table ')'  */
#line 11999 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 39569 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1740: /* derived_table: table_subquery opt_table_alias opt_derived_column_list  */
#line 12004 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyloc), false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39586 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1741: /* derived_table: LATERAL_SYM table_subquery opt_table_alias opt_derived_column_list  */
#line 12017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table((yyloc), true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 39598 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1742: /* table_function: JSON_TABLE_SYM '(' expr ',' text_literal columns_clause ')' opt_table_alias  */
#line 12029 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyloc), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 39614 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1743: /* columns_clause: COLUMNS '(' columns_list ')'  */
#line 12044 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 39622 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1744: /* columns_list: jt_column  */
#line 12051 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == nullptr || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39632 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1745: /* columns_list: columns_list ',' jt_column  */
#line 12057 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 39642 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1746: /* jt_column: ident FOR_SYM ORDINALITY_SYM  */
#line 12066 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyloc), (yyvsp[-2].lexer.lex_str));
          }
#line 39650 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1747: /* jt_column: ident type opt_collate jt_column_type PATH_SYM text_literal opt_on_empty_or_error_json_table  */
#line 12071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path((yyloc), std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 39663 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1748: /* jt_column: NESTED_SYM PATH_SYM text_literal columns_clause  */
#line 12080 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyloc), (yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 39671 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1749: /* jt_column_type: %empty  */
#line 12087 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 39679 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1750: /* jt_column_type: EXISTS  */
#line 12091 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 39687 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1751: /* opt_on_empty_or_error: %empty  */
#line 12101 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39696 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1752: /* opt_on_empty_or_error: on_empty  */
#line 12106 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39705 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1753: /* opt_on_empty_or_error: on_error  */
#line 12111 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 39714 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1754: /* opt_on_empty_or_error: on_empty on_error  */
#line 12116 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 39723 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1755: /* opt_on_empty_or_error_json_table: opt_on_empty_or_error  */
#line 12124 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 39729 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1756: /* opt_on_empty_or_error_json_table: on_error on_empty  */
#line 12126 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 39741 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1757: /* on_empty: json_on_response ON_SYM EMPTY_SYM  */
#line 12136 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39747 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1758: /* on_error: json_on_response ON_SYM ERROR_SYM  */
#line 12139 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 39753 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1759: /* json_on_response: ERROR_SYM  */
#line 12143 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 39761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1760: /* json_on_response: NULL_SYM  */
#line 12147 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 39769 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1761: /* json_on_response: DEFAULT_SYM signed_literal  */
#line 12151 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 39777 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1762: /* index_hint_clause: %empty  */
#line 12158 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.num)= INDEX_HINT_MASK_ALL;
          }
#line 39785 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1763: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12161 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 39791 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1764: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12162 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 39797 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1765: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12163 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 39803 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1766: /* index_hint_type: FORCE_SYM  */
#line 12167 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 39809 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1767: /* index_hint_type: IGNORE_SYM  */
#line 12168 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 39815 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1768: /* index_hint_definition: index_hint_type key_or_index index_hint_clause '(' key_usage_list ')'  */
#line 12174 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39824 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1769: /* index_hint_definition: USE_SYM key_or_index index_hint_clause '(' opt_key_usage_list ')'  */
#line 12180 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 39833 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1771: /* index_hints_list: index_hints_list index_hint_definition  */
#line 12189 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 39842 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1772: /* opt_index_hints_list: %empty  */
#line 12196 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.key_usage_list)= nullptr; }
#line 39848 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1775: /* opt_key_usage_list: %empty  */
#line 12206 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(nullptr, 0);
            if ((yyval.key_usage_list) == nullptr || hint == nullptr || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 39859 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1777: /* key_usage_element: ident  */
#line 12217 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == nullptr)
              MYSQL_YYABORT;
          }
#line 39869 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1778: /* key_usage_element: PRIMARY_SYM  */
#line 12223 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == nullptr)
              MYSQL_YYABORT;
          }
#line 39879 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1779: /* key_usage_list: key_usage_element  */
#line 12232 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == nullptr || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39889 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1780: /* key_usage_list: key_usage_list ',' key_usage_element  */
#line 12238 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 39898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1782: /* ident_string_list: ident  */
#line 12250 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == nullptr || s == nullptr || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 39911 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1783: /* ident_string_list: ident_string_list ',' ident  */
#line 12259 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == nullptr || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 39924 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1784: /* interval: interval_time_stamp  */
#line 12270 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 {}
#line 39930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1785: /* interval: DAY_HOUR_SYM  */
#line 12271 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 39936 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1786: /* interval: DAY_MICROSECOND_SYM  */
#line 12272 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 39942 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1787: /* interval: DAY_MINUTE_SYM  */
#line 12273 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 39948 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1788: /* interval: DAY_SECOND_SYM  */
#line 12274 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 39954 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1789: /* interval: HOUR_MICROSECOND_SYM  */
#line 12275 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 39960 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1790: /* interval: HOUR_MINUTE_SYM  */
#line 12276 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 39966 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1791: /* interval: HOUR_SECOND_SYM  */
#line 12277 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 39972 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1792: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12278 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 39978 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1793: /* interval: MINUTE_SECOND_SYM  */
#line 12279 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 39984 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1794: /* interval: SECOND_MICROSECOND_SYM  */
#line 12280 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 39990 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1795: /* interval: YEAR_MONTH_SYM  */
#line 12281 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 39996 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1796: /* interval_time_stamp: DAY_SYM  */
#line 12285 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 40002 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1797: /* interval_time_stamp: WEEK_SYM  */
#line 12286 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 40008 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1798: /* interval_time_stamp: HOUR_SYM  */
#line 12287 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 40014 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1799: /* interval_time_stamp: MINUTE_SYM  */
#line 12288 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 40020 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1800: /* interval_time_stamp: MONTH_SYM  */
#line 12289 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 40026 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1801: /* interval_time_stamp: QUARTER_SYM  */
#line 12290 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 40032 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1802: /* interval_time_stamp: SECOND_SYM  */
#line 12291 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 40038 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1803: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12292 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 40044 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1804: /* interval_time_stamp: YEAR_SYM  */
#line 12293 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 40050 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1805: /* date_time_type: DATE_SYM  */
#line 12297 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 40056 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1806: /* date_time_type: TIME_SYM  */
#line 12298 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 40062 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1807: /* date_time_type: TIMESTAMP_SYM  */
#line 12299 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 40068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1808: /* date_time_type: DATETIME_SYM  */
#line 12300 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 40074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1811: /* opt_table_alias: %empty  */
#line 12309 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_cstr) = NULL_CSTR; }
#line 40080 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1812: /* opt_table_alias: opt_as ident  */
#line 12310 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40086 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1815: /* opt_where_clause: %empty  */
#line 12319 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.item) = nullptr; }
#line 40092 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1817: /* where_clause: WHERE expr  */
#line 12324 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 40098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1818: /* opt_having_clause: %empty  */
#line 12328 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.item)= nullptr; }
#line 40104 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1819: /* opt_having_clause: HAVING expr  */
#line 12330 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 40112 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1820: /* opt_qualify_clause: %empty  */
#line 12336 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.item)= nullptr; }
#line 40118 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1821: /* opt_qualify_clause: QUALIFY_SYM expr  */
#line 12338 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= new PTI_qualify((yyloc), (yyvsp[0].item));
          }
#line 40126 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1822: /* with_clause: WITH with_list  */
#line 12345 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyloc), (yyvsp[0].with_list), false);
          }
#line 40134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1823: /* with_clause: WITH RECURSIVE_SYM with_list  */
#line 12349 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyloc), (yyvsp[0].with_list), true);
          }
#line 40142 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1824: /* with_list: with_list ',' common_table_expr  */
#line 12356 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
            (yyval.with_list)->m_pos = (yyloc);
          }
#line 40152 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1825: /* with_list: common_table_expr  */
#line 12362 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.with_list)= NEW_PTN PT_with_list((yyloc), YYTHD->mem_root);
            if ((yyval.with_list) == nullptr || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 40162 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1826: /* common_table_expr: ident opt_derived_column_list AS table_subquery  */
#line 12371 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == nullptr)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyloc), (yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == nullptr)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 40179 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1827: /* opt_derived_column_list: %empty  */
#line 12387 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 40192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1828: /* opt_derived_column_list: '(' simple_ident_list ')'  */
#line 12396 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 40200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1829: /* simple_ident_list: ident  */
#line 12403 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 40210 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1830: /* simple_ident_list: simple_ident_list ',' ident  */
#line 12409 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 40220 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1831: /* opt_window_clause: %empty  */
#line 12418 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.windows)= nullptr;
          }
#line 40228 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1832: /* opt_window_clause: WINDOW_SYM window_definition_list  */
#line 12422 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 40236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1833: /* window_definition_list: window_definition  */
#line 12429 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.windows)= NEW_PTN PT_window_list((yyloc));
            if ((yyval.windows) == nullptr || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 40246 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1834: /* window_definition_list: window_definition_list ',' window_definition  */
#line 12435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
            (yyval.windows)->m_pos = (yyloc);
          }
#line 40257 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1835: /* window_definition: window_name AS window_spec  */
#line 12445 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyval.window)->m_pos = (yyloc);
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 40269 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1836: /* opt_group_clause: %empty  */
#line 12459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.group)= nullptr; }
#line 40275 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1837: /* opt_group_clause: GROUP_SYM BY group_list olap_opt  */
#line 12461 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 40283 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1838: /* opt_group_clause: GROUP_SYM BY ROLLUP_SYM '(' group_list ')'  */
#line 12465 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), ROLLUP_TYPE);
          }
#line 40291 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1839: /* opt_group_clause: GROUP_SYM BY CUBE_SYM '(' group_list ')'  */
#line 12469 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.group)= NEW_PTN PT_group((yyloc), (yyvsp[-1].order_list), CUBE_TYPE);
          }
#line 40299 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1840: /* group_list: group_list ',' grouping_expr  */
#line 12476 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40309 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1841: /* group_list: grouping_expr  */
#line 12482 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40320 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1842: /* olap_opt: %empty  */
#line 12492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 40326 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1843: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.olap_type)= ROLLUP_TYPE; }
#line 40332 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1844: /* alter_order_list: alter_order_list ',' alter_order_item  */
#line 12509 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40342 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1845: /* alter_order_list: alter_order_item  */
#line 12515 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40353 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1846: /* alter_order_item: simple_ident_nospvar opt_ordering_direction  */
#line 12525 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 40361 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1847: /* opt_order_clause: %empty  */
#line 12531 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.order)= nullptr; }
#line 40367 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1849: /* order_clause: ORDER_SYM BY order_list  */
#line 12537 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order)= NEW_PTN PT_order((yyloc), (yyvsp[0].order_list));
          }
#line 40375 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1850: /* order_list: order_list ',' order_expr  */
#line 12544 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->m_pos = (yyloc);
          }
#line 40385 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1851: /* order_list: order_expr  */
#line 12550 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_list)= NEW_PTN PT_order_list((yyloc));
            if ((yyval.order_list) == nullptr)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 40396 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1852: /* opt_ordering_direction: %empty  */
#line 12559 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 40402 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1854: /* ordering_direction: ASC  */
#line 12564 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.order_direction)= ORDER_ASC; }
#line 40408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1855: /* ordering_direction: DESC  */
#line 12565 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.order_direction)= ORDER_DESC; }
#line 40414 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1856: /* opt_limit_clause: %empty  */
#line 12569 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.limit_clause)= nullptr; }
#line 40420 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1858: /* limit_clause: LIMIT limit_options  */
#line 12575 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyloc), (yyvsp[0].limit_options));
          }
#line 40428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1859: /* limit_options: limit_option  */
#line 12582 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= nullptr;
            (yyval.limit_options).is_offset_first= false;
          }
#line 40438 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1860: /* limit_options: limit_option ',' limit_option  */
#line 12588 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 40448 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1861: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12594 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 40458 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1862: /* limit_option: ident  */
#line 12603 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40466 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1863: /* limit_option: param_marker  */
#line 12607 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 40474 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1864: /* limit_option: ULONGLONG_NUM  */
#line 12611 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40482 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1865: /* limit_option: LONG_NUM  */
#line 12615 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40490 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1866: /* limit_option: NUM  */
#line 12619 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 40498 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1867: /* opt_simple_limit: %empty  */
#line 12625 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.item)= nullptr; }
#line 40504 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1868: /* opt_simple_limit: LIMIT limit_option  */
#line 12626 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.item)= (yyvsp[0].item); }
#line 40510 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1869: /* ulong_num: NUM  */
#line 12630 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40516 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1870: /* ulong_num: HEX_NUM  */
#line 12631 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40522 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1871: /* ulong_num: LONG_NUM  */
#line 12632 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40528 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1872: /* ulong_num: ULONGLONG_NUM  */
#line 12633 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40534 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1873: /* ulong_num: DECIMAL_NUM  */
#line 12634 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40540 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1874: /* ulong_num: FLOAT_NUM  */
#line 12635 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40546 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1875: /* real_ulong_num: NUM  */
#line 12639 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40552 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1876: /* real_ulong_num: HEX_NUM  */
#line 12640 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40558 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1877: /* real_ulong_num: LONG_NUM  */
#line 12641 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40564 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1878: /* real_ulong_num: ULONGLONG_NUM  */
#line 12642 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40570 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1879: /* real_ulong_num: dec_num_error  */
#line 12643 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 40576 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1880: /* ulonglong_num: NUM  */
#line 12647 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40582 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1881: /* ulonglong_num: ULONGLONG_NUM  */
#line 12648 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40588 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1882: /* ulonglong_num: LONG_NUM  */
#line 12649 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40594 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1883: /* ulonglong_num: DECIMAL_NUM  */
#line 12650 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40600 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1884: /* ulonglong_num: FLOAT_NUM  */
#line 12651 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40606 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1885: /* real_ulonglong_num: NUM  */
#line 12655 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40612 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1886: /* real_ulonglong_num: HEX_NUM  */
#line 12656 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 16); }
#line 40618 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1887: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 12657 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40624 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1888: /* real_ulonglong_num: LONG_NUM  */
#line 12658 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 40630 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1889: /* real_ulonglong_num: dec_num_error  */
#line 12659 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 40636 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1890: /* dec_num_error: dec_num  */
#line 12664 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 40642 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1893: /* select_var_list: select_var_list ',' select_var_ident  */
#line 12674 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == nullptr || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40652 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1894: /* select_var_list: select_var_ident  */
#line 12680 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == nullptr || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 40662 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1895: /* select_var_ident: '@' ident_or_text  */
#line 12689 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40670 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1896: /* select_var_ident: ident_or_text  */
#line 12693 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40678 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1897: /* into_clause: INTO into_destination  */
#line 12700 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 40686 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1898: /* into_destination: OUTFILE TEXT_STRING_filesystem opt_load_data_charset opt_field_term opt_line_term  */
#line 12709 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 40694 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1899: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 12713 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 40702 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1900: /* into_destination: select_var_list  */
#line 12716 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 40708 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1901: /* do_stmt: DO_SYM select_item_list  */
#line 12725 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt((yyloc), SQLCOM_DO,
                  NEW_PTN PT_query_expression((yyloc),
                    NEW_PTN PT_query_specification((yyloc), {}, (yyvsp[0].item_list2))));
          }
#line 40718 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1902: /* drop_table_stmt: DROP opt_temporary table_or_tables if_exists table_list opt_restrict  */
#line 12738 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_table();
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
          }
#line 40739 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1903: /* drop_index_stmt: DROP INDEX_SYM ident ON_SYM table_ident opt_index_lock_and_algorithm  */
#line 12758 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt((yyloc), YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 40749 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1904: /* drop_database_stmt: DROP DATABASE if_exists ident  */
#line 12767 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
            MAKE_CMD_DDL_DUMMY();
          }
#line 40761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1905: /* drop_function_stmt: DROP FUNCTION_SYM if_exists ident '.' ident  */
#line 12778 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == nullptr)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40789 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1906: /* drop_function_stmt: DROP FUNCTION_SYM if_exists ident  */
#line 12802 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == nullptr)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40826 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1907: /* drop_resource_group_stmt: DROP RESOURCE_SYM GROUP_SYM ident opt_force  */
#line 12838 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group((yyloc), to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 40834 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1908: /* drop_procedure_stmt: DROP PROCEDURE_SYM if_exists sp_name  */
#line 12845 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            MAKE_CMD_DDL_DUMMY();
          }
#line 40851 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1909: /* drop_user_stmt: DROP USER if_exists user_list  */
#line 12861 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
             MAKE_CMD_DCL_DUMMY();
          }
#line 40863 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1910: /* drop_view_stmt: DROP VIEW_SYM if_exists table_list opt_restrict  */
#line 12872 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40880 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1911: /* drop_event_stmt: DROP EVENT_SYM if_exists sp_name  */
#line 12888 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
            MAKE_CMD_DDL_DUMMY();
          }
#line 40891 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1912: /* drop_trigger_stmt: DROP TRIGGER_SYM if_exists sp_name  */
#line 12898 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 40903 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1913: /* drop_tablespace_stmt: DROP TABLESPACE_SYM ident opt_drop_ts_options  */
#line 12909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40925 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1914: /* drop_undo_tablespace_stmt: DROP UNDO_SYM TABLESPACE_SYM ident opt_undo_tablespace_options  */
#line 12929 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40948 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1915: /* drop_logfile_stmt: DROP LOGFILE_SYM GROUP_SYM ident opt_drop_ts_options  */
#line 12951 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == nullptr)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != nullptr)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 40971 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1916: /* drop_server_stmt: DROP SERVER_SYM if_exists ident_or_text  */
#line 12974 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 40980 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1917: /* drop_srs_stmt: DROP SPATIAL_SYM REFERENCE_SYM SYSTEM_SYM if_exists real_ulonglong_num  */
#line 12982 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyloc), (yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 40988 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1918: /* drop_role_stmt: DROP ROLE_SYM if_exists role_list  */
#line 12989 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyloc), (yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 40996 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1919: /* table_list: table_ident  */
#line 12996 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 41006 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1920: /* table_list: table_list ',' table_ident  */
#line 13002 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == nullptr || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 41016 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1921: /* table_alias_ref_list: table_ident_opt_wild  */
#line 13011 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 41026 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1922: /* table_alias_ref_list: table_alias_ref_list ',' table_ident_opt_wild  */
#line 13017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 41036 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1923: /* if_exists: %empty  */
#line 13025 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41042 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1924: /* if_exists: IF EXISTS  */
#line 13026 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 41048 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1925: /* opt_ignore_unknown_user: %empty  */
#line 13030 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41054 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1926: /* opt_ignore_unknown_user: IGNORE_SYM UNKNOWN_SYM USER  */
#line 13031 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.num)= 1; }
#line 41060 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1927: /* opt_temporary: %empty  */
#line 13035 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 41066 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1928: /* opt_temporary: TEMPORARY  */
#line 13036 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 41072 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1929: /* opt_drop_ts_options: %empty  */
#line 13040 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
               { (yyval.ts_options)= nullptr; }
#line 41078 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1931: /* drop_ts_option_list: drop_ts_option  */
#line 13046 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == nullptr || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 41088 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1932: /* drop_ts_option_list: drop_ts_option_list opt_comma drop_ts_option  */
#line 13052 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 41098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1935: /* insert_stmt: INSERT_SYM insert_lock_option opt_ignore opt_INTO table_ident opt_use_partition insert_from_constructor opt_values_reference opt_insert_update_list  */
#line 13077 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  nullptr,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 41114 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1936: /* insert_stmt: INSERT_SYM insert_lock_option opt_ignore opt_INTO table_ident opt_use_partition SET_SYM update_list opt_values_reference opt_insert_update_list  */
#line 13098 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if (one_row == nullptr || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  nullptr,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 41129 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1937: /* insert_stmt: INSERT_SYM insert_lock_option opt_ignore opt_INTO table_ident opt_use_partition insert_query_expression opt_insert_update_list  */
#line 13116 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, nullptr,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, nullptr,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 41141 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1938: /* replace_stmt: REPLACE_SYM replace_lock_option opt_INTO table_ident opt_use_partition insert_from_constructor  */
#line 13132 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  nullptr,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1939: /* replace_stmt: REPLACE_SYM replace_lock_option opt_INTO table_ident opt_use_partition SET_SYM update_list  */
#line 13146 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if (one_row == nullptr || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  nullptr,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41168 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1940: /* replace_stmt: REPLACE_SYM replace_lock_option opt_INTO table_ident opt_use_partition insert_query_expression  */
#line 13162 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_insert((yyloc), true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, nullptr,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, nullptr,
                                  nullptr, nullptr);
          }
#line 41180 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1941: /* insert_lock_option: %empty  */
#line 13172 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 41186 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1942: /* insert_lock_option: LOW_PRIORITY  */
#line 13173 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1943: /* insert_lock_option: DELAYED_SYM  */
#line 13175 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
        {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 41205 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1944: /* insert_lock_option: HIGH_PRIORITY  */
#line 13183 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 41211 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1945: /* replace_lock_option: opt_low_priority  */
#line 13187 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 41217 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1946: /* replace_lock_option: DELAYED_SYM  */
#line 13189 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
        {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 41230 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1949: /* insert_from_constructor: insert_values  */
#line 13206 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // No position because there is no column list.
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list(POS());
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41240 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1950: /* insert_from_constructor: '(' ')' insert_values  */
#line 13212 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list(POS()); // No position.
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41249 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1951: /* insert_from_constructor: '(' insert_columns ')' insert_values  */
#line 13217 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 41258 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1952: /* insert_query_expression: query_expression_with_opt_locking_clauses  */
#line 13225 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list(POS()); // No column list.
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41267 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1953: /* insert_query_expression: '(' ')' query_expression_with_opt_locking_clauses  */
#line 13230 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list(POS()); // No column list.
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41276 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1954: /* insert_query_expression: '(' insert_columns ')' query_expression_with_opt_locking_clauses  */
#line 13235 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_expression_body);
          }
#line 41285 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1955: /* insert_columns: insert_columns ',' insert_column  */
#line 13243 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 41296 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1956: /* insert_columns: insert_column  */
#line 13250 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 41306 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1957: /* insert_values: value_or_values values_list  */
#line 13259 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 41314 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1958: /* query_expression_with_opt_locking_clauses: query_expression  */
#line 13265 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                { (yyval.query_expression_body) = (yyvsp[0].query_expression); }
#line 41320 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1959: /* query_expression_with_opt_locking_clauses: query_expression locking_clause_list  */
#line 13267 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.query_expression_body) = NEW_PTN PT_locking((yyloc), (yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 41328 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1962: /* values_list: values_list ',' row_value  */
#line 13279 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
            (yyval.values_list)->m_pos = (yyloc);
          }
#line 41338 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1963: /* values_list: row_value  */
#line 13285 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.values_list)= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 41348 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1964: /* values_row_list: values_row_list ',' row_value_explicit  */
#line 13295 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
            (yyval.values_list)->m_pos = (yyloc);
          }
#line 41358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1965: /* values_row_list: row_value_explicit  */
#line 13301 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.values_list)= NEW_PTN PT_insert_values_list((yyloc), YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 41368 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1970: /* row_value: '(' opt_values ')'  */
#line 13319 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41374 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1971: /* row_value_explicit: ROW_SYM '(' opt_values ')'  */
#line 13323 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41380 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1972: /* opt_values: %empty  */
#line 13328 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list(POS());
            if ((yyval.item_list2) == nullptr)
              MYSQL_YYABORT;
          }
#line 41390 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1974: /* values: values ',' expr_or_default  */
#line 13338 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 41401 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1975: /* values: expr_or_default  */
#line 13345 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 41411 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1977: /* expr_or_default: DEFAULT_SYM  */
#line 13355 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 41419 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1978: /* opt_values_reference: %empty  */
#line 13362 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = nullptr;
          }
#line 41428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1979: /* opt_values_reference: AS ident opt_derived_column_list  */
#line 13367 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 41442 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1980: /* opt_insert_update_list: %empty  */
#line 13380 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair).value_list= nullptr;
            (yyval.column_value_list_pair).column_list= nullptr;
          }
#line 41451 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1981: /* opt_insert_update_list: ON_SYM DUPLICATE_SYM KEY_SYM UPDATE_SYM update_list  */
#line 13385 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 41459 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1982: /* update_stmt: opt_with_clause UPDATE_SYM opt_low_priority opt_ignore table_reference_list SET_SYM update_list opt_where_clause opt_order_clause opt_simple_limit  */
#line 13403 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_update((yyloc), (yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 41468 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1983: /* opt_with_clause: %empty  */
#line 13410 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.with_clause)= nullptr; }
#line 41474 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1984: /* opt_with_clause: with_clause  */
#line 13411 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 41480 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1985: /* update_list: update_list ',' update_elem  */
#line 13416 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 41491 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1986: /* update_list: update_elem  */
#line 13423 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list((yyloc));
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.column_value_list_pair).column_list == nullptr || (yyval.column_value_list_pair).value_list == nullptr ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 41504 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1987: /* update_elem: simple_ident_nospvar equal expr_or_default  */
#line 13435 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 41513 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1988: /* opt_low_priority: %empty  */
#line 13442 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41519 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1989: /* opt_low_priority: LOW_PRIORITY  */
#line 13443 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41525 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1990: /* delete_stmt: opt_with_clause DELETE_SYM opt_delete_options FROM table_ident opt_table_alias opt_use_partition opt_where_clause opt_order_clause opt_simple_limit  */
#line 13459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 41533 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1991: /* delete_stmt: opt_with_clause DELETE_SYM opt_delete_options table_alias_ref_list FROM table_reference_list opt_where_clause  */
#line 13469 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 41541 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1992: /* delete_stmt: opt_with_clause DELETE_SYM opt_delete_options FROM table_alias_ref_list USING table_reference_list opt_where_clause  */
#line 13480 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyloc), (yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 41549 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1995: /* opt_delete_options: %empty  */
#line 13491 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.num)= 0; }
#line 41555 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1996: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 13492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                               { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 41561 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1997: /* opt_delete_option: QUICK  */
#line 13496 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 41567 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1998: /* opt_delete_option: LOW_PRIORITY  */
#line 13497 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 41573 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 1999: /* opt_delete_option: IGNORE_SYM  */
#line 13498 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 41579 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2000: /* truncate_stmt: TRUNCATE_SYM opt_table table_ident  */
#line 13503 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyloc), (yyvsp[0].table));
          }
#line 41587 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2003: /* opt_profile_defs: %empty  */
#line 13514 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num) = 0; }
#line 41593 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2006: /* profile_defs: profile_defs ',' profile_def  */
#line 13520 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 41599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2007: /* profile_def: CPU_SYM  */
#line 13524 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_CPU; }
#line 41605 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2008: /* profile_def: MEMORY_SYM  */
#line 13525 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 41611 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2009: /* profile_def: BLOCK_SYM IO_SYM  */
#line 13526 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 41617 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2010: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 13527 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 41623 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2011: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 13528 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 41629 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2012: /* profile_def: IPC_SYM  */
#line 13529 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_IPC; }
#line 41635 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2013: /* profile_def: SWAPS_SYM  */
#line 13530 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 41641 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2014: /* profile_def: SOURCE_SYM  */
#line 13531 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 41647 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2015: /* profile_def: ALL  */
#line 13532 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulong_num) = PROFILE_ALL; }
#line 41653 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2016: /* opt_for_query: %empty  */
#line 13536 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.query_id) = 0; }
#line 41659 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2017: /* opt_for_query: FOR_SYM QUERY_SYM NUM  */
#line 13538 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 41670 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2018: /* show_databases_stmt: SHOW DATABASES opt_wild_or_where  */
#line 13550 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
           {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 41678 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2019: /* show_tables_stmt: SHOW opt_show_cmd_type TABLES opt_db opt_wild_or_where  */
#line 13556 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41686 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2020: /* show_triggers_stmt: SHOW opt_full TRIGGERS_SYM opt_db opt_wild_or_where  */
#line 13563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41694 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2021: /* show_events_stmt: SHOW EVENTS_SYM opt_db opt_wild_or_where  */
#line 13570 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41702 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2022: /* show_table_status_stmt: SHOW TABLE_SYM STATUS_SYM opt_db opt_wild_or_where  */
#line 13577 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41710 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2023: /* show_open_tables_stmt: SHOW OPEN_SYM TABLES opt_db opt_wild_or_where  */
#line 13584 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41718 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2024: /* show_plugins_stmt: SHOW PLUGINS_SYM  */
#line 13591 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 41726 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2025: /* show_engine_logs_stmt: SHOW ENGINE_SYM engine_or_all LOGS_SYM  */
#line 13598 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2026: /* show_engine_mutex_stmt: SHOW ENGINE_SYM engine_or_all MUTEX_SYM  */
#line 13605 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41742 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2027: /* show_engine_status_stmt: SHOW ENGINE_SYM engine_or_all STATUS_SYM  */
#line 13612 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 41750 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2028: /* show_columns_stmt: SHOW opt_show_cmd_type COLUMNS from_or_in table_ident opt_db opt_wild_or_where  */
#line 13625 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41762 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2029: /* show_binary_logs_stmt: SHOW BINARY_SYM LOGS_SYM  */
#line 13636 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 41770 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2030: /* show_replicas_stmt: SHOW REPLICAS_SYM  */
#line 13643 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 41778 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2031: /* show_binlog_events_stmt: SHOW BINLOG_SYM EVENTS_SYM opt_binlog_in binlog_from opt_limit_clause  */
#line 13650 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 41786 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2032: /* show_relaylog_events_stmt: SHOW RELAYLOG_SYM EVENTS_SYM opt_binlog_in binlog_from opt_limit_clause opt_channel  */
#line 13658 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 41794 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2033: /* show_keys_stmt: SHOW opt_extended keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 13671 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 41806 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2034: /* show_engines_stmt: SHOW opt_storage ENGINES_SYM  */
#line 13682 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 41814 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2035: /* show_count_warnings_stmt: SHOW COUNT_SYM '(' '*' ')' WARNINGS  */
#line 13689 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 41822 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2036: /* show_count_errors_stmt: SHOW COUNT_SYM '(' '*' ')' ERRORS  */
#line 13696 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 41830 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2037: /* show_warnings_stmt: SHOW WARNINGS opt_limit_clause  */
#line 13703 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 41838 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2038: /* show_errors_stmt: SHOW ERRORS opt_limit_clause  */
#line 13710 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 41846 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2039: /* show_profiles_stmt: SHOW PROFILES_SYM  */
#line 13717 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 41858 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2040: /* show_profile_stmt: SHOW PROFILE_SYM opt_profile_defs opt_for_query opt_limit_clause  */
#line 13728 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 41866 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2041: /* show_status_stmt: SHOW opt_var_type STATUS_SYM opt_wild_or_where  */
#line 13735 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41874 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2042: /* show_processlist_stmt: SHOW opt_full PROCESSLIST_SYM  */
#line 13742 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 41882 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2043: /* show_variables_stmt: SHOW opt_var_type VARIABLES opt_wild_or_where  */
#line 13749 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41890 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2044: /* show_character_set_stmt: SHOW character_set opt_wild_or_where  */
#line 13756 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2045: /* show_collation_stmt: SHOW COLLATION_SYM opt_wild_or_where  */
#line 13763 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 41906 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2046: /* show_privileges_stmt: SHOW PRIVILEGES  */
#line 13770 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 41914 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2047: /* show_grants_stmt: SHOW GRANTS  */
#line 13777 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 41922 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2048: /* show_grants_stmt: SHOW GRANTS FOR_SYM user  */
#line 13781 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 41930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2049: /* show_grants_stmt: SHOW GRANTS FOR_SYM user USING user_list  */
#line 13785 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 41938 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2050: /* show_create_database_stmt: SHOW CREATE DATABASE opt_if_not_exists ident  */
#line 13792 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 41946 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2051: /* show_create_table_stmt: SHOW CREATE TABLE_SYM table_ident  */
#line 13799 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 41954 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2052: /* show_create_view_stmt: SHOW CREATE VIEW_SYM table_ident  */
#line 13806 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 41962 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2053: /* show_binary_log_status_stmt: SHOW BINARY_SYM LOG_SYM STATUS_SYM  */
#line 13813 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_binary_log_status((yyloc));
          }
#line 41970 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2054: /* show_replica_status_stmt: SHOW REPLICA_SYM STATUS_SYM opt_channel  */
#line 13820 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 41978 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2055: /* show_create_procedure_stmt: SHOW CREATE PROCEDURE_SYM sp_name  */
#line 13827 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 41986 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2056: /* show_create_function_stmt: SHOW CREATE FUNCTION_SYM sp_name  */
#line 13834 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 41994 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2057: /* show_create_trigger_stmt: SHOW CREATE TRIGGER_SYM sp_name  */
#line 13841 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 42002 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2058: /* show_procedure_status_stmt: SHOW PROCEDURE_SYM STATUS_SYM opt_wild_or_where  */
#line 13848 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 42010 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2059: /* show_function_status_stmt: SHOW FUNCTION_SYM STATUS_SYM opt_wild_or_where  */
#line 13855 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 42018 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2060: /* show_procedure_code_stmt: SHOW PROCEDURE_SYM CODE_SYM sp_name  */
#line 13862 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 42026 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2061: /* show_function_code_stmt: SHOW FUNCTION_SYM CODE_SYM sp_name  */
#line 13869 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 42034 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2062: /* show_create_event_stmt: SHOW CREATE EVENT_SYM sp_name  */
#line 13876 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 42042 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2063: /* show_create_user_stmt: SHOW CREATE USER user  */
#line 13883 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 42050 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2064: /* show_parse_tree_stmt: SHOW PARSE_TREE_SYM simple_statement  */
#line 13890 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
#ifndef WITH_SHOW_PARSE_TREE
            YYTHD->syntax_error_at((yylsp[-1]));
            MYSQL_YYABORT;
#endif
            (yyval.top_level_node) = NEW_PTN PT_show_parse_tree((yyloc), (yyvsp[0].top_level_node));
          }
#line 42062 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2066: /* engine_or_all: ALL  */
#line 13901 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.lexer.lex_str) = {}; }
#line 42068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2069: /* opt_db: %empty  */
#line 13910 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.simple_string)= nullptr; }
#line 42074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2070: /* opt_db: from_or_in ident  */
#line 13911 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 42080 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2071: /* opt_full: %empty  */
#line 13915 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= 0; }
#line 42086 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2072: /* opt_full: FULL  */
#line 13916 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= 1; }
#line 42092 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2073: /* opt_extended: %empty  */
#line 13920 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= 0; }
#line 42098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2074: /* opt_extended: EXTENDED_SYM  */
#line 13921 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.is_not_empty)= 1; }
#line 42104 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2075: /* opt_show_cmd_type: %empty  */
#line 13925 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 42110 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2076: /* opt_show_cmd_type: FULL  */
#line 13926 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 42116 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2077: /* opt_show_cmd_type: EXTENDED_SYM  */
#line 13927 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 42122 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2078: /* opt_show_cmd_type: EXTENDED_SYM FULL  */
#line 13928 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 42128 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2081: /* opt_binlog_in: %empty  */
#line 13937 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.lexer.lex_str) = {}; }
#line 42134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2082: /* opt_binlog_in: IN_SYM TEXT_STRING_sys  */
#line 13938 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 42140 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2083: /* binlog_from: %empty  */
#line 13942 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { Lex->mi.pos = 4; /* skip magic number */ }
#line 42146 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2084: /* binlog_from: FROM ulonglong_num  */
#line 13943 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 42152 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2085: /* opt_wild_or_where: %empty  */
#line 13947 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = {}; }
#line 42158 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2086: /* opt_wild_or_where: LIKE TEXT_STRING_literal  */
#line 13948 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 42164 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2087: /* opt_wild_or_where: where_clause  */
#line 13949 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 42170 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2088: /* describe_stmt: describe_command table_ident opt_describe_column  */
#line 13955 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 42178 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2089: /* explain_stmt: describe_command opt_explain_options explainable_stmt  */
#line 13962 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyloc), (yyvsp[-1].explain_options_type).explain_format_type, (yyvsp[-1].explain_options_type).is_analyze,
                  (yyvsp[-1].explain_options_type).is_explicit, (yyvsp[0].explainable_stmt).statement,
                  (yyvsp[-1].explain_options_type).explain_into_variable_name.length ?
                  std::optional<std::string_view>(
                    to_string_view((yyvsp[-1].explain_options_type).explain_into_variable_name)) :
                  std::optional<std::string_view>(std::nullopt),
                  (yyvsp[0].explainable_stmt).schema_name_for_explain);
          }
#line 42192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2090: /* explainable_stmt: opt_explain_for_schema select_stmt  */
#line 13975 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42201 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2091: /* explainable_stmt: opt_explain_for_schema insert_stmt  */
#line 13980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42210 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2092: /* explainable_stmt: opt_explain_for_schema replace_stmt  */
#line 13985 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2093: /* explainable_stmt: opt_explain_for_schema update_stmt  */
#line 13990 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42228 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2094: /* explainable_stmt: opt_explain_for_schema delete_stmt  */
#line 13995 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = (yyvsp[0].top_level_node);
            (yyval.explainable_stmt).schema_name_for_explain = (yyvsp[-1].lex_cstr);
          }
#line 42237 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2095: /* explainable_stmt: FOR_SYM CONNECTION_SYM real_ulong_num  */
#line 14000 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explainable_stmt).statement = NEW_PTN PT_explain_for_connection((yyloc), static_cast<my_thread_id>((yyvsp[0].ulong_num)));
            (yyval.explainable_stmt).schema_name_for_explain = NULL_CSTR;
          }
#line 42246 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2098: /* opt_explain_format: %empty  */
#line 14013 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type).is_explicit = false;
            (yyval.explain_options_type).explain_format_type = YYTHD->variables.explain_format;
          }
#line 42255 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2099: /* opt_explain_format: FORMAT_SYM EQ ident_or_text  */
#line 14018 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type).is_explicit = true;
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_options_type).explain_format_type = Explain_format_type::TREE;
            else {
              // This includes even TRADITIONAL_STRICT. Since this value is
              // only meant for mtr infrastructure temporarily, we don't want
              // the user to explicitly use this value in EXPLAIN statements.
              // This results in having one less place to deprecate from.
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42277 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2100: /* opt_explain_options: ANALYZE_SYM opt_explain_format  */
#line 14039 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type) = (yyvsp[0].explain_options_type);
            (yyval.explain_options_type).is_analyze = true;
            (yyval.explain_options_type).explain_into_variable_name = NULL_STR;
          }
#line 42287 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2101: /* opt_explain_options: opt_explain_format opt_explain_into  */
#line 14045 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.explain_options_type) = (yyvsp[-1].explain_options_type);
            (yyval.explain_options_type).is_analyze = false;

            if ((yyvsp[0].lexer.lex_str).length) {
              if (!(yyval.explain_options_type).is_explicit) {
                MYSQL_YYABORT_ERROR(
                  ER_EXPLAIN_INTO_IMPLICIT_FORMAT_NOT_SUPPORTED, MYF(0));
              }
              if ((yyval.explain_options_type).explain_format_type != Explain_format_type::JSON) {
                if ((yyval.explain_options_type).explain_format_type == Explain_format_type::TREE) {
                  MYSQL_YYABORT_ERROR(ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED,
                                      MYF(0), "TREE");
                } else {
                  MYSQL_YYABORT_ERROR(ER_EXPLAIN_INTO_FORMAT_NOT_SUPPORTED,
                                      MYF(0), "TRADITIONAL");
                }
              }
            }
            (yyval.explain_options_type).explain_into_variable_name = (yyvsp[0].lexer.lex_str);
          }
#line 42313 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2102: /* opt_explain_into: %empty  */
#line 14070 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = NULL_STR;
          }
#line 42321 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2103: /* opt_explain_into: INTO '@' ident_or_text  */
#line 14074 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
          }
#line 42329 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2104: /* opt_explain_for_schema: %empty  */
#line 14081 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_cstr) = NULL_CSTR;
          }
#line 42337 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2105: /* opt_explain_for_schema: FOR_SYM DATABASE ident_or_text  */
#line 14085 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 42345 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2106: /* opt_describe_column: %empty  */
#line 14091 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 42351 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2107: /* opt_describe_column: text_string  */
#line 14093 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 42360 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2109: /* $@46: %empty  */
#line 14105 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 42371 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2110: /* flush: FLUSH_SYM opt_no_write_to_binlog $@46 flush_options  */
#line 14112 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 42377 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2111: /* $@47: %empty  */
#line 14117 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 42394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2112: /* flush_options: table_or_tables opt_table_list $@47 opt_flush_lock  */
#line 14129 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         {}
#line 42400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2114: /* opt_flush_lock: %empty  */
#line 14134 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 42406 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2115: /* opt_flush_lock: WITH READ_SYM LOCK_SYM  */
#line 14136 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 42422 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2116: /* $@48: %empty  */
#line 14148 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->query_tables == nullptr) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 42434 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2117: /* opt_flush_lock: FOR_SYM $@48 EXPORT_SYM  */
#line 14156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Table_ref *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 42450 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2119: /* flush_options_list: flush_option  */
#line 14172 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 42456 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2120: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14177 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 42462 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2121: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14179 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 42468 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2122: /* flush_option: GENERAL LOGS_SYM  */
#line 14181 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 42474 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2123: /* flush_option: SLOW LOGS_SYM  */
#line 14183 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 42480 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2124: /* flush_option: BINARY_SYM LOGS_SYM  */
#line 14185 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 42486 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2125: /* flush_option: RELAY LOGS_SYM opt_channel  */
#line 14187 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 42496 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2126: /* flush_option: PRIVILEGES  */
#line 14193 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 42502 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2127: /* flush_option: LOGS_SYM  */
#line 14195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_LOG; }
#line 42508 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2128: /* flush_option: STATUS_SYM  */
#line 14197 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 42514 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2129: /* flush_option: RESOURCES  */
#line 14199 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 42520 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2130: /* flush_option: OPTIMIZER_COSTS_SYM  */
#line 14201 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 42526 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2131: /* opt_table_list: %empty  */
#line 14205 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.table_list)= nullptr; }
#line 42532 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2133: /* $@49: %empty  */
#line 14211 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 42541 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2134: /* reset: RESET_SYM $@49 reset_options  */
#line 14216 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 42547 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2135: /* reset: RESET_SYM PERSIST_SYM opt_if_exists_ident  */
#line 14218 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 42558 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2138: /* opt_if_exists_ident: %empty  */
#line 14233 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 42568 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2139: /* opt_if_exists_ident: if_exists persisted_variable_ident  */
#line 14239 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 42578 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2141: /* persisted_variable_ident: ident '.' ident  */
#line 14249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const LEX_STRING prefix = (yyvsp[-2].lexer.lex_str);
            const LEX_STRING suffix = (yyvsp[0].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
#line 42591 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2142: /* persisted_variable_ident: DEFAULT_SYM '.' ident  */
#line 14258 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const LEX_CSTRING prefix{STRING_WITH_LEN("default")};
            const LEX_STRING suffix = (yyvsp[0].lexer.lex_str);
            (yyval.lexer.lex_str).length = prefix.length + 1 + suffix.length + 1;
            (yyval.lexer.lex_str).str = static_cast<char *>(YYTHD->alloc((yyval.lexer.lex_str).length));
            if ((yyval.lexer.lex_str).str == nullptr) YYABORT;  // OOM
            strxnmov((yyval.lexer.lex_str).str, (yyval.lexer.lex_str).length, prefix.str, ".", suffix.str, nullptr);
          }
#line 42604 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2143: /* $@50: %empty  */
#line 14270 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_REPLICA; }
#line 42610 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2144: /* reset_option: REPLICA_SYM $@50 opt_replica_reset_options opt_channel  */
#line 14272 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 42619 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2145: /* $@51: %empty  */
#line 14277 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_SOURCE;
            /*
              RESET BINARY LOGS AND GTIDS should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 42639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2147: /* opt_replica_reset_options: %empty  */
#line 14296 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { Lex->reset_replica_info.all= false; }
#line 42645 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2148: /* opt_replica_reset_options: ALL  */
#line 14297 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { Lex->reset_replica_info.all= true; }
#line 42651 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2149: /* source_reset_options: %empty  */
#line 14301 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 42657 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2150: /* source_reset_options: TO_SYM real_ulonglong_num  */
#line 14303 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_BIN_LOGS)
            {
              my_error(ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_BIN_LOGS);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 42672 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2151: /* $@52: %empty  */
#line 14317 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 42682 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2152: /* purge: PURGE $@52 purge_options  */
#line 14323 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 42688 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2154: /* purge_option: TO_SYM TEXT_STRING_sys  */
#line 14332 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 42696 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2155: /* purge_option: BEFORE_SYM expr  */
#line 14336 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 42709 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2156: /* kill: KILL_SYM kill_option expr  */
#line 14350 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 42722 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2157: /* kill_option: %empty  */
#line 14361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { Lex->type= 0; }
#line 42728 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2158: /* kill_option: CONNECTION_SYM  */
#line 14362 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { Lex->type= 0; }
#line 42734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2159: /* kill_option: QUERY_SYM  */
#line 14363 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                         { Lex->type= ONLY_KILL_QUERY; }
#line 42740 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2160: /* use: USE_SYM ident  */
#line 14370 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->sphead) {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 42754 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2161: /* load_stmt: LOAD data_or_xml load_data_lock opt_from_keyword opt_local load_source_type TEXT_STRING_filesystem opt_source_count opt_source_order opt_duplicate INTO TABLE_SYM table_ident opt_use_partition opt_load_data_charset opt_compression_algorithm opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec opt_load_parallel opt_load_memory opt_load_algorithm  */
#line 14409 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyloc), (yyvsp[-23].filetype),  // data_or_xml
                                      (yyvsp[-22].lock_type),  // load_data_lock
                                      (yyvsp[-20].is_not_empty),  // opt_local
                                      (yyvsp[-19].source_type),  // source type
                                      (yyvsp[-18].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-17].ulong_num),  // opt_source_count
                                      (yyvsp[-16].is_not_empty),  // opt_source_order
                                      (yyvsp[-15].on_duplicate), // opt_duplicate
                                      (yyvsp[-12].table), // table_ident
                                      (yyvsp[-11].string_list), // opt_use_partition
                                      (yyvsp[-10].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-9].lex_cstr), // opt_compression_algorithm
                                      (yyvsp[-8].string), // opt_xml_rows_identified_by
                                      (yyvsp[-7].field_separators), // opt_field_term
                                      (yyvsp[-6].line_separators), // opt_line_term
                                      (yyvsp[-5].ulong_num), // opt_ignore_lines
                                      (yyvsp[-4].item_list2), // opt_field_or_var_spec
                                      (yyvsp[-3].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[-3].load_set_list).set_expr_list,
                                      (yyvsp[-3].load_set_list).set_expr_str_list,
                                      (yyvsp[-2].ulong_num),  // opt_load_parallel
                                      (yyvsp[-1].ulonglong_number),  // opt_load_memory
                                      (yyvsp[0].is_not_empty)); // opt_load_algorithm
          }
#line 42784 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2162: /* data_or_xml: DATA_SYM  */
#line 14437 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 42790 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2163: /* data_or_xml: XML_SYM  */
#line 14438 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 42796 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2164: /* opt_local: %empty  */
#line 14442 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= false; }
#line 42802 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2165: /* opt_local: LOCAL_SYM  */
#line 14443 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.is_not_empty)= true; }
#line 42808 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2166: /* opt_from_keyword: %empty  */
#line 14447 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      {}
#line 42814 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2167: /* opt_from_keyword: FROM  */
#line 14448 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      {}
#line 42820 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2168: /* load_data_lock: %empty  */
#line 14452 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 42826 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2169: /* load_data_lock: CONCURRENT  */
#line 14453 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 42832 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2170: /* load_data_lock: LOW_PRIORITY  */
#line 14454 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 42838 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2171: /* load_source_type: INFILE_SYM  */
#line 14458 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_FILE; }
#line 42844 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2172: /* load_source_type: URL_SYM  */
#line 14459 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_URL; }
#line 42850 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2173: /* load_source_type: S3_SYM  */
#line 14460 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.source_type) = LOAD_SOURCE_S3; }
#line 42856 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2174: /* opt_source_count: %empty  */
#line 14464 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 42862 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2175: /* opt_source_count: IDENT_sys NUM  */
#line 14466 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            const long n_files= atol((yyvsp[0].lexer.lex_str).str);
            // COUNT can be key word or identifier based on SQL mode
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "count") != 0) {
              YYTHD->syntax_error_at((yylsp[-1]), "COUNT expected");
              YYABORT;
            }
            if (n_files == 0) {
              YYTHD->syntax_error_at((yylsp[0]), "The number of files cannot be zero");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= n_files;
          }
#line 42880 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2176: /* opt_source_order: %empty  */
#line 14482 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 42886 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2177: /* opt_source_order: IN_SYM PRIMARY_SYM KEY_SYM ORDER_SYM  */
#line 14483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                               { (yyval.is_not_empty)= true; }
#line 42892 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2178: /* opt_duplicate: %empty  */
#line 14487 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 42898 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2180: /* duplicate: REPLACE_SYM  */
#line 14492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 42904 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2181: /* duplicate: IGNORE_SYM  */
#line 14493 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 42910 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2182: /* opt_field_term: %empty  */
#line 14497 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.field_separators).cleanup(); }
#line 42916 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2183: /* opt_field_term: COLUMNS field_term_list  */
#line 14498 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                  { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 42922 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2184: /* field_term_list: field_term_list field_term  */
#line 14503 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 42931 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2186: /* field_term: TERMINATED BY text_string  */
#line 14512 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 42940 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2187: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 14517 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 42950 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2188: /* field_term: ENCLOSED BY text_string  */
#line 14523 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 42959 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2189: /* field_term: ESCAPED BY text_string  */
#line 14528 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 42968 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2190: /* opt_line_term: %empty  */
#line 14535 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.line_separators).cleanup(); }
#line 42974 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2191: /* opt_line_term: LINES line_term_list  */
#line 14536 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 42980 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2192: /* line_term_list: line_term_list line_term  */
#line 14541 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 42989 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2194: /* line_term: TERMINATED BY text_string  */
#line 14550 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 42998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2195: /* line_term: STARTING BY text_string  */
#line 14555 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 43007 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2196: /* opt_xml_rows_identified_by: %empty  */
#line 14562 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.string)= nullptr; }
#line 43013 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2197: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 14563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                 { (yyval.string)= (yyvsp[0].string); }
#line 43019 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2198: /* opt_ignore_lines: %empty  */
#line 14567 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ulong_num)= 0; }
#line 43025 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2199: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 14568 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                        { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 43031 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2202: /* opt_field_or_var_spec: %empty  */
#line 14577 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= nullptr; }
#line 43037 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2203: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 14578 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 43043 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2204: /* opt_field_or_var_spec: '(' ')'  */
#line 14579 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.item_list2)= nullptr; }
#line 43049 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2205: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 14584 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
            (yyval.item_list2)->m_pos = (yyloc);
          }
#line 43060 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2206: /* fields_or_vars: field_or_var  */
#line 14591 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_list2)= NEW_PTN PT_item_list((yyloc));
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 43070 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2208: /* field_or_var: '@' ident_or_text  */
#line 14601 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43078 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2209: /* opt_load_data_set_spec: %empty  */
#line 14607 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 43084 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2210: /* opt_load_data_set_spec: SET_SYM load_data_set_list  */
#line 14608 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                     { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 43090 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2211: /* load_data_set_list: load_data_set_list ',' load_data_set_elem  */
#line 14613 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 43102 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2212: /* load_data_set_list: load_data_set_elem  */
#line 14621 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list((yyloc));
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 43123 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2213: /* load_data_set_elem: simple_ident_nospvar equal expr_or_default  */
#line 14641 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2214: /* opt_load_algorithm: %empty  */
#line 14659 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.is_not_empty) = false; }
#line 43149 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2215: /* opt_load_algorithm: ALGORITHM_SYM EQ BULK_SYM  */
#line 14660 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.is_not_empty) = true; }
#line 43155 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2216: /* opt_compression_algorithm: %empty  */
#line 14664 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.lex_cstr) = {}; }
#line 43161 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2217: /* opt_compression_algorithm: COMPRESSION_SYM EQ TEXT_STRING_sys  */
#line 14665 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                             { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 43167 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2218: /* opt_load_parallel: %empty  */
#line 14670 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulong_num) = 0; }
#line 43173 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2219: /* opt_load_parallel: PARALLEL_SYM EQ NUM  */
#line 14671 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulong_num)= atol((yyvsp[0].lexer.lex_str).str); }
#line 43179 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2220: /* opt_load_memory: %empty  */
#line 14675 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulonglong_number) = 0; }
#line 43185 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2221: /* opt_load_memory: MEMORY_SYM EQ size_number  */
#line 14676 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 43191 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2222: /* text_literal: TEXT_STRING  */
#line 14683 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 43200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2223: /* text_literal: NCHAR_STRING  */
#line 14688 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 43210 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2224: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 14694 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43219 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2225: /* text_literal: text_literal TEXT_STRING_literal  */
#line 14699 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 43228 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2226: /* text_string: TEXT_STRING_literal  */
#line 14707 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43239 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2227: /* text_string: HEX_NUM  */
#line 14714 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43250 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2228: /* text_string: BIN_NUM  */
#line 14721 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == nullptr)
              MYSQL_YYABORT;
          }
#line 43261 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2229: /* param_marker: PARAM_MARKER  */
#line 14731 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == nullptr)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 43281 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2231: /* signed_literal: '+' NUM_literal  */
#line 14750 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.item)= (yyvsp[0].item_num); }
#line 43287 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2232: /* signed_literal: '-' NUM_literal  */
#line 14752 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item_num) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 43298 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2235: /* null_as_literal: NULL_SYM  */
#line 14767 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 43314 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2236: /* literal: text_literal  */
#line 14781 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].text_literal); }
#line 43320 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2237: /* literal: NUM_literal  */
#line 14782 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_num); }
#line 43326 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2239: /* literal: FALSE_SYM  */
#line 14785 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 43334 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2240: /* literal: TRUE_SYM  */
#line 14789 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 43342 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2241: /* literal: HEX_NUM  */
#line 14793 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2242: /* literal: BIN_NUM  */
#line 14797 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2243: /* literal: UNDERSCORE_CHARSET HEX_NUM  */
#line 14801 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43366 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2244: /* literal: UNDERSCORE_CHARSET BIN_NUM  */
#line 14805 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 43374 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2248: /* NUM_literal: DECIMAL_NUM  */
#line 14818 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 43382 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2249: /* NUM_literal: FLOAT_NUM  */
#line 14822 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 43390 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2250: /* int64_literal: NUM  */
#line 14832 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 43396 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2251: /* int64_literal: LONG_NUM  */
#line 14833 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 43402 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2252: /* int64_literal: ULONGLONG_NUM  */
#line 14834 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 43408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2253: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 14840 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 43416 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2254: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 14844 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 43424 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2255: /* temporal_literal: TIMESTAMP_SYM TEXT_STRING  */
#line 14848 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 43432 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2256: /* opt_interval: %empty  */
#line 14854 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.is_not_empty) = false; }
#line 43438 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2257: /* opt_interval: INTERVAL_SYM  */
#line 14855 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.is_not_empty) = true; }
#line 43444 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2259: /* table_wild: ident '.' '*'  */
#line 14869 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 43452 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2260: /* table_wild: ident '.' ident '.' '*'  */
#line 14873 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 43463 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2261: /* order_expr: expr opt_ordering_direction  */
#line 14883 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 43471 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2262: /* grouping_expr: expr  */
#line 14890 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyloc), (yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 43479 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2263: /* simple_ident: ident  */
#line 14897 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43487 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2265: /* simple_ident_nospvar: ident  */
#line 14905 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 43495 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2267: /* simple_ident_q: ident '.' ident  */
#line 14913 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 43503 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2268: /* simple_ident_q: ident '.' ident '.' ident  */
#line 14917 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 43513 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2269: /* table_ident: ident  */
#line 14926 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == nullptr)
              MYSQL_YYABORT;
          }
#line 43523 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2270: /* table_ident: ident '.' ident  */
#line 14932 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == nullptr)
              MYSQL_YYABORT;
          }
#line 43535 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2271: /* table_ident_opt_wild: ident opt_wild  */
#line 14943 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == nullptr)
              MYSQL_YYABORT;
          }
#line 43545 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2272: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 14949 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == nullptr)
              MYSQL_YYABORT;
          }
#line 43557 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2273: /* IDENT_sys: IDENT  */
#line 14959 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 43563 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2274: /* IDENT_sys: IDENT_QUOTED  */
#line 14961 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43594 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2275: /* TEXT_STRING_sys_nonewline: TEXT_STRING_sys  */
#line 14991 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 43608 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2276: /* filter_wild_db_table_string: TEXT_STRING_sys_nonewline  */
#line 15004 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 43622 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2277: /* TEXT_STRING_sys: TEXT_STRING  */
#line 15017 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43639 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2278: /* TEXT_STRING_literal: TEXT_STRING  */
#line 15033 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43656 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2279: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 15049 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 43674 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2282: /* TEXT_STRING_hash: HEX_NUM  */
#line 15071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 43682 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2283: /* TEXT_STRING_validated: TEXT_STRING  */
#line 15078 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 43699 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2284: /* ident: IDENT_sys  */
#line 15093 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 43705 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2285: /* ident: ident_keyword  */
#line 15095 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43717 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2287: /* role_ident: role_keyword  */
#line 15107 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43728 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2288: /* label_ident: IDENT_sys  */
#line 15116 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 43734 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2289: /* label_ident: label_keyword  */
#line 15118 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43746 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2291: /* lvalue_ident: lvalue_keyword  */
#line 15130 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == nullptr)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 43757 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2292: /* ident_or_text: ident  */
#line 15139 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43763 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2293: /* ident_or_text: TEXT_STRING_sys  */
#line 15140 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43769 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2294: /* ident_or_text: LEX_HOSTNAME  */
#line 15141 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                       { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 43775 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2298: /* user_ident_or_text: ident_or_text  */
#line 15152 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), nullptr)))
              MYSQL_YYABORT;
          }
#line 43784 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2299: /* user_ident_or_text: ident_or_text '@' ident_or_text  */
#line 15157 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43793 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2300: /* user: user_ident_or_text  */
#line 15165 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 43801 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2301: /* user: CURRENT_USER optional_braces  */
#line 15169 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 43815 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2302: /* role: role_ident_or_text  */
#line 15182 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), nullptr)))
              MYSQL_YYABORT;
          }
#line 43824 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2303: /* role: role_ident_or_text '@' ident_or_text  */
#line 15187 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 43833 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2304: /* schema: ident  */
#line 15195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 43843 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2472: /* ident_keywords_unambiguous: FULL  */
#line 15425 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            push_warning_printf(thd, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_IDENT,
                                ER_THD(thd, ER_WARN_DEPRECATED_IDENT), "FULL");
          }
#line 43854 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2781: /* set: SET_SYM start_option_value_list  */
#line 15780 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.set)= NEW_PTN PT_set((yyloc), (yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 43862 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2782: /* start_option_value_list: option_value_no_option_type option_value_list_continued  */
#line 15789 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyloc), (yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 43870 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2783: /* start_option_value_list: TRANSACTION_SYM transaction_characteristics  */
#line 15793 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyloc), (yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 43878 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2784: /* start_option_value_list: option_type start_option_value_list_following_option_type  */
#line 15797 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyloc), (yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 43886 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2785: /* start_option_value_list: PASSWORD equal TEXT_STRING_password opt_replace_password opt_retain_current_password  */
#line 15801 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 43897 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2786: /* start_option_value_list: PASSWORD TO_SYM RANDOM_SYM opt_replace_password opt_retain_current_password  */
#line 15808 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyloc), (yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 43909 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2787: /* start_option_value_list: PASSWORD FOR_SYM user equal TEXT_STRING_password opt_replace_password opt_retain_current_password  */
#line 15816 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyloc), (yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 43921 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2788: /* start_option_value_list: PASSWORD FOR_SYM user TO_SYM RANDOM_SYM opt_replace_password opt_retain_current_password  */
#line 15824 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyloc), (yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 43934 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2789: /* set_role_stmt: SET_SYM ROLE_SYM role_list  */
#line 15836 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), (yyvsp[0].user_list));
          }
#line 43942 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2790: /* set_role_stmt: SET_SYM ROLE_SYM NONE_SYM  */
#line 15840 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43951 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2791: /* set_role_stmt: SET_SYM ROLE_SYM DEFAULT_SYM  */
#line 15845 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43960 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2792: /* set_role_stmt: SET_SYM DEFAULT_SYM ROLE_SYM role_list TO_SYM role_list  */
#line 15850 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 43969 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2793: /* set_role_stmt: SET_SYM DEFAULT_SYM ROLE_SYM NONE_SYM TO_SYM role_list  */
#line 15855 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), nullptr,
                                                   role_enum::ROLE_NONE);
          }
#line 43978 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2794: /* set_role_stmt: SET_SYM DEFAULT_SYM ROLE_SYM ALL TO_SYM role_list  */
#line 15860 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role((yyloc), false, (yyvsp[0].user_list), nullptr,
                                                   role_enum::ROLE_ALL);
          }
#line 43987 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2795: /* set_role_stmt: SET_SYM ROLE_SYM ALL opt_except_role_list  */
#line 15865 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyloc), role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 43996 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2796: /* opt_except_role_list: %empty  */
#line 15872 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.user_list)= nullptr; }
#line 44002 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2797: /* opt_except_role_list: EXCEPT_SYM role_list  */
#line 15873 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.user_list)= (yyvsp[0].user_list); }
#line 44008 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2798: /* set_resource_group_stmt: SET_SYM RESOURCE_SYM GROUP_SYM ident  */
#line 15878 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 44016 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2799: /* set_resource_group_stmt: SET_SYM RESOURCE_SYM GROUP_SYM ident FOR_SYM thread_id_list_options  */
#line 15882 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 44024 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2800: /* thread_id_list: real_ulong_num  */
#line 15889 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 44034 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2801: /* thread_id_list: thread_id_list opt_comma real_ulong_num  */
#line 15895 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 44044 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2802: /* thread_id_list_options: thread_id_list  */
#line 15903 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 44050 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2803: /* start_option_value_list_following_option_type: option_value_following_option_type option_value_list_continued  */
#line 15909 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyloc), (yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 44061 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2804: /* start_option_value_list_following_option_type: TRANSACTION_SYM transaction_characteristics  */
#line 15916 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyloc), (yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 44071 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2805: /* option_value_list_continued: %empty  */
#line 15925 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.option_value_list)= nullptr; }
#line 44077 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2806: /* option_value_list_continued: ',' option_value_list  */
#line 15926 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 44083 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2807: /* option_value_list: option_value  */
#line 15932 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yyloc), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 44091 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2808: /* option_value_list: option_value_list ',' option_value  */
#line 15936 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyloc), (yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 44099 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2809: /* option_value: option_type option_value_following_option_type  */
#line 15944 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.node)= NEW_PTN PT_option_value_type((yyloc), (yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 44107 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2810: /* option_value: option_value_no_option_type  */
#line 15947 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 44113 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2811: /* option_type: GLOBAL_SYM  */
#line 15951 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 44119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2812: /* option_type: PERSIST_SYM  */
#line 15952 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_PERSIST; }
#line 44125 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2813: /* option_type: PERSIST_ONLY_SYM  */
#line 15953 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                           { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 44131 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2814: /* option_type: LOCAL_SYM  */
#line 15954 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44137 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2815: /* option_type: SESSION_SYM  */
#line 15955 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2816: /* opt_var_type: %empty  */
#line 15959 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44149 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2817: /* opt_var_type: GLOBAL_SYM  */
#line 15960 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 44155 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2818: /* opt_var_type: LOCAL_SYM  */
#line 15961 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44161 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2819: /* opt_var_type: SESSION_SYM  */
#line 15962 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 44167 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2820: /* opt_rvalue_system_variable_type: %empty  */
#line 15966 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 44173 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2821: /* opt_rvalue_system_variable_type: GLOBAL_SYM '.'  */
#line 15967 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 44179 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2822: /* opt_rvalue_system_variable_type: LOCAL_SYM '.'  */
#line 15968 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44185 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2823: /* opt_rvalue_system_variable_type: SESSION_SYM '.'  */
#line 15969 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44191 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2824: /* opt_set_var_ident_type: %empty  */
#line 15973 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 44197 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2825: /* opt_set_var_ident_type: PERSIST_SYM '.'  */
#line 15974 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_PERSIST; }
#line 44203 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2826: /* opt_set_var_ident_type: PERSIST_ONLY_SYM '.'  */
#line 15975 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 44209 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2827: /* opt_set_var_ident_type: GLOBAL_SYM '.'  */
#line 15976 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 44215 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2828: /* opt_set_var_ident_type: LOCAL_SYM '.'  */
#line 15977 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44221 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2829: /* opt_set_var_ident_type: SESSION_SYM '.'  */
#line 15978 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 44227 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2830: /* option_value_following_option_type: lvalue_variable equal set_expr_or_default  */
#line 15984 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yyloc), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 44236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2831: /* option_value_no_option_type: lvalue_variable equal set_expr_or_default  */
#line 15993 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yyloc), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yylsp[0]), (yyvsp[0].item));
          }
#line 44244 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2832: /* option_value_no_option_type: '@' ident_or_text equal expr  */
#line 15997 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 44252 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2833: /* option_value_no_option_type: '@' '@' opt_set_var_ident_type lvalue_variable equal set_expr_or_default  */
#line 16002 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyloc), (yyvsp[-3].var_type), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 44261 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2834: /* option_value_no_option_type: character_set old_or_new_charset_name_or_default  */
#line 16007 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyloc), (yyvsp[0].lexer.charset));
          }
#line 44269 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2835: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 16011 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yyloc), (yylsp[-1]));
          }
#line 44280 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2836: /* option_value_no_option_type: NAMES_SYM charset_name opt_collate  */
#line 16018 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 44288 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2837: /* option_value_no_option_type: NAMES_SYM DEFAULT_SYM  */
#line 16022 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names((yyloc), nullptr, nullptr);
          }
#line 44296 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2838: /* lvalue_variable: lvalue_ident  */
#line 16029 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44304 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2839: /* lvalue_variable: lvalue_ident '.' ident  */
#line 16033 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44321 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2840: /* lvalue_variable: DEFAULT_SYM '.' ident  */
#line 16046 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44329 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2841: /* rvalue_system_variable: ident_or_text  */
#line 16053 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44337 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2842: /* rvalue_system_variable: ident_or_text '.' ident  */
#line 16057 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 44350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2843: /* transaction_characteristics: transaction_access_mode opt_isolation_level  */
#line 16069 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyloc), (yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 44358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2844: /* transaction_characteristics: isolation_level opt_transaction_access_mode  */
#line 16073 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyloc), (yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 44366 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2845: /* transaction_access_mode: transaction_access_mode_types  */
#line 16080 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyloc), (yyvsp[0].num));
          }
#line 44374 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2846: /* opt_transaction_access_mode: %empty  */
#line 16086 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.transaction_access_mode)= nullptr; }
#line 44380 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2847: /* opt_transaction_access_mode: ',' transaction_access_mode  */
#line 16087 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                      { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 44386 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2848: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 16092 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyloc), (yyvsp[0].tx_isolation));
          }
#line 44394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2849: /* opt_isolation_level: %empty  */
#line 16098 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.isolation_level)= nullptr; }
#line 44400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2850: /* opt_isolation_level: ',' isolation_level  */
#line 16099 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 44406 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2851: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 16103 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 44412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2852: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 16104 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 44418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2853: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 16108 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 44424 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2854: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 16109 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 44430 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2855: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 16110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 44436 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2856: /* isolation_types: SERIALIZABLE_SYM  */
#line 16111 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 44442 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2858: /* set_expr_or_default: DEFAULT_SYM  */
#line 16116 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.item)= nullptr; }
#line 44448 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2859: /* set_expr_or_default: ON_SYM  */
#line 16118 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 44456 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2860: /* set_expr_or_default: ALL  */
#line 16122 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 44464 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2861: /* set_expr_or_default: BINARY_SYM  */
#line 16126 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 44472 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2862: /* set_expr_or_default: ROW_SYM  */
#line 16130 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 44480 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2863: /* set_expr_or_default: SYSTEM_SYM  */
#line 16134 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 44488 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2864: /* $@53: %empty  */
#line 16143 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 44503 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2865: /* lock: LOCK_SYM table_or_tables $@53 table_lock_list  */
#line 16154 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 44509 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2866: /* lock: LOCK_SYM INSTANCE_SYM FOR_SYM BACKUP_SYM  */
#line 16156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 44520 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2871: /* table_lock: table_ident opt_table_alias lock_option  */
#line 16176 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 44549 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2872: /* lock_option: READ_SYM  */
#line 16203 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 44555 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2873: /* lock_option: WRITE_SYM  */
#line 16204 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 44561 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2874: /* lock_option: READ_SYM LOCAL_SYM  */
#line 16205 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 44567 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2875: /* $@54: %empty  */
#line 16210 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 44582 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2876: /* unlock: UNLOCK_SYM $@54 table_or_tables  */
#line 16221 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 44588 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2877: /* unlock: UNLOCK_SYM INSTANCE_SYM  */
#line 16223 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 44599 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2878: /* shutdown_stmt: SHUTDOWN  */
#line 16234 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 44608 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2879: /* restart_server_stmt: RESTART_SYM  */
#line 16242 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 44616 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2880: /* alter_instance_stmt: ALTER INSTANCE_SYM alter_instance_action  */
#line 16249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 44625 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2881: /* alter_instance_action: ROTATE_SYM ident_or_text MASTER_SYM KEY_SYM  */
#line 16256 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance((yyloc), ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance((yyloc), ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 44645 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2882: /* alter_instance_action: RELOAD TLS_SYM  */
#line 16272 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 44653 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2883: /* alter_instance_action: RELOAD TLS_SYM NO_SYM ROLLBACK_SYM ON_SYM ERROR_SYM  */
#line 16276 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 44661 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2884: /* alter_instance_action: RELOAD TLS_SYM FOR_SYM CHANNEL_SYM ident  */
#line 16279 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                   {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 44669 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2885: /* alter_instance_action: RELOAD TLS_SYM FOR_SYM CHANNEL_SYM ident NO_SYM ROLLBACK_SYM ON_SYM ERROR_SYM  */
#line 16282 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                                                        {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 44677 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2886: /* alter_instance_action: ENABLE_SYM ident ident  */
#line 16286 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 44696 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2887: /* alter_instance_action: DISABLE_SYM ident ident  */
#line 16301 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 44715 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2888: /* alter_instance_action: RELOAD KEYRING_SYM  */
#line 16315 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance((yyloc), RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 44723 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2889: /* handler_stmt: HANDLER_SYM table_ident OPEN_SYM opt_table_alias  */
#line 16326 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 44731 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2890: /* handler_stmt: HANDLER_SYM ident CLOSE_SYM  */
#line 16330 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 44739 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2891: /* handler_stmt: HANDLER_SYM ident READ_SYM handler_scan_function opt_where_clause opt_limit_clause  */
#line 16339 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44747 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2892: /* handler_stmt: HANDLER_SYM ident READ_SYM ident handler_rkey_function opt_where_clause opt_limit_clause  */
#line 16349 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44756 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2893: /* handler_stmt: HANDLER_SYM ident READ_SYM ident handler_rkey_mode '(' values ')' opt_where_clause opt_limit_clause  */
#line 16361 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 44766 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2894: /* handler_scan_function: FIRST_SYM  */
#line 16369 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44772 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2895: /* handler_scan_function: NEXT_SYM  */
#line 16370 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44778 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2896: /* handler_rkey_function: FIRST_SYM  */
#line 16374 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 44784 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2897: /* handler_rkey_function: NEXT_SYM  */
#line 16375 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 44790 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2898: /* handler_rkey_function: PREV_SYM  */
#line 16376 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 44796 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2899: /* handler_rkey_function: LAST_SYM  */
#line 16377 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 44802 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2900: /* handler_rkey_mode: EQ  */
#line 16381 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 44808 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2901: /* handler_rkey_mode: GE  */
#line 16382 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 44814 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2902: /* handler_rkey_mode: LE  */
#line 16383 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 44820 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2903: /* handler_rkey_mode: GT_SYM  */
#line 16384 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 44826 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2904: /* handler_rkey_mode: LT  */
#line 16385 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 44832 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2905: /* revoke: REVOKE if_exists role_or_privilege_list FROM user_list opt_ignore_unknown_user  */
#line 16392 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-4].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            auto *tmp= NEW_PTN PT_revoke_roles((yyloc), (yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list));
            MAKE_CMD(tmp);
          }
#line 44843 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2906: /* revoke: REVOKE if_exists role_or_privilege_list ON_SYM opt_acl_type grant_ident FROM user_list opt_ignore_unknown_user  */
#line 16399 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-7].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            if (apply_privileges(YYTHD, *(yyvsp[-6].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44865 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2907: /* $@55: %empty  */
#line 16417 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-2].num);
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44875 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2908: /* revoke: REVOKE if_exists ALL opt_privileges $@55 ON_SYM opt_acl_type grant_ident FROM user_list opt_ignore_unknown_user  */
#line 16423 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            lex->ignore_unknown_user = (yyvsp[0].num);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44895 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2909: /* revoke: REVOKE if_exists ALL opt_privileges ',' GRANT OPTION FROM user_list opt_ignore_unknown_user  */
#line 16439 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->grant_if_exists = (yyvsp[-8].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[-1].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44907 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2910: /* revoke: REVOKE if_exists PROXY_SYM ON_SYM user FROM user_list opt_ignore_unknown_user  */
#line 16447 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-6].num);
            lex->ignore_unknown_user = (yyvsp[0].num);
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
            MAKE_CMD_DCL_DUMMY();
          }
#line 44922 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2911: /* grant: GRANT role_or_privilege_list TO_SYM user_list opt_with_admin_option  */
#line 16461 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto *tmp= NEW_PTN PT_grant_roles((yyloc), (yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 44931 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2912: /* grant: GRANT role_or_privilege_list ON_SYM opt_acl_type grant_ident TO_SYM user_list grant_options opt_grant_as  */
#line 16467 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44951 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2913: /* $@56: %empty  */
#line 16483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 44960 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2914: /* grant: GRANT ALL opt_privileges $@56 ON_SYM opt_acl_type grant_ident TO_SYM user_list grant_options opt_grant_as  */
#line 16488 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
            MAKE_CMD_DCL_DUMMY();
          }
#line 44977 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2915: /* grant: GRANT PROXY_SYM ON_SYM user TO_SYM user_list opt_grant_option  */
#line 16501 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
            MAKE_CMD_DCL_DUMMY();
          }
#line 44992 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2916: /* opt_acl_type: %empty  */
#line 16514 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::TABLE; }
#line 44998 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2917: /* opt_acl_type: TABLE_SYM  */
#line 16515 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::TABLE; }
#line 45004 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2918: /* opt_acl_type: FUNCTION_SYM  */
#line 16516 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 45010 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2919: /* opt_acl_type: PROCEDURE_SYM  */
#line 16517 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 45016 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2922: /* role_or_privilege_list: role_or_privilege  */
#line 16527 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == nullptr || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 45026 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2923: /* role_or_privilege_list: role_or_privilege_list ',' role_or_privilege  */
#line 16533 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 45036 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2924: /* role_or_privilege: role_ident_or_text opt_column_list  */
#line 16542 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].lex_cstring_list) == nullptr)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yyloc), (yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yyloc), (yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 45047 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2925: /* role_or_privilege: role_ident_or_text '@' ident_or_text  */
#line 16549 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yyloc), (yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 45053 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2926: /* role_or_privilege: SELECT_SYM opt_column_list  */
#line 16551 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45059 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2927: /* role_or_privilege: INSERT_SYM opt_column_list  */
#line 16553 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45065 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2928: /* role_or_privilege: UPDATE_SYM opt_column_list  */
#line 16555 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45071 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2929: /* role_or_privilege: REFERENCES opt_column_list  */
#line 16557 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 45077 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2930: /* role_or_privilege: DELETE_SYM  */
#line 16559 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), DELETE_ACL); }
#line 45083 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2931: /* role_or_privilege: USAGE  */
#line 16561 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), 0); }
#line 45089 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2932: /* role_or_privilege: INDEX_SYM  */
#line 16563 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), INDEX_ACL); }
#line 45095 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2933: /* role_or_privilege: ALTER  */
#line 16565 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), ALTER_ACL); }
#line 45101 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2934: /* role_or_privilege: CREATE  */
#line 16567 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), CREATE_ACL); }
#line 45107 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2935: /* role_or_privilege: DROP  */
#line 16569 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), DROP_ACL); }
#line 45113 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2936: /* role_or_privilege: EXECUTE_SYM  */
#line 16571 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), EXECUTE_ACL); }
#line 45119 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2937: /* role_or_privilege: RELOAD  */
#line 16573 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), RELOAD_ACL); }
#line 45125 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2938: /* role_or_privilege: SHUTDOWN  */
#line 16575 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), SHUTDOWN_ACL); }
#line 45131 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2939: /* role_or_privilege: PROCESS  */
#line 16577 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), PROCESS_ACL); }
#line 45137 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2940: /* role_or_privilege: FILE_SYM  */
#line 16579 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), FILE_ACL); }
#line 45143 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2941: /* role_or_privilege: GRANT OPTION  */
#line 16581 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 45152 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2942: /* role_or_privilege: SHOW DATABASES  */
#line 16586 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SHOW_DB_ACL); }
#line 45158 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2943: /* role_or_privilege: SUPER_SYM  */
#line 16588 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 45176 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2944: /* role_or_privilege: CREATE TEMPORARY TABLES  */
#line 16602 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-2]), CREATE_TMP_ACL); }
#line 45182 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2945: /* role_or_privilege: LOCK_SYM TABLES  */
#line 16604 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), LOCK_TABLES_ACL); }
#line 45188 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2946: /* role_or_privilege: REPLICATION SLAVE  */
#line 16606 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REPL_SLAVE_ACL); }
#line 45194 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2947: /* role_or_privilege: REPLICATION CLIENT_SYM  */
#line 16608 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), REPL_CLIENT_ACL); }
#line 45200 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2948: /* role_or_privilege: CREATE VIEW_SYM  */
#line 16610 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_VIEW_ACL); }
#line 45206 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2949: /* role_or_privilege: SHOW VIEW_SYM  */
#line 16612 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), SHOW_VIEW_ACL); }
#line 45212 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2950: /* role_or_privilege: CREATE ROUTINE_SYM  */
#line 16614 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_PROC_ACL); }
#line 45218 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2951: /* role_or_privilege: ALTER ROUTINE_SYM  */
#line 16616 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), ALTER_PROC_ACL); }
#line 45224 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2952: /* role_or_privilege: CREATE USER  */
#line 16618 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_USER_ACL); }
#line 45230 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2953: /* role_or_privilege: EVENT_SYM  */
#line 16620 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), EVENT_ACL); }
#line 45236 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2954: /* role_or_privilege: TRIGGER_SYM  */
#line 16622 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[0]), TRIGGER_ACL); }
#line 45242 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2955: /* role_or_privilege: CREATE TABLESPACE_SYM  */
#line 16624 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 45248 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2956: /* role_or_privilege: CREATE ROLE_SYM  */
#line 16626 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), CREATE_ROLE_ACL); }
#line 45254 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2957: /* role_or_privilege: DROP ROLE_SYM  */
#line 16628 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yyloc), (yylsp[-1]), DROP_ROLE_ACL); }
#line 45260 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2958: /* opt_with_admin_option: %empty  */
#line 16632 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= false; }
#line 45266 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2959: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 16633 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                { (yyval.is_not_empty)= true; }
#line 45272 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2964: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 16648 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 45286 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2965: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 16658 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 45300 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2966: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 16668 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 45314 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2967: /* grant_ident: '*'  */
#line 16681 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45332 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2968: /* grant_ident: schema '.' '*'  */
#line 16695 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45348 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2969: /* grant_ident: '*' '.' '*'  */
#line 16707 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->current_query_block()->db = nullptr;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 45364 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2970: /* grant_ident: ident  */
#line 16719 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == nullptr)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, nullptr,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 45380 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2971: /* grant_ident: schema '.' ident  */
#line 16731 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == nullptr)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, nullptr,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 45398 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2972: /* user_list: user  */
#line 16748 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == nullptr || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45408 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2973: /* user_list: user_list ',' user  */
#line 16754 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2974: /* role_list: role  */
#line 16763 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == nullptr || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45428 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2975: /* role_list: role_list ',' role  */
#line 16769 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45438 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2976: /* opt_retain_current_password: %empty  */
#line 16777 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 45444 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2977: /* opt_retain_current_password: RETAIN_SYM CURRENT_SYM PASSWORD  */
#line 16778 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.is_not_empty)= true; }
#line 45450 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2978: /* opt_discard_old_password: %empty  */
#line 16782 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 45456 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2979: /* opt_discard_old_password: DISCARD_SYM OLD_SYM PASSWORD  */
#line 16783 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                       { (yyval.is_not_empty)= true; }
#line 45462 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2980: /* opt_user_registration: factor INITIATE_SYM REGISTRATION_SYM  */
#line 16788 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 45476 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2981: /* opt_user_registration: factor UNREGISTER_SYM  */
#line 16798 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 45489 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2982: /* opt_user_registration: factor FINISH_SYM REGISTRATION_SYM SET_SYM CHALLENGE_RESPONSE_SYM AS TEXT_STRING_hash  */
#line 16807 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 45504 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2983: /* create_user: user identification opt_create_user_with_mfa  */
#line 16821 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 45515 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2984: /* create_user: user identified_with_plugin opt_initial_auth  */
#line 16828 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 45533 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2985: /* create_user: user opt_create_user_with_mfa  */
#line 16842 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 45543 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2986: /* opt_create_user_with_mfa: %empty  */
#line 16850 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_mfas) = {}; }
#line 45549 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2987: /* opt_create_user_with_mfa: AND_SYM identification  */
#line 16852 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 45558 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2988: /* opt_create_user_with_mfa: AND_SYM identification AND_SYM identification  */
#line 16857 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 45568 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2995: /* identified_by_password: IDENTIFIED_SYM BY TEXT_STRING_password  */
#line 16875 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45582 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2996: /* identified_by_random_password: IDENTIFIED_SYM BY RANDOM_SYM PASSWORD  */
#line 16888 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 45597 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2997: /* identified_with_plugin: IDENTIFIED_SYM WITH ident_or_text  */
#line 16902 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 45612 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2998: /* identified_with_plugin_as_auth: IDENTIFIED_SYM WITH ident_or_text AS TEXT_STRING_hash  */
#line 16916 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 45627 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 2999: /* identified_with_plugin_by_password: IDENTIFIED_SYM WITH ident_or_text BY TEXT_STRING_password  */
#line 16930 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45643 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3000: /* identified_with_plugin_by_random_password: IDENTIFIED_SYM WITH ident_or_text BY RANDOM_SYM PASSWORD  */
#line 16945 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 45659 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3001: /* opt_initial_auth: INITIAL_SYM AUTHENTICATION_SYM identified_by_random_password  */
#line 16960 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
           {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45669 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3002: /* opt_initial_auth: INITIAL_SYM AUTHENTICATION_SYM identified_with_plugin_as_auth  */
#line 16966 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45679 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3003: /* opt_initial_auth: INITIAL_SYM AUTHENTICATION_SYM identified_by_password  */
#line 16972 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 45689 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3004: /* alter_user: user identified_by_password REPLACE_SYM TEXT_STRING_password opt_retain_current_password  */
#line 16983 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45702 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3005: /* alter_user: user identified_with_plugin_by_password REPLACE_SYM TEXT_STRING_password opt_retain_current_password  */
#line 16994 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45715 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3006: /* alter_user: user identified_by_password opt_retain_current_password  */
#line 17003 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45726 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3007: /* alter_user: user identified_by_random_password opt_retain_current_password  */
#line 17010 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
           {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45737 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3008: /* alter_user: user identified_by_random_password REPLACE_SYM TEXT_STRING_password opt_retain_current_password  */
#line 17019 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 45750 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3009: /* alter_user: user identified_with_plugin  */
#line 17028 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45761 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3010: /* alter_user: user identified_with_plugin_as_auth opt_retain_current_password  */
#line 17035 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45772 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3011: /* alter_user: user identified_with_plugin_by_password opt_retain_current_password  */
#line 17042 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 45783 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3012: /* alter_user: user identified_with_plugin_by_random_password opt_retain_current_password  */
#line 17050 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 45794 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3013: /* alter_user: user opt_discard_old_password  */
#line 17057 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 45804 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3014: /* alter_user: user ADD factor identification  */
#line 17063 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45816 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3015: /* alter_user: user ADD factor identification ADD factor identification  */
#line 17071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45837 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3016: /* alter_user: user MODIFY_SYM factor identification  */
#line 17088 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 45849 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3017: /* alter_user: user MODIFY_SYM factor identification MODIFY_SYM factor identification  */
#line 17096 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 45867 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3018: /* alter_user: user DROP factor  */
#line 17110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 45882 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3019: /* alter_user: user DROP factor DROP factor  */
#line 17121 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 45906 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3020: /* factor: NUM FACTOR_SYM  */
#line 17144 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 45921 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3021: /* create_user_list: create_user  */
#line 17158 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45930 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3022: /* create_user_list: create_user_list ',' create_user  */
#line 17163 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45939 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3023: /* alter_user_list: alter_user  */
#line 17171 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
         {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 45948 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3024: /* alter_user_list: alter_user_list ',' alter_user  */
#line 17176 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 45957 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3025: /* opt_column_list: %empty  */
#line 17183 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.lex_cstring_list)= nullptr; }
#line 45963 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3026: /* opt_column_list: '(' column_list ')'  */
#line 17184 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 45969 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3027: /* column_list: ident  */
#line 17189 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == nullptr || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 45979 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3028: /* column_list: column_list ',' ident  */
#line 17195 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 45989 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3030: /* require_clause: REQUIRE_SYM require_list  */
#line 17205 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 45997 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3031: /* require_clause: REQUIRE_SYM SSL_SYM  */
#line 17209 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 46005 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3032: /* require_clause: REQUIRE_SYM X509_SYM  */
#line 17213 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 46013 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3033: /* require_clause: REQUIRE_SYM NONE_SYM  */
#line 17217 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 46021 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3034: /* grant_options: %empty  */
#line 17223 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 46027 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3035: /* grant_options: WITH GRANT OPTION  */
#line 17225 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->grant |= GRANT_ACL;}
#line 46033 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3036: /* opt_grant_option: %empty  */
#line 17229 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.is_not_empty)= false; }
#line 46039 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3037: /* opt_grant_option: WITH GRANT OPTION  */
#line 17230 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.is_not_empty)= true; }
#line 46045 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3038: /* opt_with_roles: %empty  */
#line 17233 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46051 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3039: /* opt_with_roles: WITH ROLE_SYM role_list  */
#line 17235 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46059 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3040: /* opt_with_roles: WITH ROLE_SYM ALL opt_except_role_list  */
#line 17239 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 46068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3041: /* opt_with_roles: WITH ROLE_SYM NONE_SYM  */
#line 17244 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 46074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3042: /* opt_with_roles: WITH ROLE_SYM DEFAULT_SYM  */
#line 17246 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 46080 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3043: /* opt_grant_as: %empty  */
#line 17249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { Lex->grant_as.grant_as_used = false; }
#line 46086 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3044: /* opt_grant_as: AS user opt_with_roles  */
#line 17251 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 46095 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3045: /* $@57: %empty  */
#line 17258 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 46105 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3046: /* begin_stmt: BEGIN_SYM $@57 opt_work  */
#line 17263 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                   {}
#line 46111 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3047: /* opt_work: %empty  */
#line 17267 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 46117 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3048: /* opt_work: WORK_SYM  */
#line 17268 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 46123 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3049: /* opt_chain: %empty  */
#line 17272 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46129 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3050: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 17273 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46135 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3051: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 17274 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46141 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3052: /* opt_release: %empty  */
#line 17278 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 46147 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3053: /* opt_release: RELEASE_SYM  */
#line 17279 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 46153 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3054: /* opt_release: NO_SYM RELEASE_SYM  */
#line 17280 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 46159 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3055: /* opt_savepoint: %empty  */
#line 17284 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 {}
#line 46165 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3056: /* opt_savepoint: SAVEPOINT_SYM  */
#line 17285 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        {}
#line 46171 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3057: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 17290 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46184 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3058: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 17302 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 46197 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3059: /* rollback: ROLLBACK_SYM opt_work TO_SYM opt_savepoint ident  */
#line 17312 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46207 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3060: /* savepoint: SAVEPOINT_SYM ident  */
#line 17321 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46217 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3061: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 17330 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 46227 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3062: /* union_option: %empty  */
#line 17343 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 46233 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3063: /* union_option: DISTINCT  */
#line 17344 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 46239 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3064: /* union_option: ALL  */
#line 17345 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 46245 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3067: /* subquery: query_expression_parens  */
#line 17358 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_expression_body));
          }
#line 46253 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3068: /* query_spec_option: STRAIGHT_JOIN  */
#line 17364 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 46259 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3069: /* query_spec_option: HIGH_PRIORITY  */
#line 17365 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 46265 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3070: /* query_spec_option: DISTINCT  */
#line 17366 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 46271 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3071: /* query_spec_option: SQL_SMALL_RESULT  */
#line 17367 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 46277 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3072: /* query_spec_option: SQL_BIG_RESULT  */
#line 17368 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 46283 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3073: /* query_spec_option: SQL_BUFFER_RESULT  */
#line 17369 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 46289 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3074: /* query_spec_option: SQL_CALC_FOUND_ROWS  */
#line 17370 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 46300 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3075: /* query_spec_option: ALL  */
#line 17376 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                              { (yyval.ulonglong_number)= SELECT_ALL; }
#line 46306 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3076: /* init_lex_create_info: %empty  */
#line 17387 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 46317 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3077: /* view_or_trigger_or_sp_or_event: definer init_lex_create_info definer_tail  */
#line 17397 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46323 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3078: /* view_or_trigger_or_sp_or_event: no_definer init_lex_create_info no_definer_tail  */
#line 17399 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46329 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3079: /* view_or_trigger_or_sp_or_event: view_replace_or_algorithm definer_opt init_lex_create_info view_tail  */
#line 17401 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46335 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3093: /* no_definer: %empty  */
#line 17434 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older source servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= nullptr;
          }
#line 46350 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3094: /* definer: DEFINER_SYM EQ user  */
#line 17448 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 46358 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3095: /* view_replace_or_algorithm: view_replace  */
#line 17461 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46364 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3096: /* view_replace_or_algorithm: view_replace view_algorithm  */
#line 17463 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46370 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3097: /* view_replace_or_algorithm: view_algorithm  */
#line 17465 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {}
#line 46376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3098: /* view_replace: OR_SYM REPLACE_SYM  */
#line 17470 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 46382 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3099: /* view_algorithm: ALGORITHM_SYM EQ UNDEFINED_SYM  */
#line 17475 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 46388 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3100: /* view_algorithm: ALGORITHM_SYM EQ MERGE_SYM  */
#line 17477 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 46394 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3101: /* view_algorithm: ALGORITHM_SYM EQ TEMPTABLE_SYM  */
#line 17479 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 46400 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3102: /* view_suid: %empty  */
#line 17483 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 46406 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3103: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 17485 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 46412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3104: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 17487 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 46418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3105: /* $@58: %empty  */
#line 17492 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= Table_ref::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 46458 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3107: /* view_query_block: query_expression_with_opt_locking_clauses view_check_option  */
#line 17532 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the m_table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              m_table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::m_table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<Table_ref> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->m_table_list.save_and_clear(&save_list);

            CONTEXTUALIZE_VIEW((yyvsp[-1].query_expression_body));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->m_table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 46510 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3108: /* view_check_option: %empty  */
#line 17582 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 46516 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3109: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 17583 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46522 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3110: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 17584 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 46528 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3111: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 17585 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 46534 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3112: /* trigger_action_order: FOLLOWS_SYM  */
#line 17596 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 46540 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3113: /* trigger_action_order: PRECEDES_SYM  */
#line 17598 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 46546 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3114: /* trigger_follows_precedes_clause: %empty  */
#line 17603 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 46555 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3115: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 17609 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
            {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 46564 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3116: /* $@59: %empty  */
#line 17627 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-10]).cpp.start;
            lex->create_info->options= (yyvsp[-9].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};

            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 46605 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3117: /* trigger_tail: TRIGGER_SYM opt_if_not_exists sp_name trg_action_time trg_event ON_SYM table_ident FOR_SYM EACH_SYM ROW_SYM trigger_follows_precedes_clause $@59 sp_proc_stmt  */
#line 17664 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 46636 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3118: /* udf_tail: AGGREGATE_SYM FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 17707 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 46667 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3119: /* udf_tail: FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 17740 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 46698 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3120: /* $@60: %empty  */
#line 17773 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-3]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-2].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46727 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3121: /* $@61: %empty  */
#line 17799 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 46735 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3122: /* $@62: %empty  */
#line 17805 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), nullptr, nullptr, &NULL_CSTR, nullptr,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};
          }
#line 46783 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3123: /* $@63: %empty  */
#line 17849 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46795 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3124: /* sf_tail: FUNCTION_SYM opt_if_not_exists sp_name '(' $@60 sp_fdparam_list ')' $@61 RETURNS_SYM type opt_collate $@62 sp_c_chistics $@63 stored_routine_body  */
#line 17857 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (sp->is_sql() && !(sp->m_flags & sp_head::HAS_RETURN)) {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 46851 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3127: /* stored_routine_body: AS routine_string  */
#line 17916 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            sp_head *sp = Lex->sphead;
            if (sp->is_sql()) {
               YYTHD->syntax_error();
               MYSQL_YYABORT;
            }
            sp->code = to_lex_cstring((yyvsp[0].lexer.lex_str));

            THD *thd = YYTHD;
            sp_finish_parsing(thd);
          }
#line 46867 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3128: /* stored_routine_body: sp_proc_stmt  */
#line 17928 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if (!Lex->sphead->is_sql()) {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }

            THD *thd = YYTHD;
            sp_finish_parsing(thd);
          }
#line 46881 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3129: /* $@64: %empty  */
#line 17943 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 46906 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3130: /* $@65: %empty  */
#line 17964 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 46914 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3131: /* $@66: %empty  */
#line 17969 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));

            // Default language is SQL
            lex->sp_chistics.language = {"SQL",3};
          }
#line 46929 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3132: /* $@67: %empty  */
#line 17980 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 46941 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3133: /* sp_tail: PROCEDURE_SYM opt_if_not_exists sp_name $@64 '(' $@65 sp_pdparam_list ')' $@66 sp_c_chistics $@67 stored_routine_body  */
#line 17988 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {                     /*$13*/
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 46950 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3134: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 17998 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46959 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3135: /* xa: XA_SYM END xid opt_suspend  */
#line 18003 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46968 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3136: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18008 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 46977 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3137: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18013 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 46986 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3138: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18018 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 46995 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3139: /* xa: XA_SYM RECOVER_SYM opt_convert_xid  */
#line 18023 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 47004 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3140: /* opt_convert_xid: %empty  */
#line 18030 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.is_not_empty)= false; }
#line 47010 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3141: /* opt_convert_xid: CONVERT_SYM XID_SYM  */
#line 18031 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                               { (yyval.is_not_empty)= true; }
#line 47016 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3142: /* xid: text_string  */
#line 18035 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), nullptr, 0);
            (yyval.xid)= xid;
          }
#line 47029 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3143: /* xid: text_string ',' text_string  */
#line 18044 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 47043 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3144: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18054 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 47062 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3145: /* begin_or_start: BEGIN_SYM  */
#line 18071 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 47068 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3146: /* begin_or_start: START_SYM  */
#line 18072 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                    {}
#line 47074 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3147: /* opt_join_or_resume: %empty  */
#line 18076 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_NONE;        }
#line 47080 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3148: /* opt_join_or_resume: JOIN_SYM  */
#line 18077 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_JOIN;        }
#line 47086 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3149: /* opt_join_or_resume: RESUME_SYM  */
#line 18078 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                        { (yyval.xa_option_type)= XA_RESUME;      }
#line 47092 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3150: /* opt_one_phase: %empty  */
#line 18082 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.xa_option_type)= XA_NONE;        }
#line 47098 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3151: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18083 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                            { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 47104 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3152: /* opt_suspend: %empty  */
#line 18087 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.xa_option_type)= XA_NONE;        }
#line 47110 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3153: /* opt_suspend: SUSPEND_SYM  */
#line 18089 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 47116 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3154: /* opt_suspend: SUSPEND_SYM FOR_SYM MIGRATE_SYM  */
#line 18091 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 47122 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3155: /* install_option_type: %empty  */
#line 18095 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 47128 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3156: /* install_option_type: GLOBAL_SYM  */
#line 18096 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 47134 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3157: /* install_option_type: PERSIST_SYM  */
#line 18097 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_PERSIST; }
#line 47140 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3159: /* install_set_rvalue: ON_SYM  */
#line 18103 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 47148 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3160: /* install_set_value: install_option_type lvalue_variable equal install_set_rvalue  */
#line 18110 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
        {
          (yyval.install_component_set_element) = NEW_PTN PT_install_component_set_element {(yyvsp[-3].var_type), (yyvsp[-2].bipartite_name), (yyvsp[0].item)};
        }
#line 47156 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3161: /* install_set_value_list: install_set_value  */
#line 18117 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
            if (!(yyval.install_component_set_list))
              MYSQL_YYABORT; // OOM
            if ((yyval.install_component_set_list)->push_back((yyvsp[0].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
#line 47168 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3162: /* install_set_value_list: install_set_value_list ',' install_set_value  */
#line 18125 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = (yyvsp[-2].install_component_set_list);
            if ((yyval.install_component_set_list)->push_back((yyvsp[0].install_component_set_element)))
              MYSQL_YYABORT; // OOM
          }
#line 47178 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3163: /* opt_install_set_value_list: %empty  */
#line 18134 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.install_component_set_list) = NEW_PTN List<PT_install_component_set_element>;
          }
#line 47186 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3164: /* opt_install_set_value_list: SET_SYM install_set_value_list  */
#line 18137 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                         { (yyval.install_component_set_list) = (yyvsp[0].install_component_set_list); }
#line 47192 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3165: /* install_stmt: INSTALL_SYM PLUGIN_SYM ident SONAME_SYM TEXT_STRING_sys  */
#line 18142 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
            (yyval.top_level_node) = nullptr;
          }
#line 47203 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3166: /* install_stmt: INSTALL_SYM COMPONENT_SYM TEXT_STRING_sys_list opt_install_set_value_list  */
#line 18149 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.top_level_node) = NEW_PTN PT_install_component((yyloc), YYTHD, (yyvsp[-1].lex_str_list), (yyvsp[0].install_component_set_list));
          }
#line 47211 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3167: /* uninstall: UNINSTALL_SYM PLUGIN_SYM ident  */
#line 18156 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 47221 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3168: /* uninstall: UNINSTALL_SYM COMPONENT_SYM TEXT_STRING_sys_list  */
#line 18162 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 47231 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3169: /* TEXT_STRING_sys_list: TEXT_STRING_sys  */
#line 18171 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 47241 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3170: /* TEXT_STRING_sys_list: TEXT_STRING_sys_list ',' TEXT_STRING_sys  */
#line 18177 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 47251 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3171: /* import_stmt: IMPORT TABLE_SYM FROM TEXT_STRING_sys_list  */
#line 18186 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 47264 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3172: /* clone_stmt: CLONE_SYM LOCAL_SYM DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_filesystem  */
#line 18204 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 47275 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3173: /* clone_stmt: CLONE_SYM INSTANCE_SYM FROM user ':' ulong_num IDENTIFIED_SYM BY TEXT_STRING_sys opt_datadir_ssl  */
#line 18214 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 47296 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3174: /* opt_datadir_ssl: opt_ssl  */
#line 18234 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 47304 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3175: /* opt_datadir_ssl: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_filesystem opt_ssl  */
#line 18238 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 47312 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3176: /* opt_ssl: %empty  */
#line 18245 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 47320 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3177: /* opt_ssl: REQUIRE_SYM SSL_SYM  */
#line 18249 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 47328 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3178: /* opt_ssl: REQUIRE_SYM NO_SYM SSL_SYM  */
#line 18253 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 47336 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3179: /* resource_group_types: USER  */
#line 18259 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
               { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 47342 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3180: /* resource_group_types: SYSTEM_SYM  */
#line 18260 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                     { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 47348 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3181: /* opt_resource_group_vcpu_list: %empty  */
#line 18265 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 47359 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3182: /* opt_resource_group_vcpu_list: VCPU_SYM opt_equal vcpu_range_spec_list  */
#line 18271 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                                                  { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 47365 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3183: /* vcpu_range_spec_list: vcpu_num_or_range  */
#line 18276 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 47376 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3184: /* vcpu_range_spec_list: vcpu_range_spec_list opt_comma vcpu_num_or_range  */
#line 18283 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 47387 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3185: /* vcpu_num_or_range: NUM  */
#line 18293 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 47398 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3186: /* vcpu_num_or_range: NUM '-' NUM  */
#line 18300 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 47412 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3187: /* signed_num: NUM  */
#line 18312 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 47418 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3188: /* signed_num: '-' NUM  */
#line 18313 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                  { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 47424 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3189: /* opt_resource_group_priority: %empty  */
#line 18317 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.resource_group_priority_type).is_default= true; }
#line 47430 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3190: /* opt_resource_group_priority: THREAD_PRIORITY_SYM opt_equal signed_num  */
#line 18319 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 47439 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3191: /* opt_resource_group_enable_disable: %empty  */
#line 18326 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                 { (yyval.resource_group_state_type).is_default= true; }
#line 47445 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3192: /* opt_resource_group_enable_disable: ENABLE_SYM  */
#line 18328 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 47454 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3193: /* opt_resource_group_enable_disable: DISABLE_SYM  */
#line 18333 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 47463 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3194: /* opt_force: %empty  */
#line 18340 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.resource_group_flag_type)= false; }
#line 47469 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3195: /* opt_force: FORCE_SYM  */
#line 18341 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
                      { (yyval.resource_group_flag_type)= true; }
#line 47475 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;

  case 3196: /* json_attribute: TEXT_STRING_sys  */
#line 18347 "/home/wuy/ShannonBase/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg,
                  JsonDepthErrorHandler)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 47493 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"
    break;


#line 47497 "/home/wuy/ShannonBase/cmake_build_asan/sql/sql_yacc.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == MY_SQL_PARSER_EMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
    }

  yyerror_range[1] = yylloc;
  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= MY_SQL_PARSER_EOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == MY_SQL_PARSER_EOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = MY_SQL_PARSER_EMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  ++yylsp;
  YYLLOC_DEFAULT (*yylsp, yyerror_range, 2);

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;


#if !defined yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturn;
#endif


/*-------------------------------------------------------.
| yyreturn -- parsing is finished, clean up and return.  |
`-------------------------------------------------------*/
yyreturn:
  if (yychar != MY_SQL_PARSER_EMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

